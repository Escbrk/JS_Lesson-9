{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_super_prop_base.js","src/js/index.js","node_modules/@swc/helpers/lib/_get.js","node_modules/bootstrap.native/node_modules/.pnpm/@thednp+shorty@2.0.0/node_modules/@thednp/shorty/dist/shorty.mjs","node_modules/bootstrap.native/node_modules/.pnpm/@thednp+event-listener@2.0.4/node_modules/@thednp/event-listener/dist/event-listener.mjs","node_modules/bootstrap.native/src/strings/fadeClass.ts","node_modules/bootstrap.native/src/strings/showClass.ts","node_modules/bootstrap.native/src/strings/dataBsDismiss.ts","node_modules/bootstrap.native/src/strings/alertString.ts","node_modules/bootstrap.native/src/strings/alertComponent.ts","node_modules/bootstrap.native/src/components/base-component.ts","node_modules/bootstrap.native/src/components/alert.ts","node_modules/bootstrap.native/src/strings/activeClass.ts","node_modules/bootstrap.native/src/strings/dataBsToggle.ts","node_modules/bootstrap.native/src/strings/buttonComponent.ts","node_modules/bootstrap.native/src/components/button.ts","node_modules/bootstrap.native/src/strings/buttonString.ts","node_modules/bootstrap.native/src/strings/dataBsTarget.ts","node_modules/bootstrap.native/src/strings/carouselString.ts","node_modules/bootstrap.native/src/strings/carouselComponent.ts","node_modules/bootstrap.native/src/strings/dataBsParent.ts","node_modules/bootstrap.native/src/util/getTargetElement.ts","node_modules/bootstrap.native/src/strings/dataBsContainer.ts","node_modules/bootstrap.native/src/components/carousel.ts","node_modules/bootstrap.native/src/strings/collapsingClass.ts","node_modules/bootstrap.native/src/strings/collapseString.ts","node_modules/bootstrap.native/src/strings/collapseComponent.ts","node_modules/bootstrap.native/src/components/collapse.ts","node_modules/bootstrap.native/src/strings/dropdownClasses.ts","node_modules/bootstrap.native/src/strings/dropdownComponent.ts","node_modules/bootstrap.native/src/strings/dropdownMenuClass.ts","node_modules/bootstrap.native/src/util/isEmptyAnchor.ts","node_modules/bootstrap.native/src/components/dropdown.ts","node_modules/bootstrap.native/src/strings/modalString.ts","node_modules/bootstrap.native/src/strings/modalComponent.ts","node_modules/bootstrap.native/src/strings/offcanvasComponent.ts","node_modules/bootstrap.native/src/strings/stickyTopClass.ts","node_modules/bootstrap.native/src/strings/positionStickyClass.ts","node_modules/bootstrap.native/src/util/scrollbar.ts","node_modules/bootstrap.native/src/strings/fixedTopClass.ts","node_modules/bootstrap.native/src/strings/fixedBottomClass.ts","node_modules/bootstrap.native/src/strings/offcanvasString.ts","node_modules/bootstrap.native/src/util/popupContainer.ts","node_modules/bootstrap.native/src/util/backdrop.ts","node_modules/bootstrap.native/src/util/isVisible.ts","node_modules/bootstrap.native/src/components/modal.ts","node_modules/bootstrap.native/src/components/offcanvas.ts","node_modules/bootstrap.native/src/strings/popoverString.ts","node_modules/bootstrap.native/src/strings/popoverComponent.ts","node_modules/bootstrap.native/src/strings/tooltipString.ts","node_modules/bootstrap.native/src/util/getTipTemplate.ts","node_modules/bootstrap.native/src/util/tipClassPositions.ts","node_modules/bootstrap.native/src/util/styleTip.ts","node_modules/bootstrap.native/src/util/tooltipDefaults.ts","node_modules/bootstrap.native/src/strings/dataOriginalTitle.ts","node_modules/bootstrap.native/src/strings/tooltipComponent.ts","node_modules/bootstrap.native/src/util/setHtml.ts","node_modules/bootstrap.native/src/components/tooltip.ts","node_modules/bootstrap.native/src/util/getElementContainer.ts","node_modules/bootstrap.native/src/util/createTip.ts","node_modules/bootstrap.native/src/components/popover.ts","node_modules/bootstrap.native/src/strings/scrollspyString.ts","node_modules/bootstrap.native/src/strings/scrollspyComponent.ts","node_modules/bootstrap.native/src/components/scrollspy.ts","node_modules/bootstrap.native/src/strings/tabString.ts","node_modules/bootstrap.native/src/components/tab.ts","node_modules/bootstrap.native/src/strings/tabComponent.ts","node_modules/bootstrap.native/src/strings/toastString.ts","node_modules/bootstrap.native/src/strings/toastComponent.ts","node_modules/bootstrap.native/src/components/toast.ts","node_modules/bootstrap.native/src/util/init.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _superPropBase;\nvar _getPrototypeOf = _interopRequireDefault(require(\"./_get_prototype_of\"));\nfunction _superPropBase(object, property) {\n    while(!Object.prototype.hasOwnProperty.call(object, property)){\n        object = (0, _getPrototypeOf).default(object);\n        if (object === null) break;\n    }\n    return object;\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","// const myUser = {\n//   name: 'Max',\n//   age: 23,\n//   phoneNumber: 654654654,\n// };\n\n// const name = `{\"name\": \"Mango\"}`;\n\n// const str = JSON.stringify(myUser);\n// console.log(str);\n// console.log(JSON.parse(str));\n// console.log(JSON.parse(name));\n\n// const user = {\n//   name: 'Paul',\n//   age: 27,\n//   city: 'Calgary',\n// };\n\n// localStorage.setItem('data', JSON.stringify(user))\n\n// const result = JSON.parse(localStorage.getItem('data'))\n// console.log(result)\n\n// try {\n//   const result = JSON.parse(localStorage.getItem('key1'));\n//   console.log(result);\n// } catch {\n//   console.log('Error');\n// }\n\n//?_____________________________________________\n// import throttle from 'lodash.throttle';\n// import { saveToLS, loadFromLS } from '../helpers/helpers';\n\n// //! ВАРИАНТ БЕЗ ОБЪЕКТА\n// // const refs = {\n// //   form: document.querySelector('.js-feedback-form'),\n// // };\n// // afterReload();\n\n// // refs.form.addEventListener('input', throttle(onInput, 500));\n// // refs.form.addEventListener('submit', onSubmit);\n\n// // function onInput(e) {\n// //   const key = e.target.name;\n// //   const value = e.target.value;\n\n// //   saveToLS(key, value);\n// // }\n\n// // function afterReload() {\n// //   const name = loadFromLS('name');\n// //   const message = loadFromLS('message');\n\n// //   refs.form.elements.name.value = name || 'Anonymous';\n// //   refs.form.elements.message.value = message;\n// // }\n\n// // function onSubmit(e) {\n// //   e.preventDefault();\n// //   const name = refs.form.elements.name.value;\n// //   const message = refs.form.elements.message.value;\n\n// //   const obj = {\n// //     name,\n// //     message,\n// //   };\n\n// //   console.log(obj);\n\n// //   e.target.reset();\n// //   localStorage.removeItem('name');\n// //   localStorage.removeItem('message');\n// // }\n\n// //! ВАРИАНТ С ОБЪЕКТОМ\n// const refs = {\n//   form: document.querySelector('.js-feedback-form'),\n// };\n\n// refs.form.addEventListener('input', throttle(onInput, 500));\n// refs.form.addEventListener('submit', onSubmit);\n\n// function onInput() {\n//   const name = refs.form.elements.name.value;\n//   const message = refs.form.elements.message.value;\n\n//   const obj = {\n//     name,\n//     message,\n//   };\n//   saveToLS('formData', obj);\n// }\n\n// function afterReload() {\n//   const data = loadFromLS('formData');\n\n//   if (data) {\n//     refs.form.elements.name.value = data.name;\n//     refs.form.elements.message.value = data.message;\n//   } else {\n//     refs.form.elements.name.value = 'Anonymous';\n//   }\n// }\n\n// function onSubmit(e) {\n//   e.preventDefault();\n//   console.log(JSON.parse(localStorage.getItem('formData')));\n\n//   e.target.reset();\n//   localStorage.removeItem('formData');\n// }\n// afterReload();\n\n//?_____________________________________________\n\n//! setTimeout()\n// const logger = time =>\n//   console.log(`Лог через ${time}ms, потому что не отменили timeout`);\n\n// const timerId = setTimeout(logger, 2000, 2000);\n\n// const shouldCancelTimer = Math.random() > 0.3;\n// console.log(shouldCancelTimer)\n\n// if (shouldCancelTimer) {\n//     clearTimeout(timerId);\n// }\n\n//! setInterval()\n// const logger = time => console.log(`Лог каждые ${time}ms - ${Date.now()}`);\n\n// console.log('До вызова setInterval');\n// const intervalId = setInterval(logger, 2000, 2000);\n// console.log('После вызова setInterval');\n\n// const shouldCancelInterval = Math.random() > 0.3;\n// console.log(shouldCancelInterval)\n// if (shouldCancelInterval) {\n//   clearInterval(intervalId);\n// }\n\n//?_____________________________________________\n\n// console.log('До вызова setTimeout');\n// setTimeout(() => {\n//     console.log('Вызов отложенной функции')\n// }, 0)\n// console.log('После вызова setTimeout');\n\n//?_____________________________________________\n//* ОПОВЕЩЕНИЯ\n// const NOTIFICATION_DELAY = 3000;\n// const refs = {\n//   notification: document.querySelector('.js-alert'),\n// };\n// let timeoutId = null;\n\n// refs.notification.addEventListener('click', onClick);\n\n// showNotification();\n\n// function onClick() {\n//   hideNotification();\n//   clearTimeout(timeoutId);\n// }\n\n// function showNotification() {\n//   refs.notification.classList.add('is-visible');\n\n//   timeoutId = setTimeout(() => {\n//     hideNotification();\n//   }, NOTIFICATION_DELAY);\n// }\n\n// function hideNotification() {\n//   refs.notification.classList.remove('is-visible');\n// }\n\n//?_____________________________________________\nimport axios from 'axios';\nimport * as BSN from 'bootstrap.native';\n\n// const PROMPT_DELAY = 1000;\n// const MAX_PROMPT_ATTEMPTS = 3;\n\n// let promptCounter = 0;\n// let hasSubscribed = false;\n\n// const intervalId = setInterval(() => {\n//     if (promptCounter === MAX_PROMPT_ATTEMPTS || hasSubscribed) {\n//         clearInterval(intervalId);\n//         return\n//     }\n//     console.log('Подпишись на рассылку! - ' + Date.now());\n//     promptCounter += 1\n// }, PROMPT_DELAY);\n\n//?_____________________________________________\n// const modal = new BSN.Modal('#exampleModal');\n\n// const refs = {\n//   modal: document.querySelector('#exampleModal'),\n//   sunscribeBtn: document.querySelector('button[data-subscribe]'),\n// };\n// let promptCounter = 0;\n// let hasSubscribed = false;\n// const PROMPT_DELAY = 3000;\n// const MAX_PROMPT_ATTEMPTS = 3;\n\n// openModal();\n\n// refs.modal.addEventListener('hide.bs.modal', openModal);\n// refs.sunscribeBtn.addEventListener('click', onSubscribe);\n\n// function openModal() {\n//   if (promptCounter === MAX_PROMPT_ATTEMPTS || hasSubscribed) {\n//     console.log('Максимальное кол-во надоеданий или подписался!');\n//     return;\n//   }\n//   setTimeout(() => {\n//     console.log('Открываем надоедалку!');\n//     modal.show();\n//     promptCounter += 1;\n//   }, PROMPT_DELAY);\n// }\n\n// function onSubscribe() {\n//   hasSubscribed = true;\n//   modal.hide();\n// }\n\n//?_____________________________________________\n\n// const date = Date.now()\n\n// setTimeout(() => {\n//   const date2 = Date.now();\n\n//   console.log(date)\n//   console.log(date2)\n//   console.log(date2 - date)\n// }, 3000)\n\n//! TIMER\n\n// const refs = {\n//   clockface: document.querySelector('.js-clockface'),\n//   start: document.querySelector('button[data-action-start]'),\n//   stop: document.querySelector('button[data-action-stop]'),\n// };\n\n// class Timer {\n//   constructor({ onTick }) {\n//     this.intervalId = null;\n//     this.onTick = onTick;\n\n//     this.init();\n//   }\n\n//   init() {\n//     const time = this.getTimeComponents(0);\n\n//     this.onTick(time);\n//   }\n//   start() {\n//     const startTime = Date.now();\n\n//     this.intervalId = setInterval(() => {\n//       const currentTime = Date.now();\n//       const deltaTime = currentTime - startTime;\n\n//       const time = this.getTimeComponents(deltaTime);\n//       this.onTick(time);\n//     }, 1000);\n//     refs.start.disabled = true;\n//   }\n//   stop() {\n//     clearInterval(this.intervalId);\n//     refs.start.disabled = false;\n\n//     const time = this.getTimeComponents(0);\n//     this.onTick(time);\n//   }\n\n//   getTimeComponents(time) {\n//     const days = this.pad(Math.floor((time / (1000 * 60 * 60 * 24))));\n//     const hours = this.pad(\n//       Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n//     );\n//     const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n//     const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n//     return { days, hours, mins, secs };\n//   }\n\n//   pad(value) {\n//     return String(value).padStart(2, 0);\n//   }\n// }\n\n// const timer = new Timer({\n//   onTick: updClockface,\n// });\n\n// refs.start.addEventListener('click', timer.start.bind(timer));\n// refs.stop.addEventListener('click', timer.stop.bind(timer));\n\n// function updClockface({ days, hours, mins, secs }) {\n//   refs.clockface.textContent = `Day(s):${days} / Time: ${hours}:${mins}:${secs}`;\n// }\n\n//?_____________________________________________\n\n//! PROMISE\n\n// const promise = new Promise((res, rej) => {\n//   const canFulfill = Math.random() > 0.5;\n\n//   setTimeout(() => {\n//     if (canFulfill) {\n//       res('✅ Promise is succesfull');\n//     }\n\n//     rej(\"❌ Promise is't succesfull\");\n//   }, 1000);\n// });\n\n// promise.then(res => console.log(res)).catch(err => console.log(err))\n\n//?_____________________________________________\n\n//! ПРОМИСИФИКАЦИЯ\n//*   - Проблема доступа к результату промиса с колбеком\n//*   - Функция которая возвращает промис\n\n// const makeOrder = dish => {\n//   const DELAY = 1000;\n\n//   return new Promise((res, rej) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         res(`Вот ваше блюдо: ${dish}`);\n//       }\n//       rej('Такого блюда нет');\n//     }, DELAY);\n//   });\n// };\n\n// makeOrder('пирожок').then(onMakeOrderSucces).catch(onMakeOrderError);\n\n// function onMakeOrderSucces(result) {\n//   console.log('onMakeOrderSucces ->', result);\n// }\n\n// function onMakeOrderError(error) {\n//   console.error('onMakeOrderError ->', error);\n// }\n\n//?_____________________________________________\n\n/*\n *    Промисификация \"синхронных\" функций\n *      - Promise.resolve()\n *      - Promise.reject()\n */\n\n// const makeOrder = dish => {\n//   return Promise.resolve(`Вот ваше блюдо: ${dish}`);\n// };\n\n// makeOrder('пирожок').then(onMakeOrderSucces).catch(onMakeOrderError);\n\n// function onMakeOrderSucces(result) {\n//   console.log('onMakeOrderSucces ->', result);\n// }\n\n// function onMakeOrderError(error) {\n//   console.error('onMakeOrderError ->', error);\n// }\n\n//?_____________________________________________\n//! FETCH\n\n// const fetchPokemonById = id => {\n//   const BASE_URL = 'https://pokeapi.co/api/v2/pokemon';\n//   return fetch(`${BASE_URL}/${id}`).then(x => x.json());\n// };\n\n// fetchPokemonById(6)\n//   .then(result => console.log(result))\n//   .catch(err => console.log(err));\n\n// fetchPokemonById(10)\n//   .then(result => console.log(result))\n//   .catch(err => console.log(err));\n\n// fetchPokemonById(16)\n//   .then(result => console.log(result))\n//   .catch(err => console.log(err));\n\n// fetchPokemonById(60)\n//   .then(result => console.log(result))\n//   .catch(err => console.log(err));\n\n//?_____________________________________________\n\n// const makePromise = () =>\n//   new Promise((res, rej) => {\n//     const passed = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//       if (passed) {\n//         res('Resolve');\n//       }\n//       rej('Nope');\n//     }, 2000);\n//   });\n// makePromise()\n//   .then(result => console.log(result))\n//   .catch(err => console.error(err));\n\n//?_____________________________________________\n\n//! RACETRACK\n\n// const refs = {\n//   startBtn: document.querySelector('.js-start-btn'),\n//   winner: document.querySelector('.js-winner'),\n//   progress: document.querySelector('.js-progress'),\n//   tableBody: document.querySelector('.js-results-table > tbody'),\n// };\n// let raceCounter = 0;\n\n// refs.startBtn.addEventListener('click', startRace);\n\n// const horses = [\n//   'Secretariat',\n//   'Eclipse',\n//   'West Australian',\n//   'Flying Fox',\n//   'Seabiscuit',\n// ];\n// function startRace() {\n//   raceCounter += 1\n//   const promises = horses.map(run);\n\n//   updWinner('');\n//   updProgress('🤖 Заезд начался, ставки не принимаются!');\n\n//   determineWinner(promises);\n//   waitForAll(promises);\n// }\n// function run(horse) {\n//   return new Promise((res, rej) => {\n//     const time = getRandomeTime(2000, 3500);\n\n//     setTimeout(() => {\n//       res({ horse, time });\n//     }, time);\n//   });\n// }\n// function determineWinner(horsesP) {\n//   Promise.race(horsesP).then(({ horse, time }) => {\n//     updWinner(`🏅 Победил ${horse}, финишировав за ${time} времени`);\n//     updResult({ horse, time, raceCounter });\n//   });\n// }\n// function waitForAll(horsesP) {\n//   Promise.all(horsesP).then(() =>\n//     updProgress('🔚 Заезд окончен, принимаются ставки')\n//   );\n// }\n// function updResult({ horse, time, raceCounter }) {\n//   const tr = `\n//   <tr>\n//       <td>${raceCounter}</td>\n//       <td>${horse}</td>\n//       <td>${time}</td>\n//   </tr>`;\n//   refs.tableBody.insertAdjacentHTML('beforeend', tr);\n// }\n// function getRandomeTime(min, max) {\n//   return Math.floor(Math.random() * (max - min + 1) + min);\n// }\n// function updProgress(message) {\n//   refs.progress.textContent = message;\n// }\n// function updWinner(message) {\n//   refs.winner.textContent = message;\n// }\n\n/*\n *    Promise.race([]) для ожидания первого выполнившегося промиса\n */\n\n// Promise.race(promises).then(({ horse, time }) =>\n//   console.log(\n//     `%c🏅 Победил ${horse}, финишировав за ${time} времени`,\n//     'color: green; font-size: 14px'\n//   )\n// );\n\n// /*\n//  *    Promise.all([]) для ожидания всех промисов\n//  */\n\n// Promise.all(promises).then(() =>\n//   console.log(\n//     '%c🔚 Заезд окончен, принимаются ставки',\n//     'color: blue; font-size: 14px'\n//   )\n// );\n\n//?_____________________________________________\n\n// const id = setTimeout(() => {\n//   console.log('done')\n// }, 1000)\n\n//! setTimeout(callback, time, [...args])\n//? clearTimeout()\n\n// const id = setTimeout((name, country) => {\n//   console.log(`Hello my name is ${name}, i'm from ${country}`)\n// }, 1000, 'Paul', 'Canada')\n\n//! setInterval(callback, time, [...args])\n//? clearInterval()\n\n// const id = setInterval(() => {\n//   console.log('setInterval');\n\n//   setTimeout(() => {\n//     clearInterval(id);\n//   }, 5000);\n// }, 1000);\n\n//?_____________________________________________\n\n// ! Продам Гараж\n// const refs = {\n//   content: document.querySelector('.js-content'),\n//   time: document.querySelector('.js-text'),\n// };\n\n// let counter = 10;\n// refs.time.textContent = `Осталось ${counter} секунд`;\n\n//! v1\n// const id = setInterval(() => {\n//   counter -= 1;\n\n//   refs.time.textContent = `Осталось ${counter} секунд`;\n\n//   if (counter <= 0) {\n//     clearInterval(id);\n//     refs.content.style.display = 'none'\n//   }\n// }, 1000);\n\n//! v2\n// const id = setInterval(() => {\n//   counter -= 1;\n//   refs.time.textContent = `Осталось ${counter} секунд`;\n// }, 1000);\n\n// setTimeout(() => {\n//   clearInterval(id)\n//   refs.content.style.display = 'none';\n// }, counter * 1000)\n\n//?_____________________________________________\n\n// setInterval(() => {\n//   const currentDate = Date.now();\n//   const targetDate = new Date('Dec 31 2023');\n//   const result = targetDate - currentDate;\n\n//   console.log(result);\n// }, 1000);\n\n//?_____________________________________________\n\n// const promise = new Promise((res, rej) => {\n//   const rand = Math.random();\n\n//   setTimeout(() => {\n//     if (rand < 0.5) {\n//       res('✅');\n//     } else {\n//       rej('❌');\n//     }\n//   }, 0);\n// });\n\n// promise\n//   .then(data => console.log(`Then block. Result: ${data}`))\n//   .catch(err => console.error(`Catch block. Result: ${err}`))\n//   .finally(() => console.log('Finally block'));\n\n//?____________________________________________\n//! ИГРОВОЙ АВТОМАТ\n\n// import 'basiclightbox/dist/basicLightbox.min.css';\n// import * as basicLightbox from 'basiclightbox';\n\n// const refs = {\n//   startBtn: document.querySelector('.js-start'),\n//   container: document.querySelector('.js-container'),\n// };\n\n// refs.startBtn.addEventListener('click', onStart);\n\n// function onStart() {\n//   refs.startBtn.disabled = true;\n//   // const promises = [...refs.container.children].map(() => promiseFn());\n//   const promises = [...refs.container.children].map(promiseFn);\n\n//   Promise.allSettled(promises).then(items => {\n//     const isWinner =\n//       items.every(({ status }) => status === 'fulfilled') ||\n//       items.every(({ status }) => status === 'rejected');\n\n//     items.forEach((item, i) => {\n//       refs.container.children[i].textContent = '';\n\n//       setTimeout(() => {\n//         refs.container.children[i].textContent = item.value || item.reason;\n\n//         if (i === items.length - 1) {\n//           const instance = basicLightbox.create(\n//             `<h1>${isWinner ? 'Winner' : 'Loser'}</h1>`\n//           );\n\n//           instance.show();\n//           refs.startBtn.disabled = false;\n\n//           // setTimeout(() => {\n//           //   if (isWinner) alert('WINNER');\n//           // }, 1000)\n//         }\n//       }, 1000 * (i + 1));\n//     });\n//   });\n// }\n\n// function promiseFn() {\n//   return new Promise((res, rej) => {\n//     const rand = Math.random();\n\n//     if (rand > 0.5) {\n//       res('🤑');\n//     }\n//     rej('😈');\n//   });\n// }\n\n//?____________________________________________\n\n/*\n *    - HTTP-Запросы в браузере\n *      - Fetch API\n *      - Вкладка Network\n *      - HTTP-методы\n *      - Заголовки\n *      - MIME-типы\n *      - Параметры запроса\n *    - Документация REST API\n *    - Обработка 404 с fetch\n *    - Аутентификация\n *    - Библиотеки-обертки\n *    - https://pokeapi.co\n */\n\n// import pokemonCardTpl from '../pokemon-cards.hbs';\n// import API from './api-service';\n// import getRefs from './get-refs';\n\n// const refs = getRefs();\n\n// refs.searchForm.addEventListener('submit', onSearch);\n\n// function onSearch(e) {\n//   e.preventDefault();\n\n//   const form = e.currentTarget;\n//   const searchQuery = form.elements.query.value;\n\n//   API.fetchPokemon(searchQuery)\n//     .then(renderPokemonCard)\n//     .catch(onFetchError)\n//     .finally(() => form.reset());\n// }\n\n// function renderPokemonCard(pokemon) {\n//   const markup = pokemonCardTpl(pokemon);\n//   refs.container.innerHTML = markup;\n// }\n\n// function onFetchError(error) {\n//   alert('Ups, something went wrog(');\n// }\n\n//!===========================\n// const URL = 'https://newsapi.org/v2/everything?q=cars';\n// const options = {\n//   headers: {\n//     Authorization: '4330ebfabc654a6992c2aa792f3173a3',\n//   },\n// };\n// fetch(URL, options)\n//   .then(r => r.json())\n//   .then(console.log);\n\n// 4330ebfabc654a6992c2aa792f3173a3\n\n// !===========================\n//! Pagination\n// import NewsApiService from './news-service';\n// import articlesTpl from '../templates/articles.hbs';\n// import LoadMore from './load-more-btn';\n\n// const newsApiService = new NewsApiService();\n// const loadMoreBtn = new LoadMore({\n//   selector: '[data-action=\"load-more\"]',\n//   hidden: true,\n// });\n\n// const refs = {\n//   searchForm: document.querySelector('.js-search-form'),\n//   container: document.querySelector('.js-articles-container'),\n// };\n\n// refs.searchForm.addEventListener('submit', onSearch);\n// loadMoreBtn.refs.button.addEventListener('click', fetchArticles);\n\n// function onSearch(e) {\n//   e.preventDefault();\n\n//   newsApiService.query = e.currentTarget.elements.query.value;\n\n//   if (newsApiService.query === '') {\n//     return alert('Введи что-то нормальное!!!');\n//   }\n//   clearArticlesContainer();\n//   newsApiService.resetPage();\n//   loadMoreBtn.show();\n//   fetchArticles();\n// }\n\n// function appendArticlesMarkup(articles) {\n//   refs.container.insertAdjacentHTML('beforeend', articlesTpl(articles));\n// }\n\n// function clearArticlesContainer() {\n//   refs.container.innerHTML = '';\n// }\n\n// function fetchArticles() {\n//   loadMoreBtn.disable();\n//   newsApiService.fetchArticles().then(articles => {\n//     appendArticlesMarkup(articles);\n//     loadMoreBtn.enable();\n//   });\n// }\n//! Pagination\n\n// !===========================\n//* Симак\n\n// const URL = 'https://rickandmortyapi.com/api/character';\n\n// fetch(URL)\n//   .then(response => {\n//     if (!response.ok) {\n//       //*or \"!status.ok\"\n//       throw new Error('404 - Not Found!');\n//     }\n//     return response.json();\n//   })\n//   .then(({ results }) => console.log(results))\n//   .catch(console.error);\n\n// !===========================\n// import forecastTpl from '../templates/forecast.hbs';\n// import '../../node_modules/izitoast/dist/css/iziToast.min.css'\n// import iziToast from 'izitoast';\n\n// const refs = {\n//   form: document.querySelector('.js-search-form'),\n//   list: document.querySelector('.js-list'),\n//   cityName: document.querySelector('.js-city-name'),\n// };\n\n// refs.form.addEventListener('submit', onSubmit);\n\n// function onSubmit(e) {\n//   e.preventDefault();\n\n//   const form = e.currentTarget;\n//   const { days, city } = form.elements;\n//   fetchForecast(city.value, days.value)\n//     .then(({ forecast, location: { name, country } }) => {\n//       refs.cityName.textContent = `${name}, ${country}`;\n//       refs.list.innerHTML = forecastTpl(forecast);\n//     })\n//     .catch(err => {\n//       refs.cityName.textContent = '';\n//       refs.list.innerHTML = '';\n//       iziToast.show({\n//         message: `${err}`,\n//         color: 'red',\n//         position: 'topCenter'\n//       });\n//     })\n//     .finally(() => form.reset());\n// }\n\n// function fetchForecast(city, days) {\n//   const BASE_URL = 'http://api.weatherapi.com/v1';\n//   const ENDPOINT = 'forecast.json';\n\n//   const params = new URLSearchParams({\n//     key: '66f9e81543404d02beb160521230808',\n//     q: city,\n//     days,\n//     lang: 'ru',\n//   });\n\n//   return fetch(`${BASE_URL}/${ENDPOINT}?${params}`).then(response => {\n//     if (!response.ok) {\n//       throw new Error('404 - Not Found!');\n//     }\n\n//     return response.json();\n//   });\n// }\n\n//* Альтернативный вариант\n// function createMarkup(arr) {\n//   return arr\n//     .map(\n//       ({\n//         date,\n//         day: {\n//           avgtemp_c,\n//           condition: { text, icon },\n//         },\n//       }) => `\n//           <li>\n//       <img src=\"${icon}\" alt=\"${text}\" />\n//       <h2>${date}</h2>\n//       <h3>${text}</h3>\n//       <h3>${avgtemp_c}</h3>\n//     </li>\n//     `\n//     )\n//     .join('');\n// }\n\n// !===========================\n\n// https://developer.themoviedb.org/reference/trending-movies\n\n// 92a9a9e3708a3e9451b7037d5906879a\n// d0f00e3970f1028763a1388502d0f412\n\n// https://developer.themoviedb.org/docs/image-basics\n\n// https://api.themoviedb.org/3/trending/movie/week?api_key=d0f00e3970f1028763a1388502d0f412&page=500\n\n// import MovieApiServise from './movie-service';\n// const movieApiService = new MovieApiServise()\n\n// import axios from 'axios';\n// import moviesTpl from '../templates/movies.hbs';\n\n// const refs = {\n//   movieList: document.querySelector('.js-movie-list'),\n//   //   btnContainer: document.querySelector('.button-container'),\n//   loadMore: document.querySelector('.js-load-more'),\n// };\n\n// let pageCounter = 1;\n\n// const classes = {\n//   loadMoreHidden: 'load-more-hidden',\n// };\n\n// function fetchMovies() {\n//   const BASE_URL = 'https://api.themoviedb.org/3';\n//   const ENDPOINT = 'trending/movie/week';\n\n//   const params = new URLSearchParams({\n//     api_key: 'd0f00e3970f1028763a1388502d0f412',\n//     page: pageCounter,\n//   });\n\n//   //   return fetch(`${BASE_URL}/${ENDPOINT}?${params}`).then(response => {\n//   //     if (!response.ok) {\n//   //       throw new Error(response.statusText);\n//   //     }\n\n//   //     return response.json();\n//   //   });\n\n//   return axios\n//     .get(`${BASE_URL}/${ENDPOINT}?${params}`)\n//     .then(({ data }) => data);\n// }\n\n// function onClick() {\n//   pageCounter += 1;\n//   refs.loadMore.disabled = true;\n\n//   fetchMovies()\n//     .then(data => {\n//       refs.movieList.insertAdjacentHTML('beforeend', moviesTpl(data));\n//       refs.loadMore.disabled = false;\n\n//       if (data.page >= 500) {\n//         refs.loadMore.classList.add(classes.loadMoreHidden);\n//         refs.loadMore.removeEventListener('click', onClick);\n\n//         return;\n//       }\n//     })\n//     .catch(console.log);\n// }\n\n// fetchMovies()\n//   .then(data => {\n//     refs.movieList.innerHTML = moviesTpl(data);\n\n//     if (data.page < data.total_pages && data.page < 500) {\n//       refs.loadMore.classList.remove(classes.loadMoreHidden);\n//       refs.loadMore.addEventListener('click', onClick);\n//     }\n//   })\n//   .catch(console.log);\n\n// !===========================\n//! BACKEND\n//* GET\n\n// const BASE_URL = 'http://localhost:3000';\n// function fetchBooks() {\n//   return fetch(`${BASE_URL}/books`).then(res => res.json());\n// }\n\n// function fetchBookById(id) {\n//   return fetch(`${BASE_URL}/books/${id}`).then(res => res.json());\n// }\n\n// fetchBooks();\n// fetchBookById(2);\n\n//* POST\n\n// function addNewBook(book) {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(book),\n//   };\n\n//   return fetch(`${BASE_URL}/books`, options)\n//     .then(res => res.json())\n//     .then(console.log);\n// }\n\n// addNewBook({\n//   title: 'Test book CSS',\n//   author: 'Me',\n//   genres: ['CSS'],\n//   rating: 9,\n// });\n\n// addNewBook({\n//   title: 'Test book HTML',\n//   author: 'Me',\n//   genres: ['HTML'],\n//   rating: 7,\n// });\n\n//* PUT / PATCH\n\n// function updateBookById(update, id) {\n//   const options = {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(update),\n//   };\n\n//   return fetch(`${BASE_URL}/books/${id}`, options).then(res => res.json());\n// }\n\n// updateBookById({ title: 'The BIG new book NODE.JS' }, 10);\n\n// updateBookById({ rating: 1 }, 11);\n\n// updateBookById({ rating: 2, author: 'Mango' }, 7);\n\n//* DELETE\n\n// function removeBook(id) {\n//   const url = `${BASE_URL}/books/${id}`;\n//   const options = {\n//     method: 'DELETE',\n//   };\n\n//   return fetch(url, options).then(res => res.json());\n// }\n\n// removeBook(10);\n// removeBook(11);\n\n// !===========================\n//* try...catch\n\n// try {\n//   console.log('Внутри try до myVar');\n\n//   myVar;\n\n//   console.log('Внутри try после myVar');\n// } catch {\n//   console.error(error);\n// }\n// console.log('После try...catch');\n\n// !===========================\n\n// const validJSON = '{ \"name\": \"mango\", \"age\": 3 }';\n// const invalidJSON = '{ backend вернул вот такое чудо }';\n\n// try {\n//   console.log(1);\n//   // console.log(JSON.parse(validJSON))\n//   console.log(JSON.parse(invalidJSON));\n//   console.log(2);\n// } catch (error) {\n//   console.log(error);\n//   if (error.name === 'SyntaxError') {\n//     console.log('Ошибка парса JSON');\n//   }\n// }\n\n// console.log('после error')\n\n// !===========================\n//* ASYNC / AWAIT\n\n// async function fn() {\n//   //\n// }\n\n// const fn = async function () {\n//   //\n// };\n\n// const arr = async () => {\n//   //\n// };\n\n// const x = {\n//   async getName() {\n//     //\n//   },\n// };\n\n// class X = {\n//     async getName() {\n//         //\n//     }\n// }\n\n// ?===========================\n\n// function getFruit(name) {\n//   const fruits = {\n//     strawberry: '🍓',\n//     kiwi: '🥝',\n//     apple: '🍎',\n//   };\n\n//   return new Promise((resolve, reject) =>\n//     setTimeout(() => resolve(fruits[name]), 500)\n//   );\n// }\n\n// async function aMakeSmoothie() {\n//   try {\n//     console.time('aMakeSmoothie');\n//     const apple = getFruit('apple');\n//     const kiwi = getFruit('kiwi');\n\n//     const fruits = await Promise.all([apple, kiwi]);\n//     console.log(fruits);\n//     console.timeEnd('aMakeSmoothie');\n\n//     return fruits;\n//   } catch (error) {\n//     console.error(error);\n//   }\n// }\n\n// function makeSmoothie() {\n//     getFruit('apple').then(apple => {\n//         console.log(apple)\n\n//         getFruit('kiwi').then(console.log)\n//     });\n\n// }\n\n// aMakeSmoothie().then(console.log)\n\n// !===========================\n\n// const BASE_URL = 'http://localhost:3000';\n\n// async function fetchBooks() {\n//   const response = await fetch(`${BASE_URL}/books`);\n//   return await response.json();\n// }\n\n// async function fetchBookById(id) {\n//   const response = await fetch(`${BASE_URL}/books/${id}`);\n//   return await response.json();\n// }\n\n// async function addNewBook(book) {\n//   const options = {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(book),\n//   };\n\n//   const response = await fetch(`${BASE_URL}/books`, options);\n//   return await response.json();\n// }\n\n// async function addBookAndUpdateUI() {\n//   try {\n//     const book = await addNewBook({});\n//     console.log(book);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// async function removeBook(id) {\n//   const url = `${BASE_URL}/books/${id}`;\n//   const options = {\n//     method: 'DELETE',\n//   };\n\n//   return await fetch(url, options);\n// }\n\n// async function updateBookById(update, id) {\n//   const options = {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(update),\n//   };\n\n//   const response = await fetch(`${BASE_URL}/books/${id}`, options);\n//   return await response.json();\n// }\n\n// async function addAndRenderBook() {\n//   try {\n//     const book = await addNewBook({});\n//     console.log(book);\n//   } catch (error) {\n//     console.log(error);\n//   }\n// }\n\n// !===========================\n//! CRUD\n//* Симак\n\n// const URL = 'https://jsonplaceholder.typicode.com/posts';\n\n//  ******************** CREATE - POST ********************\n\n// const newPost = {\n//   userID: 777,\n//   title: 'My NEW POST',\n//   body: 'qweqwe',\n// };\n\n// fetch(URL, {\n//   method: 'POST',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   body: JSON.stringify([newPost, newPost2]),\n// }).then(res => {\n//     if (!res.ok) {\n//       throw new Error(res.statusText);\n//     }\n\n//     return res.json();\n//   })\n//   .then(console.log)\n//   .catch(console.log);\n\n// axios.post(URL, newPost).then(console.log).catch(console.log);\n//  ******************** READ - GET ********************\n\n// fetch(URL)\n//   .then(res => {\n//     if (!res.ok) {\n//       throw new Error(res.statusText);\n//     }\n\n//     return res.json();\n//   })\n//   .then(console.log)\n//   .catch(console.log);\n\n// axios.get(URL).then(response => console.log(response.data)).catch(console.log);\n\n//  ******************** UPDATE - PATCH ********************\n\n// const updatedPost = {\n//   title: 'My NEW POST updated',\n// };\n\n// fetch(`${URL}/${1}`, {\n//   method: 'PATCH',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   body: JSON.stringify(updatedPost),\n// })\n//   .then(res => {\n//     if (!res.ok) {\n//       throw new Error(res.statusText);\n//     }\n\n//     return res.json();\n//   })\n//   .then(console.log)\n//   .catch(console.log);\n\n// axios.patch(`${URL}/${1}`, updatedPost).then(console.log).catch(console.log);\n\n//  ******************** UPDATE - PUT ********************\n\n// fetch(`${URL}/${1}`, {\n//   method: 'PUT',\n//   headers: {\n//     'Content-Type': 'application/json',\n//   },\n//   body: JSON.stringify(updatedPost),\n// })\n//   .then(res => {\n//     if (!res.ok) {\n//       throw new Error(res.statusText);\n//     }\n\n//     return res.json();\n//   })\n//   .then(console.log)\n//   .catch(console.log);\n\n// axios.put(`${URL}/${1}`, updatedPost).then(console.log).catch(console.log);\n\n//  ******************** DELETE - DELETE ********************\n\n// fetch(`${URL}/${1}`, {\n//   method: 'DELETE',\n// })\n//   .then(res => {\n//     if (!res.ok) {\n//       throw new Error(res.statusText);\n//     }\n\n//     return res.json();\n//   })\n//   .then(console.log)\n//   .catch(console.log);\n\n// axios.delete(`${URL}/${1}`, updatedPost).then(console.log).catch(console.log);\n\n// !===========================\nimport getUsers from './questions';\n\nconst form = document.querySelector('.js-question');\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const { userName, phone, email, question } = e.currentTarget.elements;\n\n  const userData = {\n    name: userName.value,\n    phone: phone.value,\n    email: email.value,\n    comment: question.value,\n  };\n  console.log(userData);\n\n  createQuestionService(userData)\n    .then(data => alert('Thx'))\n    .catch(console.error)\n    .finally(() => form.reset());\n}\n\nfunction createQuestionService(data) {\n  const BASE_URL = ' http://localhost:3000';\n  const ENDPOINT = 'people';\n\n  return axios\n    .post(`${BASE_URL}/${ENDPOINT}`, data)\n    .then(data => console.log(data));\n}\n\nfunction deletePostById(id) {\n  return axios.delete(`http://localhost:3000/people/${id}`);\n}\n\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _get;\nvar _superPropBase = _interopRequireDefault(require(\"./_super_prop_base\"));\nfunction _get(target, property, receiver) {\n    return get(target, property, receiver);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\nfunction get(target1, property1, receiver1) {\n    if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        get = Reflect.get;\n    } else {\n        get = function get(target, property, receiver) {\n            var base = (0, _superPropBase).default(target, property);\n            if (!base) return;\n            var desc = Object.getOwnPropertyDescriptor(base, property);\n            if (desc.get) {\n                return desc.get.call(receiver || target);\n            }\n            return desc.value;\n        };\n    }\n    return get(target1, property1, receiver1);\n}\n","const pe = \"aria-checked\", me = \"aria-description\", fe = \"aria-describedby\", ge = \"aria-expanded\", ve = \"aria-haspopup\", Ee = \"aria-hidden\", be = \"aria-label\", he = \"aria-labelledby\", ye = \"aria-modal\", we = \"aria-pressed\", Ae = \"aria-selected\", Se = \"aria-valuemin\", Ne = \"aria-valuemax\", ke = \"aria-valuenow\", Me = \"aria-valuetext\", q = \"abort\", G = \"beforeunload\", J = \"blur\", K = \"change\", X = \"contextmenu\", P = \"DOMContentLoaded\", Y = \"DOMMouseScroll\", Z = \"error\", $ = \"focus\", _ = \"focusin\", tt = \"focusout\", et = \"gesturechange\", nt = \"gestureend\", ot = \"gesturestart\", st = \"keydown\", ct = \"keypress\", rt = \"keyup\", at = \"load\", it = \"click\", ut = \"dblclick\", lt = \"mousedown\", dt = \"mouseup\", pt = \"hover\", mt = \"mouseenter\", ft = \"mouseleave\", gt = \"mousein\", vt = \"mouseout\", Et = \"mouseover\", bt = \"mousemove\", ht = \"mousewheel\", yt = \"move\", wt = \"orientationchange\", At = \"pointercancel\", St = \"pointerdown\", Nt = \"pointerleave\", kt = \"pointermove\", Mt = \"pointerup\", Tt = \"readystatechange\", Dt = \"reset\", Ct = \"resize\", Ot = \"select\", Lt = \"selectend\", It = \"selectstart\", zt = \"scroll\", xt = \"submit\", Vt = \"touchstart\", Bt = \"touchmove\", Ht = \"touchcancel\", Pt = \"touchend\", Ft = \"unload\", Te = {\n  DOMContentLoaded: P,\n  DOMMouseScroll: Y,\n  abort: q,\n  beforeunload: G,\n  blur: J,\n  change: K,\n  click: it,\n  contextmenu: X,\n  dblclick: ut,\n  error: Z,\n  focus: $,\n  focusin: _,\n  focusout: tt,\n  gesturechange: et,\n  gestureend: nt,\n  gesturestart: ot,\n  hover: pt,\n  keydown: st,\n  keypress: ct,\n  keyup: rt,\n  load: at,\n  mousedown: lt,\n  mousemove: bt,\n  mousein: gt,\n  mouseout: vt,\n  mouseenter: mt,\n  mouseleave: ft,\n  mouseover: Et,\n  mouseup: dt,\n  mousewheel: ht,\n  move: yt,\n  orientationchange: wt,\n  pointercancel: At,\n  pointerdown: St,\n  pointerleave: Nt,\n  pointermove: kt,\n  pointerup: Mt,\n  readystatechange: Tt,\n  reset: Dt,\n  resize: Ct,\n  scroll: zt,\n  select: Ot,\n  selectend: Lt,\n  selectstart: It,\n  submit: xt,\n  touchcancel: Ht,\n  touchend: Pt,\n  touchmove: Bt,\n  touchstart: Vt,\n  unload: Ft\n}, De = \"drag\", Ce = \"dragstart\", Oe = \"dragenter\", Le = \"dragleave\", Ie = \"dragover\", ze = \"dragend\", xe = \"loadstart\", Ve = {\n  start: \"mousedown\",\n  end: \"mouseup\",\n  move: \"mousemove\",\n  cancel: \"mouseleave\"\n}, Be = { down: \"mousedown\", up: \"mouseup\" }, He = \"onmouseleave\" in document ? [\"mouseenter\", \"mouseleave\"] : (\n  /* istanbul ignore next */\n  [\"mouseover\", \"mouseout\"]\n), Pe = {\n  start: \"touchstart\",\n  end: \"touchend\",\n  move: \"touchmove\",\n  cancel: \"touchcancel\"\n}, Fe = { in: \"focusin\", out: \"focusout\" }, Ue = {\n  Backspace: \"Backspace\",\n  //  8\n  Tab: \"Tab\",\n  //  9\n  Enter: \"Enter\",\n  // 13\n  Shift: \"Shift\",\n  // 16\n  Control: \"Control\",\n  // 17\n  Alt: \"Alt\",\n  // 18\n  Pause: \"Pause\",\n  // 19\n  CapsLock: \"CapsLock\",\n  // 20\n  Escape: \"Escape\",\n  // 27\n  Scape: \"Space\",\n  // 32\n  ArrowLeft: \"ArrowLeft\",\n  // 37\n  ArrowUp: \"ArrowUp\",\n  // 38\n  ArrowRight: \"ArrowRight\",\n  // 39\n  ArrowDown: \"ArrowDown\",\n  // 40\n  Insert: \"Insert\",\n  // 45\n  Delete: \"Delete\",\n  // 46\n  Meta: \"Meta\",\n  // 91 windows key\n  ContextMenu: \"ContextMenu\",\n  // 93\n  ScrollLock: \"ScrollLock\"\n  // 145\n}, We = \"Alt\", Re = \"ArrowDown\", Qe = \"ArrowUp\", je = \"ArrowLeft\", qe = \"ArrowRight\", Ge = \"Backspace\", Je = \"CapsLock\", Ke = \"Control\", Xe = \"Delete\", Ye = \"Enter\", Ze = \"NumpadEnter\", $e = \"Escape\", _e = \"Insert\", tn = \"Meta\", en = \"Pause\", nn = \"ScrollLock\", on = \"Shift\", sn = \"Space\", cn = \"Tab\", Ut = \"animationDuration\", Wt = \"animationDelay\", F = \"animationName\", D = \"animationend\", Rt = \"transitionDuration\", Qt = \"transitionDelay\", C = \"transitionend\", U = \"transitionProperty\", rn = \"addEventListener\", an = \"removeEventListener\", un = {\n  linear: \"linear\",\n  easingSinusoidalIn: \"cubic-bezier(0.47,0,0.745,0.715)\",\n  easingSinusoidalOut: \"cubic-bezier(0.39,0.575,0.565,1)\",\n  easingSinusoidalInOut: \"cubic-bezier(0.445,0.05,0.55,0.95)\",\n  easingQuadraticIn: \"cubic-bezier(0.550,0.085,0.680,0.530)\",\n  easingQuadraticOut: \"cubic-bezier(0.250,0.460,0.450,0.940)\",\n  easingQuadraticInOut: \"cubic-bezier(0.455,0.030,0.515,0.955)\",\n  easingCubicIn: \"cubic-bezier(0.55,0.055,0.675,0.19)\",\n  easingCubicOut: \"cubic-bezier(0.215,0.61,0.355,1)\",\n  easingCubicInOut: \"cubic-bezier(0.645,0.045,0.355,1)\",\n  easingQuarticIn: \"cubic-bezier(0.895,0.03,0.685,0.22)\",\n  easingQuarticOut: \"cubic-bezier(0.165,0.84,0.44,1)\",\n  easingQuarticInOut: \"cubic-bezier(0.77,0,0.175,1)\",\n  easingQuinticIn: \"cubic-bezier(0.755,0.05,0.855,0.06)\",\n  easingQuinticOut: \"cubic-bezier(0.23,1,0.32,1)\",\n  easingQuinticInOut: \"cubic-bezier(0.86,0,0.07,1)\",\n  easingExponentialIn: \"cubic-bezier(0.95,0.05,0.795,0.035)\",\n  easingExponentialOut: \"cubic-bezier(0.19,1,0.22,1)\",\n  easingExponentialInOut: \"cubic-bezier(1,0,0,1)\",\n  easingCircularIn: \"cubic-bezier(0.6,0.04,0.98,0.335)\",\n  easingCircularOut: \"cubic-bezier(0.075,0.82,0.165,1)\",\n  easingCircularInOut: \"cubic-bezier(0.785,0.135,0.15,0.86)\",\n  easingBackIn: \"cubic-bezier(0.6,-0.28,0.735,0.045)\",\n  easingBackOut: \"cubic-bezier(0.175,0.885,0.32,1.275)\",\n  easingBackInOut: \"cubic-bezier(0.68,-0.55,0.265,1.55)\"\n}, ln = \"offsetHeight\", dn = \"offsetWidth\", pn = \"scrollHeight\", mn = \"scrollWidth\", fn = \"tabindex\", jt = navigator.userAgentData, A = jt, { userAgent: qt } = navigator, S = qt, z = /iPhone|iPad|iPod|Android/i;\nlet O = !1;\nA ? O = A.brands.some((t) => z.test(t.brand)) : O = z.test(S);\nconst gn = O, x = /(iPhone|iPod|iPad)/, vn = A ? A.brands.some((t) => x.test(t.brand)) : (\n  /* istanbul ignore next */\n  x.test(S)\n), En = S ? S.includes(\"Firefox\") : (\n  /* istanbul ignore next */\n  !1\n), { head: N } = document, bn = [\"webkitPerspective\", \"perspective\"].some((t) => t in N.style), Gt = (t, e, n, o) => {\n  const s = o || !1;\n  t.addEventListener(e, n, s);\n}, Jt = (t, e, n, o) => {\n  const s = o || !1;\n  t.removeEventListener(e, n, s);\n}, Kt = (t, e, n, o) => {\n  const s = (r) => {\n    (r.target === t || r.currentTarget === t) && (n.apply(t, [r]), Jt(t, e, s, o));\n  };\n  Gt(t, e, s, o);\n}, Xt = () => {\n}, hn = (() => {\n  let t = !1;\n  try {\n    const e = Object.defineProperty({}, \"passive\", {\n      get: () => (t = !0, t)\n    });\n    Kt(document, P, Xt, e);\n  } catch {\n  }\n  return t;\n})(), yn = [\"webkitTransform\", \"transform\"].some((t) => t in N.style), wn = \"ontouchstart\" in window || /* istanbul ignore next */\n\"msMaxTouchPoints\" in navigator, An = [\"webkitAnimation\", \"animation\"].some((t) => t in N.style), Sn = [\"webkitTransition\", \"transition\"].some((t) => t in N.style), Yt = (t, e) => t.getAttribute(e), Nn = (t, e, n) => e.getAttributeNS(t, n), kn = (t, e) => t.hasAttribute(e), Mn = (t, e, n) => e.hasAttributeNS(t, n), Tn = (t, e, n) => t.setAttribute(e, n), Dn = (t, e, n, o) => e.setAttributeNS(t, n, o), Cn = (t, e) => t.removeAttribute(e), On = (t, e, n) => e.removeAttributeNS(t, n), Ln = (t, ...e) => {\n  t.classList.add(...e);\n}, In = (t, ...e) => {\n  t.classList.remove(...e);\n}, zn = (t, e) => t.classList.contains(e), { body: xn } = document, { documentElement: Vn } = document, Bn = (t) => Array.from(t), v = (t) => t != null && typeof t == \"object\" || !1, i = (t) => v(t) && typeof t.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some((e) => t.nodeType === e) || !1, u = (t) => i(t) && t.nodeType === 1 || !1, E = /* @__PURE__ */ new Map(), L = {\n  data: E,\n  /**\n   * Sets web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @param instance the component instance\n   */\n  set: (t, e, n) => {\n    if (!u(t))\n      return;\n    E.has(e) || E.set(e, /* @__PURE__ */ new Map()), E.get(e).set(t, n);\n  },\n  /**\n   * Returns all instances for specified component.\n   *\n   * @param component the component's name or a unique key\n   * @returns all the component instances\n   */\n  getAllFor: (t) => E.get(t) || null,\n  /**\n   * Returns the instance associated with the target.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   * @returns the instance\n   */\n  get: (t, e) => {\n    if (!u(t) || !e)\n      return null;\n    const n = L.getAllFor(e);\n    return t && n && n.get(t) || null;\n  },\n  /**\n   * Removes web components data.\n   *\n   * @param element target element\n   * @param component the component's name or a unique key\n   */\n  remove: (t, e) => {\n    const n = L.getAllFor(e);\n    !n || !u(t) || (n.delete(t), n.size === 0 && E.delete(e));\n  }\n}, Hn = (t, e) => L.get(t, e), k = (t) => typeof t == \"string\" || !1, W = (t) => v(t) && t.constructor.name === \"Window\" || !1, R = (t) => i(t) && t.nodeType === 9 || !1, d = (t) => W(t) ? t.document : R(t) ? t : i(t) ? t.ownerDocument : window.document, M = (t, ...e) => Object.assign(t, ...e), Zt = (t) => {\n  if (!t)\n    return;\n  if (k(t))\n    return d().createElement(t);\n  const { tagName: e } = t, n = Zt(e);\n  if (!n)\n    return;\n  const o = { ...t };\n  return delete o.tagName, M(n, o);\n}, $t = (t, e) => {\n  if (!t || !e)\n    return;\n  if (k(e))\n    return d().createElementNS(t, e);\n  const { tagName: n } = e, o = $t(t, n);\n  if (!o)\n    return;\n  const s = { ...e };\n  return delete s.tagName, M(o, s);\n}, Q = (t, e) => t.dispatchEvent(e), Pn = (t, e, n) => n.indexOf(t) === e, g = (t, e) => {\n  const n = getComputedStyle(t), o = e.replace(\"webkit\", \"Webkit\").replace(/([A-Z])/g, \"-$1\").toLowerCase();\n  return n.getPropertyValue(o);\n}, _t = (t) => {\n  const e = g(t, F), n = g(t, Wt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, te = (t) => {\n  const e = g(t, F), n = g(t, Ut), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : 0;\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Fn = (t, e) => {\n  let n = 0;\n  const o = new Event(D), s = te(t), r = _t(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(D, a), n = 1);\n    };\n    t.addEventListener(D, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, ee = (t) => {\n  const e = g(t, U), n = g(t, Qt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, ne = (t) => {\n  const e = g(t, U), n = g(t, Rt), o = n.includes(\"ms\") ? (\n    /* istanbul ignore next */\n    1\n  ) : 1e3, s = e && e !== \"none\" ? parseFloat(n) * o : (\n    /* istanbul ignore next */\n    0\n  );\n  return Number.isNaN(s) ? (\n    /* istanbul ignore next */\n    0\n  ) : s;\n}, Un = (t, e) => {\n  let n = 0;\n  const o = new Event(C), s = ne(t), r = ee(t);\n  if (s) {\n    const a = (l) => {\n      l.target === t && (e.apply(t, [l]), t.removeEventListener(C, a), n = 1);\n    };\n    t.addEventListener(C, a), setTimeout(() => {\n      n || Q(t, o);\n    }, s + r + 17);\n  } else\n    e.apply(t, [o]);\n}, Wn = (t) => Float32Array.from(Array.from(t)), Rn = (t) => Float64Array.from(Array.from(t)), Qn = (t, e) => t.focus(e), V = (t) => [\"true\", !0].includes(t) ? !0 : [\"false\", !1].includes(t) ? !1 : [\"null\", \"\", null, void 0].includes(t) ? null : t !== \"\" && !Number.isNaN(+t) ? +t : t, w = (t) => Object.entries(t), oe = (t) => t.toLowerCase(), jn = (t, e, n, o) => {\n  const s = { ...n }, r = { ...t.dataset }, a = { ...e }, l = {}, p = \"title\";\n  return w(r).forEach(([c, m]) => {\n    const y = o && typeof c == \"string\" && c.includes(o) ? c.replace(o, \"\").replace(/[A-Z]/g, (j) => oe(j)) : c;\n    l[y] = V(m);\n  }), w(s).forEach(([c, m]) => {\n    s[c] = V(m);\n  }), w(e).forEach(([c, m]) => {\n    c in s ? a[c] = s[c] : c in l ? a[c] = l[c] : a[c] = c === p ? Yt(t, p) : m;\n  }), a;\n}, qn = (t, e) => v(t) && (Object.hasOwn(t, e) || e in t), Gn = (t) => Object.keys(t), Jn = (t) => Object.values(t), Kn = (t) => Object.fromEntries(t), Xn = (t, e) => {\n  const n = new CustomEvent(t, {\n    cancelable: !0,\n    bubbles: !0\n  });\n  return v(e) && M(n, e), n;\n}, Yn = { passive: !0 }, Zn = (t) => t.offsetHeight, $n = (t, e) => {\n  w(e).forEach(([n, o]) => {\n    if (o && k(n) && n.includes(\"--\"))\n      t.style.setProperty(n, o);\n    else {\n      const s = {};\n      s[n] = o, M(t.style, s);\n    }\n  });\n}, I = (t) => v(t) && t.constructor.name === \"Map\" || !1, se = (t) => typeof t == \"number\" || !1, f = /* @__PURE__ */ new Map(), _n = {\n  /**\n   * Sets a new timeout timer for an element, or element -> key association.\n   *\n   * @param element target element\n   * @param callback the callback\n   * @param delay the execution delay\n   * @param key a unique key\n   */\n  set: (t, e, n, o) => {\n    u(t) && (o && o.length ? (f.has(t) || f.set(t, /* @__PURE__ */ new Map()), f.get(t).set(o, setTimeout(e, n))) : f.set(t, setTimeout(e, n)));\n  },\n  /**\n   * Returns the timer associated with the target.\n   *\n   * @param element target element\n   * @param key a unique\n   * @returns the timer\n   */\n  get: (t, e) => {\n    if (!u(t))\n      return null;\n    const n = f.get(t);\n    return e && n && I(n) ? n.get(e) || /* istanbul ignore next */\n    null : se(n) ? n : null;\n  },\n  /**\n   * Clears the element's timer.\n   *\n   * @param element target element\n   * @param key a unique key\n   */\n  clear: (t, e) => {\n    if (!u(t))\n      return;\n    const n = f.get(t);\n    e && e.length && I(n) ? (clearTimeout(n.get(e)), n.delete(e), n.size === 0 && f.delete(t)) : (clearTimeout(n), f.delete(t));\n  }\n}, to = (t) => t.toUpperCase(), h = (t, e) => {\n  const { width: n, height: o, top: s, right: r, bottom: a, left: l } = t.getBoundingClientRect();\n  let p = 1, c = 1;\n  if (e && u(t)) {\n    const { offsetWidth: m, offsetHeight: y } = t;\n    p = m > 0 ? Math.round(n) / m : (\n      /* istanbul ignore next */\n      1\n    ), c = y > 0 ? Math.round(o) / y : (\n      /* istanbul ignore next */\n      1\n    );\n  }\n  return {\n    width: n / p,\n    height: o / c,\n    top: s / c,\n    right: r / p,\n    bottom: a / c,\n    left: l / p,\n    x: l / p,\n    y: s / c\n  };\n}, eo = (t) => d(t).body, T = (t) => d(t).documentElement, no = (t) => d(t).head, oo = (t) => {\n  const e = W(t), n = e ? t.scrollX : t.scrollLeft, o = e ? t.scrollY : t.scrollTop;\n  return { x: n, y: o };\n}, ce = (t) => i(t) && t.constructor.name === \"ShadowRoot\" || !1, so = (t) => t.nodeName === \"HTML\" ? t : u(t) && t.assignedSlot || // step into the shadow DOM of the parent of a slotted node\ni(t) && t.parentNode || // DOM Element detected\nce(t) && t.host || // ShadowRoot detected\nT(t), re = (t) => {\n  if (!u(t))\n    return !1;\n  const { width: e, height: n } = h(t), { offsetWidth: o, offsetHeight: s } = t;\n  return Math.round(e) !== o || Math.round(n) !== s;\n}, co = (t, e, n) => {\n  const o = u(e), s = h(t, o && re(e)), r = { x: 0, y: 0 };\n  if (o) {\n    const a = h(e, !0);\n    r.x = a.x + e.clientLeft, r.y = a.y + e.clientTop;\n  }\n  return {\n    x: s.left + n.x - r.x,\n    y: s.top + n.y - r.y,\n    width: s.width,\n    height: s.height\n  };\n};\nlet B = 0, H = 0;\nconst b = /* @__PURE__ */ new Map(), ae = (t, e) => {\n  let n = e ? B : H;\n  if (e) {\n    const o = ae(t), s = b.get(o) || /* @__PURE__ */ new Map();\n    b.has(o) || b.set(o, s), I(s) && !s.has(e) ? (s.set(e, n), B += 1) : n = s.get(e);\n  } else {\n    const o = t.id || t;\n    b.has(o) ? n = b.get(o) : (b.set(o, n), H += 1);\n  }\n  return n;\n}, ro = (t) => {\n  var e;\n  return t ? R(t) ? t.defaultView : i(t) ? (e = t == null ? void 0 : t.ownerDocument) == null ? void 0 : e.defaultView : t : window;\n}, ie = (t) => Array.isArray(t) || !1, ao = (t) => i(t) && t.nodeName === \"CANVAS\" || !1, ue = (t) => u(t) && !!t.shadowRoot || !1, io = (t) => i(t) && [1, 2, 3, 4, 5, 6, 7, 8].some((e) => t.nodeType === e) || !1, uo = (t) => {\n  if (!i(t))\n    return !1;\n  const { top: e, bottom: n } = h(t), { clientHeight: o } = T(t);\n  return e <= o && n >= 0;\n}, lo = (t) => {\n  if (!i(t))\n    return !1;\n  const { clientWidth: e, clientHeight: n } = T(t), { top: o, left: s, bottom: r, right: a } = h(t, !0);\n  return o >= 0 && s >= 0 && r <= n && a <= e;\n}, po = (t) => ie(t) && t.every(u) || !1, mo = (t) => typeof t == \"function\" || !1, fo = (t) => v(t) && t.constructor.name === \"HTMLCollection\" || !1, go = (t) => u(t) && t.tagName === \"IMG\" || !1, vo = (t) => {\n  if (!k(t))\n    return !1;\n  try {\n    JSON.parse(t);\n  } catch {\n    return !1;\n  }\n  return !0;\n}, Eo = (t) => v(t) && t.constructor.name === \"WeakMap\" || !1, bo = (t) => i(t) && [\"SVG\", \"Image\", \"Video\", \"Canvas\"].some((e) => t.constructor.name.includes(e)) || !1, ho = (t) => v(t) && t.constructor.name === \"NodeList\" || !1, yo = (t) => T(t).dir === \"rtl\", wo = (t) => i(t) && t.constructor.name.includes(\"SVG\") || !1, Ao = (t) => i(t) && [\"TABLE\", \"TD\", \"TH\"].includes(t.nodeName) || !1, le = (t, e) => t ? t.closest(e) || // break out of `ShadowRoot`\nle(t.getRootNode().host, e) : null, So = (t, e) => u(t) ? t : (i(e) ? e : d()).querySelector(t), de = (t, e) => (i(e) ? e : d()).getElementsByTagName(t), No = (t) => [...de(\"*\", t)].filter(ue), ko = (t, e) => d(e).getElementById(t) || null, Mo = (t, e) => (i(e) ? e : d()).querySelectorAll(t), To = (t, e) => (e && i(e) ? e : d()).getElementsByClassName(\n  t\n), Do = (t, e) => t.matches(e), Co = \"2.0.0\";\nexport {\n  Bn as ArrayFrom,\n  P as DOMContentLoadedEvent,\n  Y as DOMMouseScrollEvent,\n  L as Data,\n  Wn as Float32ArrayFrom,\n  Rn as Float64ArrayFrom,\n  M as ObjectAssign,\n  w as ObjectEntries,\n  Kn as ObjectFromEntries,\n  qn as ObjectHasOwn,\n  Gn as ObjectKeys,\n  Jn as ObjectValues,\n  _n as Timer,\n  q as abortEvent,\n  Ln as addClass,\n  rn as addEventListener,\n  Wt as animationDelay,\n  Ut as animationDuration,\n  D as animationEndEvent,\n  F as animationName,\n  pe as ariaChecked,\n  fe as ariaDescribedBy,\n  me as ariaDescription,\n  ge as ariaExpanded,\n  ve as ariaHasPopup,\n  Ee as ariaHidden,\n  be as ariaLabel,\n  he as ariaLabelledBy,\n  ye as ariaModal,\n  we as ariaPressed,\n  Ae as ariaSelected,\n  Ne as ariaValueMax,\n  Se as ariaValueMin,\n  ke as ariaValueNow,\n  Me as ariaValueText,\n  G as beforeunloadEvent,\n  un as bezierEasings,\n  J as blurEvent,\n  K as changeEvent,\n  le as closest,\n  X as contextmenuEvent,\n  Xn as createCustomEvent,\n  Zt as createElement,\n  $t as createElementNS,\n  Q as dispatchEvent,\n  Pn as distinct,\n  xn as documentBody,\n  Vn as documentElement,\n  N as documentHead,\n  De as dragEvent,\n  ze as dragendEvent,\n  Oe as dragenterEvent,\n  Le as dragleaveEvent,\n  Ie as dragoverEvent,\n  Ce as dragstartEvent,\n  Fn as emulateAnimationEnd,\n  Un as emulateTransitionEnd,\n  Z as errorEvent,\n  Qn as focus,\n  $ as focusEvent,\n  Fe as focusEvents,\n  _ as focusinEvent,\n  tt as focusoutEvent,\n  et as gesturechangeEvent,\n  nt as gestureendEvent,\n  ot as gesturestartEvent,\n  Yt as getAttribute,\n  Nn as getAttributeNS,\n  h as getBoundingClientRect,\n  No as getCustomElements,\n  d as getDocument,\n  eo as getDocumentBody,\n  T as getDocumentElement,\n  no as getDocumentHead,\n  _t as getElementAnimationDelay,\n  te as getElementAnimationDuration,\n  ko as getElementById,\n  g as getElementStyle,\n  ee as getElementTransitionDelay,\n  ne as getElementTransitionDuration,\n  To as getElementsByClassName,\n  de as getElementsByTagName,\n  Hn as getInstance,\n  oo as getNodeScroll,\n  so as getParentNode,\n  co as getRectRelativeToOffsetParent,\n  ae as getUID,\n  ro as getWindow,\n  kn as hasAttribute,\n  Mn as hasAttributeNS,\n  zn as hasClass,\n  vn as isApple,\n  ie as isArray,\n  ao as isCanvas,\n  ue as isCustomElement,\n  R as isDocument,\n  io as isElement,\n  uo as isElementInScrollRange,\n  lo as isElementInViewport,\n  po as isElementsArray,\n  En as isFirefox,\n  mo as isFunction,\n  fo as isHTMLCollection,\n  u as isHTMLElement,\n  go as isHTMLImageElement,\n  vo as isJSON,\n  I as isMap,\n  bo as isMedia,\n  gn as isMobile,\n  i as isNode,\n  ho as isNodeList,\n  se as isNumber,\n  v as isObject,\n  yo as isRTL,\n  wo as isSVGElement,\n  re as isScaledElement,\n  ce as isShadowRoot,\n  k as isString,\n  Ao as isTableElement,\n  Eo as isWeakMap,\n  W as isWindow,\n  We as keyAlt,\n  Re as keyArrowDown,\n  je as keyArrowLeft,\n  qe as keyArrowRight,\n  Qe as keyArrowUp,\n  Ge as keyBackspace,\n  Je as keyCapsLock,\n  Ke as keyControl,\n  Xe as keyDelete,\n  Ye as keyEnter,\n  $e as keyEscape,\n  _e as keyInsert,\n  tn as keyMeta,\n  Ze as keyNumpadEnter,\n  en as keyPause,\n  nn as keyScrollLock,\n  on as keyShift,\n  sn as keySpace,\n  cn as keyTab,\n  Ue as keyboardEventKeys,\n  st as keydownEvent,\n  ct as keypressEvent,\n  rt as keyupEvent,\n  at as loadEvent,\n  xe as loadstartEvent,\n  Do as matches,\n  Be as mouseClickEvents,\n  He as mouseHoverEvents,\n  Ve as mouseSwipeEvents,\n  it as mouseclickEvent,\n  ut as mousedblclickEvent,\n  lt as mousedownEvent,\n  mt as mouseenterEvent,\n  pt as mousehoverEvent,\n  gt as mouseinEvent,\n  ft as mouseleaveEvent,\n  bt as mousemoveEvent,\n  vt as mouseoutEvent,\n  Et as mouseoverEvent,\n  dt as mouseupEvent,\n  ht as mousewheelEvent,\n  yt as moveEvent,\n  Te as nativeEvents,\n  Xt as noop,\n  jn as normalizeOptions,\n  V as normalizeValue,\n  Jt as off,\n  ln as offsetHeight,\n  dn as offsetWidth,\n  Gt as on,\n  Kt as one,\n  wt as orientationchangeEvent,\n  Yn as passiveHandler,\n  At as pointercancelEvent,\n  St as pointerdownEvent,\n  Nt as pointerleaveEvent,\n  kt as pointermoveEvent,\n  Mt as pointerupEvent,\n  So as querySelector,\n  Mo as querySelectorAll,\n  Tt as readystatechangeEvent,\n  Zn as reflow,\n  Cn as removeAttribute,\n  On as removeAttributeNS,\n  In as removeClass,\n  an as removeEventListener,\n  Dt as resetEvent,\n  Ct as resizeEvent,\n  zt as scrollEvent,\n  pn as scrollHeight,\n  mn as scrollWidth,\n  Ot as selectEvent,\n  Lt as selectendEvent,\n  It as selectstartEvent,\n  Tn as setAttribute,\n  Dn as setAttributeNS,\n  $n as setElementStyle,\n  xt as submitEvent,\n  bn as support3DTransform,\n  An as supportAnimation,\n  hn as supportPassive,\n  wn as supportTouch,\n  yn as supportTransform,\n  Sn as supportTransition,\n  fn as tabindex,\n  oe as toLowerCase,\n  to as toUpperCase,\n  Pe as touchEvents,\n  Ht as touchcancelEvent,\n  Pt as touchendEvent,\n  Bt as touchmoveEvent,\n  Vt as touchstartEvent,\n  Qt as transitionDelay,\n  Rt as transitionDuration,\n  C as transitionEndEvent,\n  U as transitionProperty,\n  Ft as unloadEvent,\n  S as userAgent,\n  A as userAgentData,\n  Co as version\n};\n//# sourceMappingURL=shorty.mjs.map\n","const e = {}, f = (t) => {\n  const { type: c, currentTarget: i } = t;\n  [...e[c]].forEach(([n, s]) => {\n    i === n && [...s].forEach(([o, a]) => {\n      o.apply(n, [t]), typeof a == \"object\" && a.once && r(n, c, o, a);\n    });\n  });\n}, E = (t, c, i, n) => {\n  e[c] || (e[c] = /* @__PURE__ */ new Map());\n  const s = e[c];\n  s.has(t) || s.set(t, /* @__PURE__ */ new Map());\n  const o = s.get(t), { size: a } = o;\n  o.set(i, n), a || t.addEventListener(c, f, n);\n}, r = (t, c, i, n) => {\n  const s = e[c], o = s && s.get(t), a = o && o.get(i), d = a !== void 0 ? a : n;\n  o && o.has(i) && o.delete(i), s && (!o || !o.size) && s.delete(t), (!s || !s.size) && delete e[c], (!o || !o.size) && t.removeEventListener(\n    c,\n    f,\n    d\n  );\n}, g = E, M = r;\nexport {\n  E as addListener,\n  f as globalListener,\n  M as off,\n  g as on,\n  e as registry,\n  r as removeListener\n};\n//# sourceMappingURL=event-listener.mjs.map\n","/**\n * Global namespace for most components `fade` class.\n */\nconst fadeClass = 'fade';\nexport default fadeClass;\n","/**\n * Global namespace for most components `show` class.\n */\nconst showClass = 'show';\nexport default showClass;\n","/**\n * Global namespace for most components `dismiss` option.\n */\nconst dataBsDismiss = 'data-bs-dismiss';\nexport default dataBsDismiss;\n","/** @type {string} */\nconst alertString = 'alert';\nexport default alertString;\n","/** @type {string} */\nconst alertComponent = 'Alert';\nexport default alertComponent;\n","/* Native JavaScript for Bootstrap 5 | Base Component\n----------------------------------------------------- */\nimport { querySelector, normalizeOptions, Data, ObjectKeys, isString } from '@thednp/shorty';\n\nimport type { BaseOptions } from '../interface/baseComponent';\nimport Version from '../version';\n\n/** Returns a new `BaseComponent` instance. */\nexport default class BaseComponent {\n  declare element: HTMLElement;\n  declare options?: BaseOptions;\n\n  /**\n   * @param target `HTMLElement` or selector string\n   * @param config component instance options\n   */\n  constructor(target: HTMLElement | string, config?: BaseOptions) {\n    const element = querySelector(target);\n\n    if (!element) {\n      if (isString(target)) {\n        throw Error(`${this.name} Error: \"${target}\" is not a valid selector.`);\n      } else {\n        throw Error(`${this.name} Error: your target is not an instance of HTMLElement.`);\n      }\n    }\n\n    const prevInstance = Data.get<typeof this>(element, this.name);\n    /* istanbul ignore else */\n    if (prevInstance) {\n      // remove previously attached event listeners\n      // to avoid memory leaks\n      prevInstance._toggleEventListeners();\n    }\n\n    this.element = element;\n    this.options =\n      this.defaults && ObjectKeys(this.defaults).length\n        ? normalizeOptions(element, this.defaults, config || {}, 'bs')\n        : {};\n\n    Data.set(element, this.name, this);\n  }\n\n  /* istanbul ignore next */\n  get version() {\n    return Version;\n  }\n\n  /* istanbul ignore next */\n  get name() {\n    return 'BaseComponent';\n  }\n\n  /* istanbul ignore next */\n  get defaults() {\n    return {};\n  }\n\n  /** just to have something to extend from */\n  _toggleEventListeners = () => {\n    // do something to please linters\n  };\n\n  /** Removes component from target element. */\n  dispose() {\n    Data.remove<typeof this>(this.element, this.name);\n    ObjectKeys(this).forEach(prop => {\n      delete this[prop];\n    });\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | Alert\n-------------------------------------------- */\nimport {\n  emulateTransitionEnd,\n  mouseclickEvent,\n  getInstance,\n  querySelector,\n  hasClass,\n  removeClass,\n  dispatchEvent,\n  createCustomEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport alertString from '../strings/alertString';\nimport alertComponent from '../strings/alertComponent';\nimport type { AlertEvent } from '../interface/alert';\n\nimport BaseComponent from './base-component';\n\n// ALERT PRIVATE GC\n// ================\nconst alertSelector = `.${alertString}`;\nconst alertDismissSelector = `[${dataBsDismiss}=\"${alertString}\"]`;\n\n/**\n * Static method which returns an existing `Alert` instance associated\n * to a target `Element`.\n *\n */\nconst getAlertInstance = (element: HTMLElement) => getInstance<Alert>(element, alertComponent);\n\n/**\n * An `Alert` initialization callback.\n */\nconst alertInitCallback = <T>(element: HTMLElement) => new Alert(element) as T;\n\n// ALERT CUSTOM EVENTS\n// ===================\nconst closeAlertEvent = createCustomEvent<AlertEvent>(`close.bs.${alertString}`);\nconst closedAlertEvent = createCustomEvent<AlertEvent>(`closed.bs.${alertString}`);\n\n// ALERT EVENT HANDLER\n// ===================\n/**\n * Alert `transitionend` callback.\n *\n * @param that target Alert instance\n */\nconst alertTransitionEnd = (self: Alert) => {\n  const { element } = self;\n  dispatchEvent(element, closedAlertEvent);\n\n  self._toggleEventListeners();\n  self.dispose();\n  element.remove();\n};\n\n// ALERT DEFINITION\n// ================\n/** Creates a new Alert instance. */\nexport default class Alert extends BaseComponent {\n  static selector = alertSelector;\n  static init = alertInitCallback;\n  static getInstance = getAlertInstance;\n  dismiss: HTMLElement | null;\n\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // the dismiss button\n    this.dismiss = querySelector(alertDismissSelector, this.element);\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /** Returns component name string. */\n  get name() {\n    return alertComponent;\n  }\n\n  // ALERT PUBLIC METHODS\n  // ====================\n  /**\n   * Public method that hides the `.alert` element from the user,\n   * disposes the instance once animation is complete, then\n   * removes the element from the DOM.\n   */\n  close = () => {\n    const { element } = this;\n\n    /* istanbul ignore else */\n    if (element && hasClass(element, showClass)) {\n      dispatchEvent(element, closeAlertEvent);\n\n      if (!closeAlertEvent.defaultPrevented) {\n        removeClass(element, showClass);\n\n        if (hasClass(element, fadeClass)) {\n          emulateTransitionEnd(element, () => alertTransitionEnd(this));\n        } else alertTransitionEnd(this);\n      }\n    }\n  };\n  /**\n   * Toggle on / off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { dismiss, close } = this;\n    /* istanbul ignore else */\n    if (dismiss) action(dismiss, mouseclickEvent, close);\n  };\n\n  /** Remove the component from target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for most components active class.\n */\nconst activeClass = 'active';\nexport default activeClass;\n","/**\n * Global namespace for most components `toggle` option.\n */\nconst dataBsToggle = 'data-bs-toggle';\nexport default dataBsToggle;\n","/** @type {string} */\nconst buttonComponent = 'Button';\nexport default buttonComponent;\n","/* Native JavaScript for Bootstrap 5 | Button\n---------------------------------------------*/\nimport {\n  getInstance,\n  removeClass,\n  hasClass,\n  addClass,\n  setAttribute,\n  mouseclickEvent,\n  ariaPressed,\n  getAttribute,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport buttonString from '../strings/buttonString';\nimport buttonComponent from '../strings/buttonComponent';\n\nimport BaseComponent from './base-component';\n\n// BUTTON PRIVATE GC\n// =================\nconst buttonSelector = `[${dataBsToggle}=\"${buttonString}\"]`;\n\n/**\n * Static method which returns an existing `Button` instance associated\n * to a target `Element`.\n */\nconst getButtonInstance = (element: HTMLElement) => getInstance<Button>(element, buttonComponent);\n\n/** A `Button` initialization callback. */\nconst buttonInitCallback = (element: HTMLElement) => new Button(element);\n\n// BUTTON DEFINITION\n// =================\n/** Creates a new `Button` instance. */\nexport default class Button extends BaseComponent {\n  static selector = buttonSelector;\n  static init = buttonInitCallback;\n  static getInstance = getButtonInstance;\n\n  isActive = false;\n\n  /**\n   * @param target usually a `.btn` element\n   */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n\n    // set initial state\n    this.isActive = hasClass(element, activeClass);\n    setAttribute(element, ariaPressed, String(!!this.isActive));\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return buttonComponent;\n  }\n\n  // BUTTON PUBLIC METHODS\n  // =====================\n  /**\n   * Toggles the state of the target button.\n   *\n   * @param e usually `click` Event object\n   */\n  toggle = (e: Event) => {\n    if (e) e.preventDefault();\n\n    const { element, isActive } = this;\n    if (!hasClass(element, 'disabled') && !getAttribute(element, 'disabled')) {\n      const action = isActive ? removeClass : addClass;\n      action(element, activeClass);\n      setAttribute(element, ariaPressed, isActive ? 'false' : 'true');\n      this.isActive = hasClass(element, activeClass);\n    }\n  };\n\n  // BUTTON PRIVATE METHOD\n  // =====================\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, this.toggle);\n  };\n\n  /** Removes the `Button` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst buttonString = 'button';\nexport default buttonString;\n","/**\n * Global namespace for most components `target` option.\n */\nconst dataBsTarget = 'data-bs-target';\nexport default dataBsTarget;\n","/** @type {string} */\nconst carouselString = 'carousel';\nexport default carouselString;\n","/** @type {string} */\nconst carouselComponent = 'Carousel';\nexport default carouselComponent;\n","/**\n * Global namespace for most components `parent` option.\n */\nconst dataBsParent = 'data-bs-parent';\nexport default dataBsParent;\n","import { getDocument, getAttribute, closest, querySelector } from '@thednp/shorty';\n\nimport dataBsTarget from '../strings/dataBsTarget';\nimport dataBsParent from '../strings/dataBsParent';\nimport dataBsContainer from '../strings/dataBsContainer';\n\n/**\n * Returns the `Element` that THIS one targets\n * via `data-bs-target`, `href`, `data-bs-parent` or `data-bs-container`.\n *\n * @param element the target element\n * @returns the query result\n */\nconst getTargetElement = (element: HTMLElement) => {\n  const targetAttr = [dataBsTarget, dataBsParent, dataBsContainer, 'href'];\n  const doc = getDocument(element);\n\n  return targetAttr\n    .map(att => {\n      const attValue = getAttribute(element, att);\n      if (attValue) {\n        return att === dataBsParent ? closest(element, attValue) : querySelector(attValue, doc);\n      }\n      return null;\n    })\n    .filter(x => x)[0];\n};\n\nexport default getTargetElement;\n","/**\n * Global namespace for most components `container` option.\n */\nconst dataBsContainer = 'data-bs-container';\nexport default dataBsContainer;\n","/* Native JavaScript for Bootstrap 5 | Carousel\n----------------------------------------------- */\nimport {\n  createCustomEvent,\n  getInstance,\n  dispatchEvent,\n  ObjectAssign,\n  emulateTransitionEnd,\n  passiveHandler,\n  reflow,\n  Timer,\n  getAttribute,\n  getElementsByClassName,\n  querySelectorAll,\n  querySelector,\n  closest,\n  isHTMLElement,\n  isRTL,\n  isElementInScrollRange,\n  getElementTransitionDuration,\n  getDocument,\n  pointerupEvent,\n  pointermoveEvent,\n  pointerdownEvent,\n  keyArrowRight,\n  keyArrowLeft,\n  keydownEvent,\n  mouseclickEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  touchstartEvent,\n  dragstartEvent,\n  addClass,\n  hasClass,\n  removeClass,\n  matches,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport dataBsTarget from '../strings/dataBsTarget';\nimport carouselString from '../strings/carouselString';\nimport carouselComponent from '../strings/carouselComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CarouselEvent, CarouselOptions } from '../interface/carousel';\n\n// CAROUSEL PRIVATE GC\n// ===================\nconst carouselSelector = `[data-bs-ride=\"${carouselString}\"]`;\nconst carouselItem = `${carouselString}-item`;\nconst dataBsSlideTo = 'data-bs-slide-to';\nconst dataBsSlide = 'data-bs-slide';\nconst pausedClass = 'paused';\n\nconst carouselDefaults: CarouselOptions = {\n  pause: 'hover',\n  keyboard: false,\n  touch: true,\n  interval: 5000,\n};\n\n/**\n * Static method which returns an existing `Carousel` instance associated\n * to a target `Element`.\n */\nconst getCarouselInstance = (element: HTMLElement) => getInstance<Carousel>(element, carouselComponent);\n\n/**\n * A `Carousel` initialization callback.\n */\nconst carouselInitCallback = (element: HTMLElement) => new Carousel(element);\n\nlet startX = 0;\nlet currentX = 0;\nlet endX = 0;\n\n// CAROUSEL CUSTOM EVENTS\n// ======================\nconst carouselSlideEvent = createCustomEvent<CarouselEvent>(`slide.bs.${carouselString}`);\nconst carouselSlidEvent = createCustomEvent<CarouselEvent>(`slid.bs.${carouselString}`);\n\n// CAROUSEL EVENT HANDLERS\n// =======================\n/**\n * The `transitionend` event listener of the `Carousel`.\n *\n * @param self the `Carousel` instance\n */\nconst carouselTransitionEndHandler = (self: Carousel) => {\n  const { index, direction, element, slides, options } = self;\n\n  /* istanbul ignore else */\n  if (self.isAnimating) {\n    const activeItem = getActiveIndex(self);\n    const orientation = direction === 'left' ? 'next' : 'prev';\n    const directionClass = direction === 'left' ? 'start' : 'end';\n\n    addClass(slides[index], activeClass);\n    removeClass(slides[index], `${carouselItem}-${orientation}`);\n    removeClass(slides[index], `${carouselItem}-${directionClass}`);\n\n    removeClass(slides[activeItem], activeClass);\n    removeClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n    dispatchEvent(element, carouselSlidEvent);\n    Timer.clear(element, dataBsSlide);\n\n    // must check if a previous instance is disposed\n    if (self.cycle && !getDocument(element).hidden && options.interval && !self.isPaused) {\n      self.cycle();\n    }\n  }\n};\n\n/**\n * Handles the `mouseenter` events when *options.pause*\n * is set to `hover`.\n */\nfunction carouselPauseHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && !self.isPaused && !Timer.get(this, pausedClass)) {\n    addClass(this, pausedClass);\n  }\n}\n\n/**\n * Handles the `mouseleave` events when *options.pause*\n * is set to `hover`.\n *\n */\nfunction carouselResumeHandler(this: HTMLElement) {\n  // const element = this;\n  const self = getCarouselInstance(this);\n  /* istanbul ignore else */\n  if (self && self.isPaused && !Timer.get(this, pausedClass)) {\n    self.cycle();\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` indicators.\n *\n * @param e the `Event` object\n */\nfunction carouselIndicatorHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  // const indicator = this;\n  const element = (closest(this, carouselSelector) || getTargetElement(this)) as HTMLElement;\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const newIndex = +(getAttribute(this, dataBsSlideTo) || /* istanbul ignore next */ 0);\n\n    if (\n      this &&\n      !hasClass(this, activeClass) && // event target is not active\n      !Number.isNaN(newIndex)\n    ) {\n      // AND has the specific attribute\n      self.to(newIndex); // do the slide\n    }\n  }\n}\n\n/**\n * Handles the `click` event for the `Carousel` arrows.\n *\n * @param e the `Event` object\n */\nfunction carouselControlsHandler(this: HTMLElement, e: MouseEvent) {\n  e.preventDefault();\n  const element = closest(this, carouselSelector) || (getTargetElement(this) as HTMLElement);\n  const self = getCarouselInstance(element);\n\n  if (self && !self.isAnimating) {\n    const orientation = getAttribute(this, dataBsSlide);\n\n    /* istanbul ignore else */\n    if (orientation === 'next') {\n      self.next();\n    } else if (orientation === 'prev') {\n      self.prev();\n    }\n  }\n}\n\n/**\n * Handles the keyboard `keydown` event for the visible `Carousel` elements.\n *\n * @param e the `Event` object\n */\nconst carouselKeyHandler = ({ code, target }: KeyboardEvent & { target: Node }) => {\n  const doc = getDocument(target);\n  const [element] = [...querySelectorAll(carouselSelector, doc)].filter(x => isElementInScrollRange(x));\n  const self = getCarouselInstance(element);\n\n  /* istanbul ignore next */\n  if (self && !self.isAnimating && !/textarea|input/i.test(target.nodeName)) {\n    const RTL = isRTL(element);\n    const arrowKeyNext = !RTL ? keyArrowRight : keyArrowLeft;\n    const arrowKeyPrev = !RTL ? keyArrowLeft : keyArrowRight;\n\n    /* istanbul ignore else */\n    if (code === arrowKeyPrev) self.prev();\n    else if (code === arrowKeyNext) self.next();\n  }\n};\n\n// CAROUSEL TOUCH HANDLERS\n// =======================\n/**\n * Prevents the `touchstart` and `dragstart` events for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselDragHandler(this: HTMLElement, e: DragEvent | TouchEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  /* istanbul ignore next */\n  if (\n    self &&\n    self.isTouch &&\n    ((self.indicator && !self.indicator.contains(target as Node)) || !self.controls.includes(target as HTMLElement))\n  ) {\n    e.stopImmediatePropagation();\n    e.stopPropagation();\n    e.preventDefault();\n  }\n}\n\n// CAROUSEL POINTER HANDLERS\n// =========================\n/**\n * Handles the `pointerdown` event for the `Carousel` element.\n *\n * @param e the `Event` object\n */\nfunction carouselPointerDownHandler(this: HTMLElement, e: PointerEvent) {\n  const { target } = e;\n  const self = getCarouselInstance(this);\n\n  if (self && !self.isAnimating && !self.isTouch) {\n    // filter pointer event on controls & indicators\n    const { controls, indicators } = self;\n    if (![...controls, ...indicators].every(el => el === target || el.contains(target as Node))) {\n      startX = e.pageX;\n\n      /* istanbul ignore else */\n      if (this.contains(target as Node)) {\n        self.isTouch = true;\n        toggleCarouselTouchHandlers(self, true);\n      }\n    }\n  }\n}\n\n/**\n * Handles the `pointermove` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerMoveHandler = (e: PointerEvent) => {\n  currentX = e.pageX;\n};\n\n/**\n * Handles the `pointerup` event for the `Carousel` element.\n *\n * @param e\n */\nconst carouselPointerUpHandler = (e: PointerEvent) => {\n  const { target } = e;\n  const doc = getDocument(target as Node);\n  const self = [...querySelectorAll(carouselSelector, doc)]\n    .map(c => getCarouselInstance(c) as Carousel)\n    .find(i => i.isTouch) as Carousel;\n\n  // impossible to satisfy\n  /* istanbul ignore else */\n  if (self) {\n    const { element, index } = self;\n    const RTL = isRTL(element);\n    endX = e.pageX;\n\n    self.isTouch = false;\n    toggleCarouselTouchHandlers(self);\n\n    if (\n      !doc.getSelection()?.toString().length &&\n      element.contains(target as HTMLElement) &&\n      Math.abs(startX - endX) > 120\n    ) {\n      // determine next index to slide to\n      /* istanbul ignore else */\n      if (currentX < startX) {\n        self.to(index + (RTL ? -1 : 1));\n      } else if (currentX > startX) {\n        self.to(index + (RTL ? 1 : -1));\n      }\n    }\n\n    // reset pointer position\n    startX = 0;\n    currentX = 0;\n    endX = 0;\n  }\n};\n\n// CAROUSEL PRIVATE METHODS\n// ========================\n/**\n * Sets active indicator for the `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param index the index of the new active indicator\n */\nconst activateCarouselIndicator = (self: Carousel, index: number) => {\n  const { indicators } = self;\n  [...indicators].forEach(x => removeClass(x, activeClass));\n\n  /* istanbul ignore else */\n  if (self.indicators[index]) addClass(indicators[index], activeClass);\n};\n\n/**\n * Toggles the pointer event listeners for a given `Carousel` instance.\n *\n * @param self the `Carousel` instance\n * @param add when `TRUE` event listeners are added\n */\nconst toggleCarouselTouchHandlers = (self: Carousel, add?: boolean) => {\n  const { element } = self;\n  const action = add ? addListener : removeListener;\n  action(getDocument(element), pointermoveEvent, carouselPointerMoveHandler, passiveHandler);\n  action(getDocument(element), pointerupEvent, carouselPointerUpHandler, passiveHandler);\n};\n\n/**\n * Returns the index of the current active item.\n *\n * @param self the `Carousel` instance\n * @returns the query result\n */\nconst getActiveIndex = (self: Carousel) => {\n  const { slides, element } = self;\n  const activeItem = querySelector(`.${carouselItem}.${activeClass}`, element);\n  return isHTMLElement(activeItem) ? [...slides].indexOf(activeItem) : -1;\n};\n\n// CAROUSEL DEFINITION\n// ===================\n/** Creates a new `Carousel` instance. */\nexport default class Carousel extends BaseComponent {\n  static selector = carouselSelector;\n  static init = carouselInitCallback;\n  static getInstance = getCarouselInstance;\n  declare options: CarouselOptions;\n  declare direction: 'right' | 'left';\n  declare index: number;\n  declare isTouch: boolean;\n  declare slides: HTMLCollectionOf<HTMLElement>;\n  declare controls: HTMLElement[];\n  declare indicator: HTMLElement | null;\n  declare indicators: HTMLElement[];\n\n  /**\n   * @param target mostly a `.carousel` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CarouselOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element } = this;\n\n    // additional properties\n    this.direction = isRTL(element) ? 'right' : 'left';\n    this.isTouch = false;\n\n    // carousel elements\n    // a LIVE collection is prefferable\n    this.slides = getElementsByClassName(carouselItem, element);\n    const { slides } = this;\n\n    // invalidate when not enough items\n    // no need to go further\n    if (slides.length >= 2) {\n      const activeIndex = getActiveIndex(this);\n      // recover item from disposed instance\n      const transitionItem = [...slides].find(s => matches(s, `.${carouselItem}-next,.${carouselItem}-next`));\n      this.index = activeIndex;\n\n      // external controls must be within same document context\n      const doc = getDocument(element);\n\n      this.controls = [\n        ...querySelectorAll(`[${dataBsSlide}]`, element),\n        ...querySelectorAll(`[${dataBsSlide}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      this.indicator = querySelector(`.${carouselString}-indicators`, element);\n\n      // a LIVE collection is prefferable\n      this.indicators = [\n        ...(this.indicator ? querySelectorAll(`[${dataBsSlideTo}]`, this.indicator) : []),\n        ...querySelectorAll(`[${dataBsSlideTo}][${dataBsTarget}=\"#${element.id}\"]`, doc),\n      ].filter((c, i, ar) => i === ar.indexOf(c));\n\n      // set JavaScript and DATA API options\n      const { options } = this;\n\n      // don't use TRUE as interval, it's actually 0, use the default 5000ms better\n      this.options.interval = options.interval === true ? carouselDefaults.interval : options.interval;\n\n      // set first slide active if none\n      /* istanbul ignore next - impossible to test with cypress */\n      if (transitionItem) {\n        this.index = [...slides].indexOf(transitionItem);\n      } else if (activeIndex < 0) {\n        this.index = 0;\n        addClass(slides[0], activeClass);\n        if (this.indicators.length) activateCarouselIndicator(this, 0);\n      }\n\n      /* istanbul ignore else */\n      if (this.indicators.length) activateCarouselIndicator(this, this.index);\n\n      // attach event handlers\n      this._toggleEventListeners(true);\n\n      // start to cycle if interval is set\n      if (options.interval) this.cycle();\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return carouselComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return carouselDefaults;\n  }\n\n  /**\n   * Check if instance is paused.\n   */\n  get isPaused() {\n    return hasClass(this.element, pausedClass);\n  }\n\n  /**\n   * Check if instance is animating.\n   */\n  get isAnimating() {\n    return querySelector(`.${carouselItem}-next,.${carouselItem}-prev`, this.element) !== null;\n  }\n\n  // CAROUSEL PUBLIC METHODS\n  // =======================\n  /** Slide automatically through items. */\n  cycle() {\n    const { element, options, isPaused, index } = this;\n\n    Timer.clear(element, carouselString);\n    if (isPaused) {\n      Timer.clear(element, pausedClass);\n      removeClass(element, pausedClass);\n    }\n\n    Timer.set(\n      element,\n      () => {\n        // it's very important to check self.element\n        // where instance might have been disposed\n        /* istanbul ignore else */\n        if (this.element && !this.isPaused && !this.isTouch && isElementInScrollRange(element)) {\n          this.to(index + 1);\n        }\n      },\n      options.interval as number,\n      carouselString,\n    );\n  }\n\n  /** Pause the automatic cycle. */\n  pause() {\n    const { element, options } = this;\n    /* istanbul ignore else */\n    if (!this.isPaused && options.interval) {\n      addClass(element, pausedClass);\n      Timer.set(\n        element,\n        () => {\n          /* ESLint is now happy */\n        },\n        1,\n        pausedClass,\n      );\n    }\n  }\n\n  /** Slide to the next item. */\n  next() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index + 1);\n    }\n  }\n\n  /** Slide to the previous item. */\n  prev() {\n    /* istanbul ignore else */\n    if (!this.isAnimating) {\n      this.to(this.index - 1);\n    }\n  }\n\n  /**\n   * Jump to the item with the `idx` index.\n   *\n   * @param idx the index of the item to jump to\n   */\n  to(idx: number) {\n    const { element, slides, options } = this;\n    const activeItem = getActiveIndex(this);\n    const RTL = isRTL(element);\n    let next = idx;\n\n    // when controled via methods, make sure to check again\n    // first return if we're on the same item #227\n    // `to()` must be SPAM protected by Timer\n    if (!this.isAnimating && activeItem !== next && !Timer.get(element, dataBsSlide)) {\n      // determine transition direction\n      /* istanbul ignore else */\n      if (activeItem < next || (activeItem === 0 && next === slides.length - 1)) {\n        this.direction = RTL ? 'right' : 'left'; // next\n      } else if (activeItem > next || (activeItem === slides.length - 1 && next === 0)) {\n        this.direction = RTL ? 'left' : 'right'; // prev\n      }\n      const { direction } = this;\n\n      // find the right next index\n      if (next < 0) {\n        next = slides.length - 1;\n      } else if (next >= slides.length) {\n        next = 0;\n      }\n\n      // orientation, class name, eventProperties\n      const orientation = direction === 'left' ? 'next' : 'prev';\n      const directionClass = direction === 'left' ? 'start' : 'end';\n\n      const eventProperties = {\n        relatedTarget: slides[next],\n        from: activeItem,\n        to: next,\n        direction,\n      };\n\n      // update event properties\n      ObjectAssign(carouselSlideEvent, eventProperties);\n      ObjectAssign(carouselSlidEvent, eventProperties);\n\n      // discontinue when prevented\n      dispatchEvent(element, carouselSlideEvent);\n      if (!carouselSlideEvent.defaultPrevented) {\n        // update index\n        this.index = next;\n        activateCarouselIndicator(this, next);\n\n        if (getElementTransitionDuration(slides[next]) && hasClass(element, 'slide')) {\n          Timer.set(\n            element,\n            () => {\n              addClass(slides[next], `${carouselItem}-${orientation}`);\n              reflow(slides[next]);\n              addClass(slides[next], `${carouselItem}-${directionClass}`);\n              addClass(slides[activeItem], `${carouselItem}-${directionClass}`);\n\n              // the instance might get diposed mid-animation\n              emulateTransitionEnd(\n                slides[next],\n                () => this.slides && this.slides.length && carouselTransitionEndHandler(this),\n              );\n            },\n            0,\n            dataBsSlide,\n          );\n        } else {\n          addClass(slides[next], activeClass);\n          removeClass(slides[activeItem], activeClass);\n\n          Timer.set(\n            element,\n            () => {\n              Timer.clear(element, dataBsSlide);\n              // check for element, might have been disposed\n              /* istanbul ignore else */\n              if (element && options.interval && !this.isPaused) {\n                this.cycle();\n              }\n\n              dispatchEvent(element, carouselSlidEvent);\n            },\n            0,\n            dataBsSlide,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles all event listeners for the `Carousel` instance.\n   *\n   * @param add when `TRUE` event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const { element, options, slides, controls, indicators } = this;\n    const { touch, pause, interval, keyboard } = options;\n    const action = add ? addListener : removeListener;\n\n    if (pause && interval) {\n      action(element, mouseenterEvent, carouselPauseHandler);\n      action(element, mouseleaveEvent, carouselResumeHandler);\n    }\n\n    if (touch && slides.length > 2) {\n      action(element, pointerdownEvent, carouselPointerDownHandler, passiveHandler);\n      action(element, touchstartEvent, carouselDragHandler, { passive: false });\n      action(element, dragstartEvent, carouselDragHandler, { passive: false });\n    }\n\n    /* istanbul ignore else */\n    if (controls.length) {\n      controls.forEach(arrow => {\n        /* istanbul ignore else */\n        if (arrow) action(arrow, mouseclickEvent, carouselControlsHandler);\n      });\n    }\n\n    /* istanbul ignore else */\n    if (indicators.length) {\n      indicators.forEach(indicator => {\n        action(indicator, mouseclickEvent, carouselIndicatorHandler);\n      });\n    }\n\n    if (keyboard) action(getDocument(element), keydownEvent, carouselKeyHandler);\n  };\n\n  /** Remove `Carousel` component from target. */\n  dispose() {\n    const { isAnimating } = this;\n\n    const clone = {\n      ...this,\n      isAnimating,\n    };\n    this._toggleEventListeners();\n    super.dispose();\n\n    // istanbul ignore next - impossible to test with cypress\n    if (clone.isAnimating) {\n      emulateTransitionEnd(clone.slides[clone.index], () => {\n        carouselTransitionEndHandler(clone);\n      });\n    }\n  }\n}\n","/**\n * Global namespace for most components `collapsing` class.\n * As used by `Collapse` / `Tab`.\n */\nconst collapsingClass = 'collapsing';\nexport default collapsingClass;\n","/** @type {string} */\nconst collapseString = 'collapse';\nexport default collapseString;\n","/** @type {string} */\nconst collapseComponent = 'Collapse';\nexport default collapseComponent;\n","/* Native JavaScript for Bootstrap 5 | Collapse\n----------------------------------------------- */\nimport {\n  getInstance,\n  setAttribute,\n  getDocument,\n  closest,\n  querySelector,\n  querySelectorAll,\n  addClass,\n  hasClass,\n  removeClass,\n  mouseclickEvent,\n  ariaExpanded,\n  emulateTransitionEnd,\n  reflow,\n  dispatchEvent,\n  setElementStyle,\n  Timer,\n  createCustomEvent,\n  noop,\n  isHTMLElement,\n  isString,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport collapsingClass from '../strings/collapsingClass';\nimport showClass from '../strings/showClass';\nimport collapseString from '../strings/collapseString';\nimport collapseComponent from '../strings/collapseComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { CollapseEvent, CollapseOptions } from '../interface/collapse';\n\n// COLLAPSE GC\n// ===========\nconst collapseSelector = `.${collapseString}`;\nconst collapseToggleSelector = `[${dataBsToggle}=\"${collapseString}\"]`;\nconst collapseDefaults = { parent: null };\n\n/**\n * Static method which returns an existing `Collapse` instance associated\n * to a target `Element`.\n */\nconst getCollapseInstance = (element: HTMLElement) => getInstance<Collapse>(element, collapseComponent);\n\n/**\n * A `Collapse` initialization callback.\n */\nconst collapseInitCallback = (element: HTMLElement) => new Collapse(element);\n\n// COLLAPSE CUSTOM EVENTS\n// ======================\nconst showCollapseEvent = createCustomEvent<CollapseEvent>(`show.bs.${collapseString}`);\nconst shownCollapseEvent = createCustomEvent<CollapseEvent>(`shown.bs.${collapseString}`);\nconst hideCollapseEvent = createCustomEvent<CollapseEvent>(`hide.bs.${collapseString}`);\nconst hiddenCollapseEvent = createCustomEvent<CollapseEvent>(`hidden.bs.${collapseString}`);\n\n// COLLAPSE PRIVATE METHODS\n// ========================\n/**\n * Expand the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst expandCollapse = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, showCollapseEvent);\n  if (!showCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    addClass(element, collapsingClass);\n    removeClass(element, collapseString);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'true'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n      addClass(element, showClass);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, shownCollapseEvent);\n    });\n  }\n};\n\n/**\n * Collapse the designated `Element`.\n *\n * @param self the `Collapse` instance\n */\nconst collapseContent = (self: Collapse) => {\n  const { element, parent, triggers } = self;\n\n  dispatchEvent(element, hideCollapseEvent);\n\n  if (!hideCollapseEvent.defaultPrevented) {\n    Timer.set(element, noop, 17);\n    if (parent) Timer.set(parent, noop, 17);\n\n    setElementStyle(element, { height: `${element.scrollHeight}px` });\n\n    removeClass(element, collapseString);\n    removeClass(element, showClass);\n    addClass(element, collapsingClass);\n\n    reflow(element);\n    setElementStyle(element, { height: '0px' });\n\n    emulateTransitionEnd(element, () => {\n      Timer.clear(element);\n      /* istanbul ignore else */\n      if (parent) Timer.clear(parent);\n\n      triggers.forEach(btn => setAttribute(btn, ariaExpanded, 'false'));\n\n      removeClass(element, collapsingClass);\n      addClass(element, collapseString);\n\n      setElementStyle(element, { height: '' });\n\n      dispatchEvent(element, hiddenCollapseEvent);\n    });\n  }\n};\n\n// COLLAPSE EVENT HANDLER\n// ======================\n/**\n * Handles the `click` event for the `Collapse` instance.\n *\n * @param e the `Event` object\n */\nconst collapseClickHandler = (e: MouseEvent) => {\n  const { target } = e; // our target is `HTMLElement`\n  const trigger = target && closest(target as HTMLElement, collapseToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getCollapseInstance(element);\n  /* istanbul ignore else */\n  if (self) self.toggle();\n\n  // event target is anchor link #398\n  if (trigger && trigger.tagName === 'A') e.preventDefault();\n};\n\n// COLLAPSE DEFINITION\n// ===================\n\n/** Returns a new `Colapse` instance. */\nexport default class Collapse extends BaseComponent {\n  static selector = collapseSelector;\n  static init = collapseInitCallback;\n  static getInstance = getCollapseInstance;\n  declare options: CollapseOptions;\n  declare parent: HTMLElement | null;\n  declare triggers: HTMLElement[];\n\n  /**\n   * @param target and `Element` that matches the selector\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<CollapseOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { element, options } = this;\n    const doc = getDocument(element);\n\n    // set triggering elements\n    this.triggers = [...querySelectorAll(collapseToggleSelector, doc)].filter(btn => getTargetElement(btn) === element);\n\n    // set parent accordion\n    this.parent = isHTMLElement(options.parent)\n      ? options.parent\n      : isString(options.parent)\n      ? getTargetElement(element) || querySelector(options.parent as string, doc)\n      : null;\n\n    // add event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return collapseComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return collapseDefaults;\n  }\n\n  // COLLAPSE PUBLIC METHODS\n  // =======================\n  /** Hides the collapse. */\n  hide() {\n    const { triggers, element } = this;\n    if (!Timer.get(element)) {\n      collapseContent(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => addClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Shows the collapse. */\n  show() {\n    const { element, parent, triggers } = this;\n    let activeCollapse;\n    let activeCollapseInstance;\n\n    if (parent) {\n      activeCollapse = [...querySelectorAll(`.${collapseString}.${showClass}`, parent)].find(i =>\n        getCollapseInstance(i),\n      );\n      activeCollapseInstance = activeCollapse && getCollapseInstance(activeCollapse);\n    }\n\n    if ((!parent || !Timer.get(parent)) && !Timer.get(element)) {\n      if (activeCollapseInstance && activeCollapse !== element) {\n        collapseContent(activeCollapseInstance);\n        activeCollapseInstance.triggers.forEach(btn => {\n          addClass(btn, `${collapseString}d`);\n        });\n      }\n\n      expandCollapse(this);\n      /* istanbul ignore else */\n      if (triggers.length) {\n        triggers.forEach(btn => removeClass(btn, `${collapseString}d`));\n      }\n    }\n  }\n\n  /** Toggles the visibility of the collapse. */\n  toggle() {\n    if (!hasClass(this.element, showClass)) this.show();\n    else this.hide();\n  }\n\n  /**\n   * Toggles on/off the event listener(s) of the `Collapse` instance.\n   *\n   * @param add when `true`, the event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, collapseClickHandler));\n    }\n  };\n\n  /** Remove the `Collapse` component from the target `Element`. */\n  dispose() {\n    this._toggleEventListeners();\n\n    super.dispose();\n  }\n}\n","/**\n * Global namespace for `Dropdown` types / classes.\n */\nconst dropdownMenuClasses = ['dropdown', 'dropup', 'dropstart', 'dropend'];\nexport default dropdownMenuClasses;\n","/** @type {string} */\nconst dropdownComponent = 'Dropdown';\nexport default dropdownComponent;\n","/**\n * Global namespace for `.dropdown-menu`.\n */\nconst dropdownMenuClass = 'dropdown-menu';\nexport default dropdownMenuClass;\n","import { hasAttribute, closest, getAttribute } from '@thednp/shorty';\n\n/**\n * Checks if an *event.target* or its parent has an `href=\"#\"` value.\n * We need to prevent jumping around onclick, don't we?\n *\n * @param element the target element\n * @returns the query result\n */\nconst isEmptyAnchor = (element: HTMLElement) => {\n  // `EventTarget` must be `HTMLElement`\n  const parentAnchor = closest(element, 'A');\n  return (\n    (element.tagName === 'A' &&\n      // anchor href starts with #\n      hasAttribute(element, 'href') &&\n      (getAttribute(element, 'href') as string).slice(-1) === '#') ||\n    // OR a child of an anchor with href starts with #\n    (parentAnchor &&\n      hasAttribute(parentAnchor, 'href') &&\n      (getAttribute(parentAnchor, 'href') as string).slice(-1) === '#')\n  );\n};\nexport default isEmptyAnchor;\n","/* Native JavaScript for Bootstrap 5 | Dropdown\n----------------------------------------------- */\nimport {\n  ariaExpanded,\n  focusEvent,\n  keydownEvent,\n  setAttribute,\n  keyEscape,\n  keyArrowDown,\n  keyArrowUp,\n  mouseclickEvent,\n  resizeEvent,\n  scrollEvent,\n  keyupEvent,\n  dispatchEvent,\n  setElementStyle,\n  getInstance,\n  ObjectAssign,\n  passiveHandler,\n  getElementsByClassName,\n  closest,\n  getAttribute,\n  getDocument,\n  getBoundingClientRect,\n  getDocumentElement,\n  getElementStyle,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  createCustomEvent,\n  focus,\n  getWindow,\n  CSS4Declaration,\n  isHTMLElement,\n  mousedownEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport showClass from '../strings/showClass';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dropdownComponent from '../strings/dropdownComponent';\nimport dropdownMenuClass from '../strings/dropdownMenuClass';\n\nimport isEmptyAnchor from '../util/isEmptyAnchor';\nimport BaseComponent from './base-component';\nimport type { DropdownEvent, DropdownOptions } from '../interface/dropdown';\n\n// DROPDOWN PRIVATE GC\n// ===================\nconst [dropdownString, dropupString, dropstartString, dropendString] = dropdownClasses;\nconst dropdownSelector = `[${dataBsToggle}=\"${dropdownString}\"]`;\n\n/**\n * Static method which returns an existing `Dropdown` instance associated\n * to a target `Element`.\n */\nconst getDropdownInstance = (element: HTMLElement) => getInstance<Dropdown>(element, dropdownComponent);\n\n/**\n * A `Dropdown` initialization callback.\n */\nconst dropdownInitCallback = (element: HTMLElement) => new Dropdown(element);\n\n// DROPDOWN PRIVATE GC\n// ===================\n// const dropdownMenuStartClass = `${dropdownMenuClass}-start`;\nconst dropdownMenuEndClass = `${dropdownMenuClass}-end`;\nconst verticalClass = [dropdownString, dropupString];\nconst horizontalClass = [dropstartString, dropendString];\nconst menuFocusTags = ['A', 'BUTTON'];\n\nconst dropdownDefaults = {\n  offset: 5, // [number] 5(px)\n  display: 'dynamic', // [dynamic|static]\n};\n\n// DROPDOWN CUSTOM EVENTS\n// ======================\nconst showDropdownEvent = createCustomEvent<DropdownEvent>(`show.bs.${dropdownString}`);\nconst shownDropdownEvent = createCustomEvent<DropdownEvent>(`shown.bs.${dropdownString}`);\nconst hideDropdownEvent = createCustomEvent<DropdownEvent>(`hide.bs.${dropdownString}`);\nconst hiddenDropdownEvent = createCustomEvent<DropdownEvent>(`hidden.bs.${dropdownString}`);\nconst updatedDropdownEvent = createCustomEvent<DropdownEvent>(`updated.bs.${dropdownString}`);\n\n// DROPDOWN PRIVATE METHODS\n// ========================\n/**\n * Apply specific style or class names to a `.dropdown-menu` to automatically\n * accomodate the layout and the page scroll.\n *\n * @param self the `Dropdown` instance\n */\nconst styleDropdown = (self: Dropdown) => {\n  const { element, menu, parentElement, options } = self;\n  const { offset } = options;\n\n  // don't apply any style on mobile view\n  /* istanbul ignore else: this test requires a navbar */\n  if (getElementStyle(menu, 'position') !== 'static') {\n    const RTL = isRTL(element);\n    // const menuStart = hasClass(menu, dropdownMenuStartClass);\n    const menuEnd = hasClass(menu, dropdownMenuEndClass);\n\n    // reset menu offset and position\n    const resetProps = ['margin', 'top', 'bottom', 'left', 'right'];\n    resetProps.forEach(p => {\n      // menu.style[p] = '';\n      const style: { [key: string]: string } = {};\n      style[p] = '';\n      setElementStyle(menu, style);\n    });\n\n    // set initial position class\n    // take into account .btn-group parent as .dropdown\n    // this requires navbar/btn-group/input-group\n    let positionClass =\n      dropdownClasses.find(c => hasClass(parentElement, c)) ||\n      /* istanbul ignore next: fallback position */ dropdownString;\n\n    const dropdownMargin: { [key: string]: number[] } = {\n      dropdown: [offset, 0, 0],\n      dropup: [0, 0, offset],\n      dropstart: RTL ? [-1, 0, 0, offset] : [-1, offset, 0],\n      dropend: RTL ? [-1, offset, 0] : [-1, 0, 0, offset],\n    };\n\n    const dropdownPosition: { [key: string]: Partial<CSS4Declaration> } = {\n      dropdown: { top: '100%' },\n      dropup: { top: 'auto', bottom: '100%' },\n      dropstart: RTL ? { left: '100%', right: 'auto' } : { left: 'auto', right: '100%' },\n      dropend: RTL ? { left: 'auto', right: '100%' } : { left: '100%', right: 'auto' },\n      menuStart: RTL ? { right: '0', left: 'auto' } : { right: 'auto', left: '0' },\n      menuEnd: RTL ? { right: 'auto', left: '0' } : { right: '0', left: 'auto' },\n    };\n\n    const { offsetWidth: menuWidth, offsetHeight: menuHeight } = menu;\n\n    const { clientWidth, clientHeight } = getDocumentElement(element);\n    const {\n      left: targetLeft,\n      top: targetTop,\n      width: targetWidth,\n      height: targetHeight,\n    } = getBoundingClientRect(element);\n\n    // dropstart | dropend\n    const leftFullExceed = targetLeft - menuWidth - offset < 0;\n    // dropend\n    const rightFullExceed = targetLeft + menuWidth + targetWidth + offset >= clientWidth;\n    // dropstart | dropend\n    const bottomExceed = targetTop + menuHeight + offset >= clientHeight;\n    // dropdown\n    const bottomFullExceed = targetTop + menuHeight + targetHeight + offset >= clientHeight;\n    // dropup\n    const topExceed = targetTop - menuHeight - offset < 0;\n    // dropdown / dropup\n    const leftExceed = ((!RTL && menuEnd) || (RTL && !menuEnd)) && targetLeft + targetWidth - menuWidth < 0;\n    const rightExceed = ((RTL && menuEnd) || (!RTL && !menuEnd)) && targetLeft + menuWidth >= clientWidth;\n\n    // recompute position\n    // handle RTL as well\n    if (horizontalClass.includes(positionClass) && leftFullExceed && rightFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropstartString && (!RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropendString;\n    }\n    if (positionClass === dropendString && (RTL ? leftFullExceed : rightFullExceed)) {\n      positionClass = dropstartString;\n    }\n    if (positionClass === dropupString && topExceed && !bottomFullExceed) {\n      positionClass = dropdownString;\n    }\n    if (positionClass === dropdownString && bottomFullExceed && !topExceed) {\n      positionClass = dropupString;\n    }\n\n    // override position for horizontal classes\n    if (horizontalClass.includes(positionClass) && bottomExceed) {\n      ObjectAssign(dropdownPosition[positionClass], {\n        top: 'auto',\n        bottom: 0,\n      });\n    }\n\n    // override position for vertical classes\n    if (verticalClass.includes(positionClass) && (leftExceed || rightExceed)) {\n      // don't realign when menu is wider than window\n      // in both RTL and non-RTL readability is KING\n      let posAjust: { left: 'auto' | number; right: 'auto' | number } | undefined = { left: 'auto', right: 'auto' };\n      if (!leftExceed && rightExceed && !RTL) posAjust = { left: 'auto', right: 0 };\n      if (leftExceed && !rightExceed && RTL) posAjust = { left: 0, right: 'auto' };\n      if (posAjust) ObjectAssign(dropdownPosition[positionClass], posAjust);\n    }\n\n    const margins: number[] = dropdownMargin[positionClass];\n    setElementStyle(menu, {\n      ...dropdownPosition[positionClass],\n      margin: `${margins.map(x => (x ? `${x}px` : x)).join(' ')}`,\n    });\n\n    // override dropdown-menu-start | dropdown-menu-end\n    if (verticalClass.includes(positionClass) && menuEnd) {\n      /* istanbul ignore else */\n      if (menuEnd) {\n        const endAdjust =\n          (!RTL && leftExceed) || (RTL && rightExceed) ? 'menuStart' : /* istanbul ignore next */ 'menuEnd';\n        setElementStyle(menu, dropdownPosition[endAdjust]);\n      }\n    }\n    // trigger updated event\n    dispatchEvent(parentElement, updatedDropdownEvent);\n  }\n};\n\n/**\n * Returns an `Array` of focusable items in the given dropdown-menu.\n *\n * @param menu the target menu\n * @returns all children of the dropdown menu\n */\nconst getMenuItems = (menu: HTMLElement) => {\n  return [...menu.children]\n    .map(c => {\n      if (c && menuFocusTags.includes(c.tagName)) return c;\n      const { firstElementChild } = c;\n      if (firstElementChild && menuFocusTags.includes(firstElementChild.tagName)) {\n        return firstElementChild;\n      }\n      return null;\n    })\n    .filter(c => c);\n};\n\n/**\n * Toggles on/off the listeners for the events that close the dropdown\n * as well as event that request a new position for the dropdown.\n *\n * @param {Dropdown} self the `Dropdown` instance\n */\nconst toggleDropdownDismiss = (self: Dropdown) => {\n  const { element, options } = self;\n  const action = self.open ? addListener : removeListener;\n  const doc = getDocument(element);\n\n  action(doc, mouseclickEvent, dropdownDismissHandler);\n  action(doc, focusEvent, dropdownDismissHandler);\n  action(doc, keydownEvent, dropdownPreventScroll);\n  action(doc, keyupEvent, dropdownKeyHandler);\n\n  /* istanbul ignore else */\n  if (options.display === 'dynamic') {\n    [scrollEvent, resizeEvent].forEach(ev => {\n      action(getWindow(element), ev, dropdownLayoutHandler, passiveHandler);\n    });\n  }\n};\n\n/**\n * Returns the currently open `.dropdown` element.\n *\n * @param element target\n * @returns the query result\n */\nconst getCurrentOpenDropdown = (element: HTMLElement): HTMLElement | undefined => {\n  const currentParent = [...dropdownClasses, 'btn-group', 'input-group']\n    .map(c => getElementsByClassName(`${c} ${showClass}`, getDocument(element)))\n    .find(x => x.length);\n\n  if (currentParent && currentParent.length) {\n    return [...(currentParent[0].children as HTMLCollectionOf<HTMLElement>)].find(x =>\n      dropdownClasses.some(c => c === getAttribute(x, dataBsToggle)),\n    );\n  }\n  return undefined;\n};\n\n// DROPDOWN EVENT HANDLERS\n// =======================\n/**\n * Handles the `click` event for the `Dropdown` instance.\n *\n * @param e event object\n */\nconst dropdownDismissHandler = (e: MouseEvent) => {\n  const { target, type } = e;\n\n  /* istanbul ignore else */\n  if (target && isHTMLElement(target)) {\n    // some weird FF bug #409\n    const element = getCurrentOpenDropdown(target);\n    const self = element && getDropdownInstance(element);\n\n    /* istanbul ignore else */\n    if (self) {\n      const { parentElement, menu } = self;\n\n      const isForm =\n        parentElement &&\n        parentElement.contains(target) &&\n        (target.tagName === 'form' || closest(target, 'form') !== null);\n\n      if ([mouseclickEvent, mousedownEvent].includes(type) && isEmptyAnchor(target)) {\n        e.preventDefault();\n      }\n\n      /* istanbul ignore else */\n      if (!isForm && type !== focusEvent && target !== element && target !== menu) {\n        self.hide();\n      }\n    }\n  }\n};\n\n/**\n * Handles `click` event listener for `Dropdown`.\n *\n * @param e event object\n */\nconst dropdownClickHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = target && closest(target as HTMLElement, dropdownSelector);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.stopPropagation();\n    self.toggle();\n    /* istanbul ignore else */\n    if (element && isEmptyAnchor(element)) e.preventDefault();\n  }\n};\n\n/**\n * Prevents scroll when dropdown-menu is visible.\n *\n * @param e event object\n */\nconst dropdownPreventScroll = (e: KeyboardEvent) => {\n  /* istanbul ignore else */\n  if ([keyArrowDown, keyArrowUp].includes(e.code)) e.preventDefault();\n};\n\n/**\n * Handles keyboard `keydown` events for `Dropdown`.\n *\n * @param e keyboard key\n */\nfunction dropdownKeyHandler(this: HTMLElement, e: KeyboardEvent) {\n  const { code } = e;\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n  const { activeElement } = (element && getDocument(element)) as Document;\n\n  /* istanbul ignore else */\n  if (self && activeElement) {\n    const { menu, open } = self;\n    const menuItems = getMenuItems(menu);\n\n    // arrow up & down\n    if (menuItems && menuItems.length && [keyArrowDown, keyArrowUp].includes(code)) {\n      let idx = menuItems.indexOf(activeElement);\n      /* istanbul ignore else */\n      if (activeElement === element) {\n        idx = 0;\n      } else if (code === keyArrowUp) {\n        idx = idx > 1 ? idx - 1 : 0;\n      } else if (code === keyArrowDown) {\n        idx = idx < menuItems.length - 1 ? idx + 1 : idx;\n      }\n      /* istanbul ignore else */\n      if (menuItems[idx]) focus(menuItems[idx] as HTMLElement);\n    }\n\n    if (keyEscape === code && open) {\n      self.toggle();\n      focus(element);\n    }\n  }\n}\n\n/** Handles dropdown layout changes during resize / scroll. */\nfunction dropdownLayoutHandler(this: HTMLElement) {\n  const element = getCurrentOpenDropdown(this);\n  const self = element && getDropdownInstance(element);\n\n  /* istanbul ignore else */\n  if (self && self.open) styleDropdown(self);\n}\n\n// DROPDOWN DEFINITION\n// ===================\n/** Returns a new Dropdown instance. */\nexport default class Dropdown extends BaseComponent {\n  static selector = dropdownSelector;\n  static init = dropdownInitCallback;\n  static getInstance = getDropdownInstance;\n  declare options: DropdownOptions;\n  declare open: boolean;\n  declare parentElement: HTMLElement;\n  declare menu: HTMLElement;\n\n  /**\n   * @param target Element or string selector\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<DropdownOptions>) {\n    super(target, config);\n\n    // initialization element\n    const { parentElement } = this.element;\n    const [menu] = getElementsByClassName(dropdownMenuClass, parentElement as ParentNode);\n\n    // invalidate when dropdown-menu is missing\n    if (menu) {\n      // set targets\n      this.parentElement = parentElement as HTMLElement;\n      this.menu = menu;\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return dropdownComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return dropdownDefaults;\n  }\n\n  // DROPDOWN PUBLIC METHODS\n  // =======================\n  /** Shows/hides the dropdown menu to the user. */\n  toggle() {\n    if (this.open) this.hide();\n    else this.show();\n  }\n\n  /** Shows the dropdown menu to the user. */\n  show() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (!open) {\n      const currentElement = getCurrentOpenDropdown(element);\n      const currentInstance = currentElement && getDropdownInstance(currentElement);\n      if (currentInstance) currentInstance.hide();\n\n      // dispatch event\n      [showDropdownEvent, shownDropdownEvent, updatedDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, showDropdownEvent);\n      if (!showDropdownEvent.defaultPrevented) {\n        addClass(menu, showClass);\n        addClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'true');\n\n        // change menu position\n        styleDropdown(this);\n\n        this.open = !open;\n\n        focus(element); // focus the element\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, shownDropdownEvent);\n      }\n    }\n  }\n\n  /** Hides the dropdown menu from the user. */\n  hide() {\n    const { element, open, menu, parentElement } = this;\n\n    /* istanbul ignore else */\n    if (open) {\n      [hideDropdownEvent, hiddenDropdownEvent].forEach(e => {\n        e.relatedTarget = element;\n      });\n\n      dispatchEvent(parentElement, hideDropdownEvent);\n      if (!hideDropdownEvent.defaultPrevented) {\n        removeClass(menu, showClass);\n        removeClass(parentElement, showClass);\n        setAttribute(element, ariaExpanded, 'false');\n\n        this.open = !open;\n        // only re-attach handler if the instance is not disposed\n        toggleDropdownDismiss(this);\n        dispatchEvent(parentElement, hiddenDropdownEvent);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener of the `Dropdown`.\n   *\n   * @param add when `true`, it will add the event listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, dropdownClickHandler);\n  };\n\n  /** Removes the `Dropdown` component from the target element. */\n  dispose() {\n    if (this.open) this.hide();\n\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst modalString = 'modal';\nexport default modalString;\n","/** @type {string} */\nconst modalComponent = 'Modal';\nexport default modalComponent;\n","/** @type {string} */\nconst offcanvasComponent = 'Offcanvas';\nexport default offcanvasComponent;\n","/**\n * Global namespace for components `sticky-top` class.\n */\nconst stickyTopClass = 'sticky-top';\nexport default stickyTopClass;\n","/**\n * Global namespace for components `position-sticky` class.\n */\nconst positionStickyClass = 'position-sticky';\nexport default positionStickyClass;\n","import {\n  getWindow,\n  getDocumentElement,\n  getElementStyle,\n  getDocumentBody,\n  hasClass,\n  setElementStyle,\n  getElementsByClassName,\n} from '@thednp/shorty';\n\nimport fixedTopClass from '../strings/fixedTopClass';\nimport fixedBottomClass from '../strings/fixedBottomClass';\nimport stickyTopClass from '../strings/stickyTopClass';\nimport positionStickyClass from '../strings/positionStickyClass';\n\nconst getFixedItems = (parent?: ParentNode) => [\n  ...getElementsByClassName(fixedTopClass, parent),\n  ...getElementsByClassName(fixedBottomClass, parent),\n  ...getElementsByClassName(stickyTopClass, parent),\n  ...getElementsByClassName(positionStickyClass, parent),\n  ...getElementsByClassName('is-fixed', parent),\n];\n\n/**\n * Removes *padding* and *overflow* from the `<body>`\n * and all spacing from fixed items.\n *\n * @param element the target modal/offcanvas\n */\nexport const resetScrollbar = (element?: HTMLElement) => {\n  const bd = getDocumentBody(element);\n  setElementStyle(bd, {\n    paddingRight: '',\n    overflow: '',\n  });\n\n  const fixedItems = getFixedItems(bd);\n\n  if (fixedItems.length) {\n    fixedItems.forEach(fixed => {\n      setElementStyle(fixed, {\n        paddingRight: '',\n        marginRight: '',\n      });\n    });\n  }\n};\n\n/**\n * Returns the scrollbar width if the body does overflow\n * the window.\n *\n * @param element target element\n * @returns the scrollbar width value\n */\nexport const measureScrollbar = (element: HTMLElement) => {\n  const { clientWidth } = getDocumentElement(element);\n  const { innerWidth } = getWindow(element);\n  return Math.abs(innerWidth - clientWidth);\n};\n\n/**\n * Sets the `<body>` and fixed items style when modal / offcanvas\n * is shown to the user.\n *\n * @param element the target modal/offcanvas\n * @param overflow body does overflow or not\n */\nexport const setScrollbar = (element: HTMLElement, overflow?: boolean) => {\n  const bd = getDocumentBody(element);\n  const bodyPad = parseInt(getElementStyle(bd, 'paddingRight'), 10);\n  const isOpen = getElementStyle(bd, 'overflow') === 'hidden';\n  const sbWidth = isOpen && bodyPad ? 0 : measureScrollbar(element);\n  const fixedItems = getFixedItems(bd);\n\n  /* istanbul ignore else */\n  if (overflow) {\n    setElementStyle(bd, {\n      overflow: 'hidden',\n      paddingRight: `${bodyPad + sbWidth}px`,\n    });\n\n    /* istanbul ignore else */\n    if (fixedItems.length) {\n      fixedItems.forEach(fixed => {\n        const itemPadValue = getElementStyle(fixed, 'paddingRight');\n        fixed.style.paddingRight = `${parseInt(itemPadValue, 10) + sbWidth}px`;\n        /* istanbul ignore else */\n        if ([stickyTopClass, positionStickyClass].some(c => hasClass(fixed, c))) {\n          const itemMValue = getElementStyle(fixed, 'marginRight');\n          fixed.style.marginRight = `${parseInt(itemMValue, 10) - sbWidth}px`;\n        }\n      });\n    }\n  }\n};\n","/**\n * Global namespace for components `fixed-top` class.\n */\nconst fixedTopClass = 'fixed-top';\nexport default fixedTopClass;\n","/**\n * Global namespace for components `fixed-bottom` class.\n */\nconst fixedBottomClass = 'fixed-bottom';\nexport default fixedBottomClass;\n","/** @type {string} */\nconst offcanvasString = 'offcanvas';\nexport default offcanvasString;\n","import { getDocumentBody, isNode, createElement } from '@thednp/shorty';\n\n// the default container for Modal, Offcanvas, Popover and Tooltip\nconst popupContainer = createElement({ tagName: 'div', className: 'popup-container' }) as HTMLElement;\n\nconst appendPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n  const BODY = containerIsBody ? customContainer : getDocumentBody(target);\n\n  if (isNode(target)) {\n    if (lookup === popupContainer) {\n      BODY.append(popupContainer);\n    }\n    lookup.append(target);\n  }\n};\n\nconst removePopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const containerIsBody = isNode(customContainer) && customContainer.nodeName === 'BODY';\n  const lookup = isNode(customContainer) && !containerIsBody ? customContainer : popupContainer;\n\n  if (isNode(target)) {\n    target.remove();\n\n    if (lookup === popupContainer && !popupContainer.children.length) {\n      popupContainer.remove();\n    }\n  }\n};\n\nconst hasPopup = (target: HTMLElement, customContainer?: ParentNode) => {\n  const lookup = isNode(customContainer) && customContainer.nodeName !== 'BODY' ? customContainer : popupContainer;\n  return isNode(target) && lookup.contains(target);\n};\n\nexport { popupContainer, appendPopup, removePopup, hasPopup };\n","import {\n  createElement,\n  getDocument,\n  reflow,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getDocumentBody,\n} from '@thednp/shorty';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\nimport { resetScrollbar } from './scrollbar';\nimport { appendPopup, removePopup } from './popupContainer';\n\nconst backdropString = 'backdrop';\nconst modalBackdropClass = `${modalString}-${backdropString}`;\nconst offcanvasBackdropClass = `${offcanvasString}-${backdropString}`;\nconst modalActiveSelector = `.${modalString}.${showClass}`;\nconst offcanvasActiveSelector = `.${offcanvasString}.${showClass}`;\n\n// any document would suffice\nconst overlay = createElement('div') as HTMLElement;\n\n/**\n * Returns the current active modal / offcancas element.\n *\n * @param element the context element\n * @returns the requested element\n */\nconst getCurrentOpen = (element?: HTMLElement): HTMLElement | null => {\n  return querySelector(`${modalActiveSelector},${offcanvasActiveSelector}`, getDocument(element));\n};\n\n/**\n * Toogles from a Modal overlay to an Offcanvas, or vice-versa.\n *\n * @param isModal\n */\nconst toggleOverlayType = (isModal?: boolean) => {\n  const targetClass = isModal ? modalBackdropClass : offcanvasBackdropClass;\n  [modalBackdropClass, offcanvasBackdropClass].forEach(c => {\n    removeClass(overlay, c);\n  });\n  addClass(overlay, targetClass);\n};\n\n/**\n * Append the overlay to DOM.\n *\n * @param element\n * @param hasFade\n * @param isModal\n */\nconst appendOverlay = (element: HTMLElement, hasFade: boolean, isModal?: boolean) => {\n  toggleOverlayType(isModal);\n  appendPopup(overlay, getDocumentBody(element));\n  if (hasFade) addClass(overlay, fadeClass);\n};\n\n/**\n * Shows the overlay to the user.\n */\nconst showOverlay = () => {\n  if (!hasClass(overlay, showClass)) {\n    addClass(overlay, showClass);\n    reflow(overlay);\n  }\n};\n\n/**\n * Hides the overlay from the user.\n */\nconst hideOverlay = () => {\n  removeClass(overlay, showClass);\n};\n\n/**\n * Removes the overlay from DOM.\n *\n * @param element\n */\nconst removeOverlay = (element?: HTMLElement): void => {\n  if (!getCurrentOpen(element)) {\n    removeClass(overlay, fadeClass);\n    removePopup(overlay, getDocumentBody(element));\n    resetScrollbar(element);\n  }\n};\n\nexport {\n  overlay,\n  offcanvasBackdropClass,\n  modalBackdropClass,\n  modalActiveSelector,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n};\n","import { isHTMLElement, getElementStyle } from '@thednp/shorty';\n\n/**\n * @param element target\n * @returns the check result\n */\nconst isVisible = (element: HTMLElement) => {\n  return isHTMLElement(element) && getElementStyle(element, 'visibility') !== 'hidden' && element.offsetParent !== null;\n};\nexport default isVisible;\n","/* Native JavaScript for Bootstrap 5 | Modal\n-------------------------------------------- */\nimport {\n  keyEscape,\n  getElementTransitionDuration,\n  removeAttribute,\n  setAttribute,\n  keydownEvent,\n  mouseclickEvent,\n  resizeEvent,\n  ariaModal,\n  ariaHidden,\n  getInstance,\n  isRTL,\n  removeClass,\n  hasClass,\n  addClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  getDocumentElement,\n  getDocumentBody,\n  getDocument,\n  getWindow,\n  CSS4Declaration,\n  setElementStyle,\n  createCustomEvent,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  focus,\n  Timer,\n  MouseEvent,\n  KeyboardEvent,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport modalString from '../strings/modalString';\nimport modalComponent from '../strings/modalComponent';\nimport offcanvasComponent from '../strings/offcanvasComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport { setScrollbar, measureScrollbar } from '../util/scrollbar';\nimport {\n  overlay,\n  modalActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport isVisible from '../util/isVisible';\nimport BaseComponent from './base-component';\nimport { ModalOptions, ModalEvent } from '../interface/modal';\nimport { hasPopup } from '../util/popupContainer';\n\n// MODAL PRIVATE GC\n// ================\nconst modalSelector = `.${modalString}`;\nconst modalToggleSelector = `[${dataBsToggle}=\"${modalString}\"]`;\nconst modalDismissSelector = `[${dataBsDismiss}=\"${modalString}\"]`;\nconst modalStaticClass = `${modalString}-static`;\n\nconst modalDefaults = {\n  backdrop: true,\n  keyboard: true,\n};\n\n/**\n * Static method which returns an existing `Modal` instance associated\n * to a target `Element`.\n */\nconst getModalInstance = (element: HTMLElement) => getInstance<Modal>(element, modalComponent);\n\n/**\n * A `Modal` initialization callback.\n */\nconst modalInitCallback = (element: HTMLElement) => new Modal(element);\n\n// MODAL CUSTOM EVENTS\n// ===================\nconst showModalEvent = createCustomEvent<ModalEvent>(`show.bs.${modalString}`);\nconst shownModalEvent = createCustomEvent<ModalEvent>(`shown.bs.${modalString}`);\nconst hideModalEvent = createCustomEvent<ModalEvent>(`hide.bs.${modalString}`);\nconst hiddenModalEvent = createCustomEvent<ModalEvent>(`hidden.bs.${modalString}`);\n\n// MODAL PRIVATE METHODS\n// =====================\n/**\n * Applies special style for the `<body>` and fixed elements\n * when a modal instance is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst setModalScrollbar = (self: Modal) => {\n  const { element } = self;\n  const scrollbarWidth = measureScrollbar(element);\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  const { clientHeight: modalHeight, scrollHeight: modalScrollHeight } = element;\n  const modalOverflow = modalHeight !== modalScrollHeight;\n\n  /* istanbul ignore else */\n  if (!modalOverflow && scrollbarWidth) {\n    const pad = !isRTL(element) ? 'paddingRight' : /* istanbul ignore next */ 'paddingLeft';\n    const padStyle = {} as Partial<CSS4Declaration>;\n    padStyle[pad] = `${scrollbarWidth}px`;\n    setElementStyle(element, padStyle);\n  }\n  setScrollbar(element, modalOverflow || clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of events that close the modal.\n *\n * @param self the `Modal` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleModalDismiss = (self: Modal, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, update } = self;\n  action(element, mouseclickEvent, modalDismissHandler);\n  action(getWindow(element), resizeEvent, update, passiveHandler);\n  action(getDocument(element), keydownEvent, modalKeyHandler);\n};\n\n/**\n * Executes after a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalHide = (self: Modal) => {\n  const { triggers, element, relatedTarget } = self;\n  removeOverlay(element);\n  setElementStyle(element, { paddingRight: '', display: '' });\n  toggleModalDismiss(self);\n\n  const focusElement = showModalEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (focusElement) focus(focusElement as HTMLElement);\n\n  hiddenModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, hiddenModalEvent);\n};\n\n/**\n * Executes after a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst afterModalShow = (self: Modal) => {\n  const { element, relatedTarget } = self;\n  focus(element);\n  toggleModalDismiss(self, true);\n\n  shownModalEvent.relatedTarget = relatedTarget as HTMLElement | undefined;\n  dispatchEvent(element, shownModalEvent);\n};\n\n/**\n * Executes before a modal is shown to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalShow = (self: Modal) => {\n  const { element, hasFade } = self;\n  setElementStyle(element, { display: 'block' });\n  setModalScrollbar(self);\n  /* istanbul ignore else */\n  if (!getCurrentOpen(element)) {\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, showClass);\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n\n  if (hasFade) emulateTransitionEnd(element, () => afterModalShow(self));\n  else afterModalShow(self);\n};\n\n/**\n * Executes before a modal is hidden to the user.\n *\n * @param self the `Modal` instance\n */\nconst beforeModalHide = (self: Modal) => {\n  const { element, options, hasFade } = self;\n\n  // callback can also be the transitionEvent object, we wanna make sure it's not\n  // call is not forced and overlay is visible\n  if (options.backdrop && hasFade && hasClass(overlay, showClass) && !getCurrentOpen(element)) {\n    // AND no modal is visible\n    hideOverlay();\n    emulateTransitionEnd(overlay, () => afterModalHide(self));\n  } else {\n    afterModalHide(self);\n  }\n};\n\n// MODAL EVENT HANDLERS\n// ====================\n/**\n * Handles the `click` event listener for modal.\n *\n * @param e the `Event` object\n */\nconst modalClickHandler = (e: MouseEvent<HTMLElement>) => {\n  const { target } = e;\n\n  const trigger = target && closest(target, modalToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.toggle();\n  }\n};\n\n/**\n * Handles the `keydown` event listener for modal\n * to hide the modal when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst modalKeyHandler = ({ code, target }: KeyboardEvent<HTMLElement>) => {\n  const element = querySelector(modalActiveSelector, getDocument(target));\n  const self = element && getModalInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options } = self;\n    /* istanbul ignore else */\n    if (\n      options.keyboard &&\n      code === keyEscape && // the keyboard option is enabled and the key is 27\n      hasClass(element, showClass)\n    ) {\n      // the modal is not visible\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `click` event listeners that hide the modal.\n *\n * @param e the `Event` object\n */\nconst modalDismissHandler = (e: MouseEvent<HTMLElement>) => {\n  const { currentTarget } = e;\n  const self = currentTarget ? getModalInstance(currentTarget) : null;\n\n  // this timer is needed\n  /* istanbul ignore else: must have a filter */\n  if (self && currentTarget && !Timer.get(currentTarget)) {\n    const { options, isStatic, modalDialog } = self;\n    const { backdrop } = options;\n    const { target } = e;\n\n    const selectedText = getDocument(currentTarget)?.getSelection()?.toString().length;\n    const targetInsideDialog = modalDialog.contains(target);\n    const dismiss = target && closest(target, modalDismissSelector);\n\n    /* istanbul ignore else */\n    if (isStatic && !targetInsideDialog) {\n      Timer.set(\n        currentTarget,\n        () => {\n          addClass(currentTarget, modalStaticClass);\n          emulateTransitionEnd(modalDialog, () => staticTransitionEnd(self));\n        },\n        17,\n      );\n    } else if (dismiss || (!selectedText && !isStatic && !targetInsideDialog && backdrop)) {\n      self.relatedTarget = dismiss || null;\n      self.hide();\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` event listeners for `Modal`.\n *\n * @param self the `Modal` instance\n */\nconst staticTransitionEnd = (self: Modal) => {\n  const { element, modalDialog } = self;\n  const duration = (getElementTransitionDuration(modalDialog) || 0) + 17;\n  removeClass(element, modalStaticClass);\n  // user must wait for zoom out transition\n  Timer.set(element, () => Timer.clear(element), duration);\n};\n\n// MODAL DEFINITION\n// ================\n/** Returns a new `Modal` instance. */\nexport default class Modal extends BaseComponent {\n  static selector = modalSelector;\n  static init = modalInitCallback;\n  static getInstance = getModalInstance;\n  declare options: ModalOptions;\n  declare modalDialog: HTMLElement;\n  declare triggers: HTMLElement[];\n  declare isStatic: boolean;\n  declare hasFade: boolean;\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually the `.modal` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ModalOptions>) {\n    super(target, config);\n\n    // the modal\n    const { element } = this;\n\n    // the modal-dialog\n    const modalDialog = querySelector(`.${modalString}-dialog`, element);\n\n    /* istanbul ignore else */\n    if (modalDialog) {\n      this.modalDialog = modalDialog;\n      // modal can have multiple triggering elements\n      this.triggers = [...querySelectorAll(modalToggleSelector, getDocument(element))].filter(\n        btn => getTargetElement(btn) === element,\n      );\n\n      // additional internals\n      this.isStatic = this.options.backdrop === 'static';\n      this.hasFade = hasClass(element, fadeClass);\n      this.relatedTarget = null;\n\n      // attach event listeners\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return modalComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return modalDefaults;\n  }\n\n  // MODAL PUBLIC METHODS\n  // ====================\n  /** Toggles the visibility of the modal. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the modal to the user. */\n  show() {\n    const { element, options, hasFade, relatedTarget } = this;\n    const { backdrop } = options;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showModalEvent);\n      if (!showModalEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getModalInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, offcanvasComponent);\n          if (that) that.hide();\n        }\n        if (backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, hasFade, true);\n          } else {\n            toggleOverlayType(true);\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeModalShow(this), overlayDelay);\n        } else {\n          beforeModalShow(this);\n          /* istanbul ignore else */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hide the modal from the user. */\n  hide() {\n    const { element, hasFade, relatedTarget } = this;\n\n    if (hasClass(element, showClass)) {\n      hideModalEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideModalEvent);\n\n      if (!hideModalEvent.defaultPrevented) {\n        removeClass(element, showClass);\n        setAttribute(element, ariaHidden, 'true');\n        removeAttribute(element, ariaModal);\n\n        /* istanbul ignore else */\n        if (hasFade) {\n          emulateTransitionEnd(element, () => beforeModalHide(this));\n        } else {\n          beforeModalHide(this);\n        }\n      }\n    }\n  }\n\n  /**\n   * Updates the modal layout.\n   */\n  update = () => {\n    /* istanbul ignore else */\n    if (hasClass(this.element, showClass)) setModalScrollbar(this);\n  };\n\n  /**\n   * Toggles on/off the `click` event listener of the `Modal` instance.\n   *\n   * @param add when `true`, event listener(s) is/are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { triggers } = this;\n\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, modalClickHandler));\n    }\n  };\n\n  /** Removes the `Modal` component from target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, modalDialog } = clone;\n    // const callback = () => setTimeout(() => super.dispose(), 17);\n    const callback = () => super.dispose();\n    this._toggleEventListeners();\n\n    this.hide();\n\n    /* istanbul ignore else */\n    if (hasClass(element, 'fade')) {\n      // use transitionend callback\n      emulateTransitionEnd(modalDialog, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","/* Native JavaScript for Bootstrap 5 | OffCanvas\n------------------------------------------------ */\nimport {\n  ariaHidden,\n  addClass,\n  hasClass,\n  closest,\n  querySelectorAll,\n  querySelector,\n  removeAttribute,\n  setAttribute,\n  keyEscape,\n  keydownEvent,\n  mouseclickEvent,\n  ariaModal,\n  emulateTransitionEnd,\n  dispatchEvent,\n  getElementTransitionDuration,\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  removeClass,\n  setElementStyle,\n  createCustomEvent,\n  focus,\n  getInstance,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport showClass from '../strings/showClass';\nimport offcanvasString from '../strings/offcanvasString';\nimport offcanvasComponent from '../strings/offcanvasComponent';\nimport modalComponent from '../strings/modalComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport isVisible from '../util/isVisible';\nimport { setScrollbar } from '../util/scrollbar';\nimport { hasPopup } from '../util/popupContainer';\nimport {\n  overlay,\n  offcanvasActiveSelector,\n  toggleOverlayType,\n  appendOverlay,\n  showOverlay,\n  hideOverlay,\n  getCurrentOpen,\n  removeOverlay,\n} from '../util/backdrop';\nimport BaseComponent from './base-component';\nimport { OffcanvasOptions, OffcanvasEvent } from '../interface/offcanvas';\n\n// OFFCANVAS PRIVATE GC\n// ====================\nconst offcanvasSelector = `.${offcanvasString}`;\nconst offcanvasToggleSelector = `[${dataBsToggle}=\"${offcanvasString}\"]`;\nconst offcanvasDismissSelector = `[${dataBsDismiss}=\"${offcanvasString}\"]`;\nconst offcanvasTogglingClass = `${offcanvasString}-toggling`;\n\nconst offcanvasDefaults = {\n  backdrop: true, // boolean\n  keyboard: true, // boolean\n  scroll: false, // boolean\n};\n\n/**\n * Static method which returns an existing `Offcanvas` instance associated\n * to a target `Element`.\n */\nconst getOffcanvasInstance = (element: HTMLElement) => getInstance<Offcanvas>(element, offcanvasComponent);\n\n/**\n * An `Offcanvas` initialization callback.\n */\nconst offcanvasInitCallback = (element: HTMLElement) => new Offcanvas(element);\n\n// OFFCANVAS CUSTOM EVENTS\n// =======================\nconst showOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`show.bs.${offcanvasString}`);\nconst shownOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`shown.bs.${offcanvasString}`);\nconst hideOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hide.bs.${offcanvasString}`);\nconst hiddenOffcanvasEvent = createCustomEvent<OffcanvasEvent>(`hidden.bs.${offcanvasString}`);\n\n// OFFCANVAS PRIVATE METHODS\n// =========================\n/**\n * Sets additional style for the `<body>` and other elements\n * when showing an offcanvas to the user.\n *\n * @param self the `Offcanvas` instance\n */\nconst setOffCanvasScrollbar = (self: Offcanvas) => {\n  const { element } = self;\n  const { clientHeight, scrollHeight } = getDocumentElement(element);\n  setScrollbar(element, clientHeight !== scrollHeight);\n};\n\n/**\n * Toggles on/off the listeners of the events that close the offcanvas.\n *\n * @param self the `Offcanvas` instance\n * @param add when *true* listeners are added\n */\nconst toggleOffCanvasDismiss = (self: Offcanvas, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const doc = getDocument(self.element);\n  action(doc, keydownEvent, offcanvasKeyDismissHandler);\n  action(doc, mouseclickEvent, offcanvasDismissHandler);\n};\n\n/**\n * Executes before showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasShow = (self: Offcanvas) => {\n  const { element, options } = self;\n\n  /* istanbul ignore else */\n  if (!options.scroll) {\n    setOffCanvasScrollbar(self);\n    setElementStyle(getDocumentBody(element), { overflow: 'hidden' });\n  }\n\n  addClass(element, offcanvasTogglingClass);\n  addClass(element, showClass);\n  setElementStyle(element, { visibility: 'visible' });\n\n  emulateTransitionEnd(element, () => showOffcanvasComplete(self));\n};\n\n/**\n * Executes before hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst beforeOffcanvasHide = (self: Offcanvas) => {\n  const { element, options } = self;\n  const currentOpen = getCurrentOpen(element);\n\n  element.blur();\n\n  if (!currentOpen && options.backdrop && hasClass(overlay, showClass)) {\n    hideOverlay();\n  }\n  emulateTransitionEnd(element, () => hideOffcanvasComplete(self));\n};\n\n// OFFCANVAS EVENT HANDLERS\n// ========================\n/**\n * Handles the `click` event listeners.\n *\n * @param e the `Event` object\n */\nconst offcanvasTriggerHandler = (e: MouseEvent) => {\n  const trigger = closest(e.target as HTMLElement, offcanvasToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    self.relatedTarget = trigger;\n    self.toggle();\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') {\n      e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the event listeners that close the offcanvas.\n *\n * @param e the `Event` object\n */\nconst offcanvasDismissHandler = (e: MouseEvent) => {\n  const { target } = e;\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const offCanvasDismiss = querySelector(offcanvasDismissSelector, element as HTMLElement | undefined);\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    const { options, triggers } = self;\n    const { backdrop } = options;\n    const trigger = closest(target as HTMLElement, offcanvasToggleSelector);\n    const selection = getDocument(element).getSelection();\n\n    /* istanbul ignore else: a filter is required here */\n    if (!overlay.contains(target as HTMLElement) || backdrop !== 'static') {\n      /* istanbul ignore else */\n      if (\n        !(selection && selection.toString().length) &&\n        ((!element.contains(target as HTMLElement) &&\n          backdrop &&\n          /* istanbul ignore next */ (!trigger || triggers.includes(target as HTMLElement))) ||\n          (offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement)))\n      ) {\n        self.relatedTarget =\n          offCanvasDismiss && offCanvasDismiss.contains(target as HTMLElement) ? offCanvasDismiss : null;\n        self.hide();\n      }\n\n      /* istanbul ignore next */\n      if (trigger && trigger.tagName === 'A') e.preventDefault();\n    }\n  }\n};\n\n/**\n * Handles the `keydown` event listener for offcanvas\n * to hide it when user type the `ESC` key.\n *\n * @param e the `Event` object\n */\nconst offcanvasKeyDismissHandler = ({ code, target }: KeyboardEvent) => {\n  const element = querySelector(offcanvasActiveSelector, getDocument(target as Node));\n  const self = element && getOffcanvasInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (self.options.keyboard && code === keyEscape) {\n      self.relatedTarget = null;\n      self.hide();\n    }\n  }\n};\n\n/**\n * Handles the `transitionend` when showing the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst showOffcanvasComplete = (self: Offcanvas) => {\n  const { element } = self;\n  removeClass(element, offcanvasTogglingClass);\n\n  removeAttribute(element, ariaHidden);\n  setAttribute(element, ariaModal, 'true');\n  setAttribute(element, 'role', 'dialog');\n\n  dispatchEvent(element, shownOffcanvasEvent);\n\n  toggleOffCanvasDismiss(self, true);\n  focus(element);\n};\n\n/**\n * Handles the `transitionend` when hiding the offcanvas.\n *\n * @param self the `Offcanvas` instance\n */\nconst hideOffcanvasComplete = (self: Offcanvas) => {\n  const { element, triggers } = self;\n\n  setAttribute(element, ariaHidden, 'true');\n  removeAttribute(element, ariaModal);\n  removeAttribute(element, 'role');\n  setElementStyle(element, { visibility: '' });\n\n  const visibleTrigger = showOffcanvasEvent.relatedTarget || triggers.find(isVisible);\n  /* istanbul ignore else */\n  if (visibleTrigger) focus(visibleTrigger as HTMLElement);\n\n  removeOverlay(element);\n\n  dispatchEvent(element, hiddenOffcanvasEvent);\n  removeClass(element, offcanvasTogglingClass);\n\n  // must check for open instances\n  if (!getCurrentOpen(element)) {\n    toggleOffCanvasDismiss(self);\n  }\n};\n\n// OFFCANVAS DEFINITION\n// ====================\n/** Returns a new `Offcanvas` instance. */\nexport default class Offcanvas extends BaseComponent {\n  static selector = offcanvasSelector;\n  static init = offcanvasInitCallback;\n  static getInstance = getOffcanvasInstance;\n  declare options: OffcanvasOptions;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target usually an `.offcanvas` element\n   * @param config instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<OffcanvasOptions>) {\n    super(target, config);\n\n    // instance element\n    const { element } = this;\n\n    // all the triggering buttons\n    this.triggers = [...querySelectorAll(offcanvasToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // additional instance property\n    this.relatedTarget = null;\n\n    // attach event listeners\n    this._toggleEventListeners(true);\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return offcanvasComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return offcanvasDefaults;\n  }\n\n  // OFFCANVAS PUBLIC METHODS\n  // ========================\n  /** Shows or hides the offcanvas from the user. */\n  toggle() {\n    if (hasClass(this.element, showClass)) this.hide();\n    else this.show();\n  }\n\n  /** Shows the offcanvas to the user. */\n  show() {\n    const { element, options, relatedTarget } = this;\n    let overlayDelay = 0;\n\n    if (!hasClass(element, showClass)) {\n      showOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      shownOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, showOffcanvasEvent);\n\n      if (!showOffcanvasEvent.defaultPrevented) {\n        // we elegantly hide any opened modal/offcanvas\n        const currentOpen = getCurrentOpen(element);\n        if (currentOpen && currentOpen !== element) {\n          const that =\n            getOffcanvasInstance(currentOpen) ||\n            /* istanbul ignore next */\n            getInstance<typeof BaseComponent & { hide: () => void }>(currentOpen, modalComponent);\n          if (that) that.hide();\n        }\n\n        if (options.backdrop) {\n          if (!hasPopup(overlay)) {\n            appendOverlay(element, true);\n          } else {\n            toggleOverlayType();\n          }\n\n          overlayDelay = getElementTransitionDuration(overlay);\n          showOverlay();\n\n          setTimeout(() => beforeOffcanvasShow(this), overlayDelay);\n        } else {\n          beforeOffcanvasShow(this);\n          /* istanbul ignore next - this test was done on Modal */\n          if (currentOpen && hasClass(overlay, showClass)) {\n            hideOverlay();\n          }\n        }\n      }\n    }\n  }\n\n  /** Hides the offcanvas from the user. */\n  hide() {\n    const { element, relatedTarget } = this;\n    // let overlayDelay = 0;\n\n    if (hasClass(element, showClass)) {\n      hideOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      hiddenOffcanvasEvent.relatedTarget = relatedTarget || undefined;\n      dispatchEvent(element, hideOffcanvasEvent);\n      if (!hideOffcanvasEvent.defaultPrevented) {\n        addClass(element, offcanvasTogglingClass);\n        removeClass(element, showClass);\n        beforeOffcanvasHide(this);\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listeners.\n   *\n   * @param self the `Offcanvas` instance\n   * @param add when *true*, listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    this.triggers.forEach(btn => action(btn, mouseclickEvent, offcanvasTriggerHandler));\n  };\n\n  /** Removes the `Offcanvas` from the target element. */\n  dispose() {\n    const clone = { ...this };\n    const { element, options } = clone;\n    const delay = options.backdrop ? getElementTransitionDuration(overlay) : /* istanbul ignore next */ 0;\n    const callback = () => setTimeout(() => super.dispose(), delay + 17);\n    this._toggleEventListeners();\n\n    this.hide();\n    if (hasClass(element, showClass)) {\n      emulateTransitionEnd(element, callback);\n      /* istanbul ignore next */\n    } else {\n      callback();\n    }\n  }\n}\n","/** @type {string} */\nconst popoverString = 'popover';\nexport default popoverString;\n","/** @type {string} */\nconst popoverComponent = 'Popover';\nexport default popoverComponent;\n","/** @type {string} */\nconst tooltipString = 'tooltip';\nexport default tooltipString;\n","import tooltipString from '../strings/tooltipString';\n\n/**\n * Returns a template for Popover / Tooltip.\n *\n * @param tipType the expected markup type\n * @returns the template markup\n */\nconst getTipTemplate = (tipType: string) => {\n  const isTooltip = tipType === tooltipString;\n  const bodyClass = isTooltip ? `${tipType}-inner` : `${tipType}-body`;\n  const header = !isTooltip ? `<h3 class=\"${tipType}-header\"></h3>` : '';\n  const arrow = `<div class=\"${tipType}-arrow\"></div>`;\n  const body = `<div class=\"${bodyClass}\"></div>`;\n  return `<div class=\"${tipType}\" role=\"${tooltipString}\">${header + arrow + body}</div>`;\n};\n\nexport default getTipTemplate;\n","const tipClassPositions = {\n  top: 'top',\n  bottom: 'bottom',\n  left: 'start',\n  right: 'end',\n};\n\nexport default tipClassPositions;\n","import {\n  isHTMLElement,\n  setElementStyle,\n  getDocumentElement,\n  getBoundingClientRect,\n  getElementStyle,\n  isRTL,\n  toLowerCase,\n  createCustomEvent,\n  dispatchEvent,\n} from '@thednp/shorty';\n\nimport popoverComponent from '../strings/popoverComponent';\nimport tipClassPositions from './tipClassPositions';\nimport Tooltip from '../components/tooltip';\nimport type { TooltipEvent } from '../interface/tooltip';\nimport type { PopoverEvent } from '../interface/popover';\n\n/**\n * Style popovers and tooltips.\n *\n * @param self the `Popover` / `Tooltip` instance\n */\nconst styleTip = <T extends Tooltip>(self: T) => {\n  const tipClasses = /\\b(top|bottom|start|end)+/;\n  const { element, tooltip, container, options, arrow } = self;\n\n  /* istanbul ignore else */\n  if (tooltip) {\n    const tipPositions = { ...tipClassPositions };\n    const RTL = isRTL(element);\n\n    // reset tooltip style (top: 0, left: 0 works best)\n    setElementStyle(tooltip, {\n      // top: '0px', left: '0px', right: '', bottom: '',\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    const isPopover = self.name === popoverComponent;\n    const { offsetWidth: tipWidth, offsetHeight: tipHeight } = tooltip;\n    const { clientWidth: htmlcw, clientHeight: htmlch, offsetWidth: htmlow } = getDocumentElement(element);\n    let { placement } = options;\n    const { clientWidth: parentCWidth, offsetWidth: parentOWidth } = container as HTMLElement;\n    const parentPosition = getElementStyle(container as HTMLElement, 'position');\n    const fixedParent = parentPosition === 'fixed';\n    const scrollbarWidth = fixedParent ? Math.abs(parentCWidth - parentOWidth) : Math.abs(htmlcw - htmlow);\n    const leftBoundry = RTL && fixedParent ? /* istanbul ignore next */ scrollbarWidth : 0;\n    const rightBoundry = htmlcw - (!RTL ? scrollbarWidth : 0) - 1;\n    const {\n      width: elemWidth,\n      height: elemHeight,\n      left: elemRectLeft,\n      right: elemRectRight,\n      top: elemRectTop,\n    } = getBoundingClientRect(element, true);\n    const { x, y } = {\n      x: elemRectLeft,\n      y: elemRectTop,\n    };\n    // reset arrow style\n    setElementStyle(arrow as HTMLElement, {\n      top: '',\n      left: '',\n      right: '',\n      bottom: '',\n    });\n    let topPosition: number | string = 0;\n    let bottomPosition: number | string = '';\n    let leftPosition: number | string = 0;\n    let rightPosition: number | string = '';\n    let arrowTop: number | string = '';\n    let arrowLeft: number | string = '';\n    let arrowRight: number | string = '';\n\n    const arrowWidth = (arrow as HTMLElement).offsetWidth || 0;\n    const arrowHeight = (arrow as HTMLElement).offsetHeight || 0;\n    const arrowAdjust = arrowWidth / 2;\n\n    // check placement\n    let topExceed = elemRectTop - tipHeight - arrowHeight < 0;\n    let bottomExceed = elemRectTop + tipHeight + elemHeight + arrowHeight >= htmlch;\n    let leftExceed = elemRectLeft - tipWidth - arrowWidth < leftBoundry;\n    let rightExceed = elemRectLeft + tipWidth + elemWidth + arrowWidth >= rightBoundry;\n\n    const horizontals = ['left', 'right'];\n    const verticals = ['top', 'bottom'];\n\n    topExceed = horizontals.includes(placement)\n      ? elemRectTop + elemHeight / 2 - tipHeight / 2 - arrowHeight < 0\n      : topExceed;\n    bottomExceed = horizontals.includes(placement)\n      ? elemRectTop + tipHeight / 2 + elemHeight / 2 + arrowHeight >= htmlch\n      : bottomExceed;\n    leftExceed = verticals.includes(placement) ? elemRectLeft + elemWidth / 2 - tipWidth / 2 < leftBoundry : leftExceed;\n    rightExceed = verticals.includes(placement)\n      ? elemRectLeft + tipWidth / 2 + elemWidth / 2 >= rightBoundry\n      : rightExceed;\n\n    // first remove side positions if both left and right limits are exceeded\n    // we usually fall back to top|bottom\n    placement = horizontals.includes(placement) && leftExceed && rightExceed ? 'top' : placement;\n    // recompute placement\n    placement = placement === 'top' && topExceed ? 'bottom' : placement;\n    placement = placement === 'bottom' && bottomExceed ? 'top' : placement;\n    placement = placement === 'left' && leftExceed ? 'right' : placement;\n    placement = placement === 'right' && rightExceed ? /* istanbul ignore next */ 'left' : placement;\n\n    // update tooltip/popover class\n    if (!tooltip.className.includes(placement)) {\n      tooltip.className = tooltip.className.replace(tipClasses, tipPositions[placement]);\n    }\n\n    // compute tooltip / popover coordinates\n    /* istanbul ignore else */\n    if (horizontals.includes(placement)) {\n      // secondary|side positions\n      if (placement === 'left') {\n        // LEFT\n        leftPosition = x - tipWidth - (isPopover ? arrowWidth : 0);\n      } else {\n        // RIGHT\n        leftPosition = x + elemWidth + (isPopover ? arrowWidth : 0);\n      }\n\n      // adjust top and arrow\n      if (topExceed && bottomExceed) {\n        topPosition = 0;\n        bottomPosition = 0;\n        arrowTop = elemRectTop + elemHeight / 2 - arrowHeight / 2;\n      } else if (topExceed) {\n        topPosition = y;\n        bottomPosition = '';\n        arrowTop = elemHeight / 2 - arrowWidth;\n      } else if (bottomExceed) {\n        topPosition = y - tipHeight + elemHeight;\n        bottomPosition = '';\n        arrowTop = tipHeight - elemHeight / 2 - arrowWidth;\n      } else {\n        topPosition = y - tipHeight / 2 + elemHeight / 2;\n        arrowTop = tipHeight / 2 - arrowHeight / 2;\n      }\n    } else if (verticals.includes(placement)) {\n      if (placement === 'top') {\n        topPosition = y - tipHeight - (isPopover ? arrowHeight : 0);\n      } else {\n        // BOTTOM\n        topPosition = y + elemHeight + (isPopover ? arrowHeight : 0);\n      }\n\n      // adjust left | right and also the arrow\n      if (leftExceed) {\n        leftPosition = 0;\n        arrowLeft = x + elemWidth / 2 - arrowAdjust;\n      } else if (rightExceed) {\n        leftPosition = 'auto';\n        rightPosition = 0;\n        arrowRight = elemWidth / 2 + rightBoundry - elemRectRight - arrowAdjust;\n      } else {\n        leftPosition = x - tipWidth / 2 + elemWidth / 2;\n        arrowLeft = tipWidth / 2 - arrowAdjust;\n      }\n    }\n\n    // apply style to tooltip/popover\n    setElementStyle(tooltip, {\n      top: `${topPosition}px`,\n      bottom: bottomPosition === '' ? '' : `${bottomPosition}px`,\n      left: leftPosition === 'auto' ? leftPosition : `${leftPosition}px`,\n      right: rightPosition !== '' ? `${rightPosition}px` : '',\n    });\n\n    // update arrow placement\n    /* istanbul ignore else */\n    if (isHTMLElement(arrow)) {\n      if (arrowTop !== '') {\n        arrow.style.top = `${arrowTop}px`;\n      }\n      if (arrowLeft !== '') {\n        arrow.style.left = `${arrowLeft}px`;\n      } else if (arrowRight !== '') {\n        arrow.style.right = `${arrowRight}px`;\n      }\n    }\n    const updatedTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`updated.bs.${toLowerCase(self.name)}`);\n    dispatchEvent(element, updatedTooltipEvent);\n  }\n};\n\nexport default styleTip;\n","import getTipTemplate from './getTipTemplate';\nimport tooltipString from '../strings/tooltipString';\nimport { TooltipOptions } from '../interface/tooltip';\n\nconst tooltipDefaults: TooltipOptions = {\n  template: getTipTemplate(tooltipString),\n  title: '',\n  customClass: '',\n  trigger: 'hover focus',\n  placement: 'top',\n  sanitizeFn: undefined,\n  animation: true,\n  delay: 200,\n  container: document.body,\n  content: '',\n  dismissible: false,\n  btnClose: '',\n};\nexport default tooltipDefaults;\n","/**\n * Global namespace for `data-bs-title` attribute.\n */\nconst dataOriginalTitle = 'data-original-title';\nexport default dataOriginalTitle;\n","/** @type {string} */\nconst tooltipComponent = 'Tooltip';\nexport default tooltipComponent;\n","import { isNode, isArray, isFunction, isString, isNodeList, isHTMLElement } from '@thednp/shorty';\n\n/**\n * Append an existing `Element` to Popover / Tooltip component or HTML\n * markup string to be parsed & sanitized to be used as popover / tooltip content.\n *\n * @param element target\n * @param content the `Element` to append / string\n * @param sanitizeFn a function to sanitize string content\n */\nconst setHtml = (element: HTMLElement, content: Node[] | Node | string, sanitizeFn?: (s: string) => string) => {\n  /* istanbul ignore else */\n  if (isString(content) && content.length) {\n    let dirty = content.trim(); // fixing #233\n    if (isFunction(sanitizeFn)) dirty = sanitizeFn(dirty);\n\n    const domParser = new DOMParser();\n    const tempDocument = domParser.parseFromString(dirty, 'text/html');\n    element.append(...[...tempDocument.body.childNodes]);\n  } else if (isHTMLElement(content)) {\n    element.append(content);\n  } else if (isNodeList(content) || (isArray(content) && content.every(isNode))) {\n    element.append(...[...content]);\n  }\n};\nexport default setHtml;\n","/* Native JavaScript for Bootstrap 5 | Tooltip\n---------------------------------------------- */\nimport {\n  ariaDescribedBy,\n  focusoutEvent,\n  focusinEvent,\n  focusEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  mousedownEvent,\n  mouseclickEvent,\n  closest,\n  getUID,\n  getDocument,\n  getWindow,\n  removeAttribute,\n  getAttribute,\n  setAttribute,\n  hasAttribute,\n  touchstartEvent,\n  resizeEvent,\n  scrollEvent,\n  mousehoverEvent,\n  toLowerCase,\n  focus,\n  Timer,\n  emulateTransitionEnd,\n  passiveHandler,\n  dispatchEvent,\n  isApple,\n  getInstance,\n  ObjectAssign,\n  createCustomEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementStyle,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport dataOriginalTitle from '../strings/dataOriginalTitle';\nimport showClass from '../strings/showClass';\nimport tooltipString from '../strings/tooltipString';\nimport tooltipComponent from '../strings/tooltipComponent';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\nimport modalString from '../strings/modalString';\nimport offcanvasString from '../strings/offcanvasString';\n\nimport styleTip from '../util/styleTip';\nimport createTip from '../util/createTip';\nimport { appendPopup, removePopup, hasPopup } from '../util/popupContainer';\nimport getElementContainer from '../util/getElementContainer';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport BaseComponent from './base-component';\nimport { TooltipOptions, TooltipEvent } from '../interface/tooltip';\nimport { PopoverOptions, PopoverEvent } from '../interface/popover';\n\n// TOOLTIP PRIVATE GC\n// ==================\nconst tooltipSelector = `[${dataBsToggle}=\"${tooltipString}\"],[data-tip=\"${tooltipString}\"]`;\nconst titleAttr = 'title';\n\n/**\n * Static method which returns an existing `Tooltip` instance associated\n * to a target `Element`.\n *\n */\nlet getTooltipInstance = (element: HTMLElement) => getInstance<Tooltip>(element, tooltipComponent);\n\n/**\n * A `Tooltip` initialization callback.\n */\nconst tooltipInitCallback = (element: HTMLElement) => new Tooltip(element);\n\n// TOOLTIP PRIVATE METHODS\n// =======================\n/**\n * Removes the tooltip from the DOM.\n *\n * @param self the `Tooltip` instance\n */\nconst removeTooltip = (self: Tooltip) => {\n  const { element, tooltip, container, offsetParent } = self;\n  removeAttribute(element, ariaDescribedBy);\n  removePopup(tooltip as HTMLElement, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Check if container contains the tooltip.\n *\n * @param self Tooltip\n */\nconst hasTip = (self: Tooltip): boolean | undefined => {\n  const { tooltip, container, offsetParent } = self;\n\n  return tooltip && hasPopup(tooltip, container === offsetParent ? container : offsetParent);\n};\n\n/**\n * Executes after the instance has been disposed.\n *\n * @param self the `Tooltip` instance\n * @param callback the parent dispose callback\n */\nconst disposeTooltipComplete = (self: Tooltip, callback?: () => void) => {\n  const { element } = self;\n  self._toggleEventListeners();\n\n  /* istanbul ignore else */\n  if (hasAttribute(element, dataOriginalTitle) && self.name === tooltipComponent) {\n    toggleTooltipTitle(self);\n  }\n  /* istanbul ignore else */\n  if (callback) callback();\n};\n\n/**\n * Toggles on/off the special `Tooltip` event listeners.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipAction = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element } = self;\n\n  action(getDocument(element), touchstartEvent, self.handleTouch, passiveHandler);\n\n  [scrollEvent, resizeEvent].forEach(ev => {\n    action(getWindow(element), ev, self.update, passiveHandler);\n  });\n};\n\n/**\n * Executes after the tooltip was shown to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipShownAction = (self: Tooltip) => {\n  const { element } = self;\n  const shownTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`shown.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self, true);\n  dispatchEvent(element, shownTooltipEvent);\n  Timer.clear(element, 'in');\n};\n\n/**\n * Executes after the tooltip was hidden to the user.\n *\n * @param self the `Tooltip` instance\n */\nconst tooltipHiddenAction = (self: Tooltip) => {\n  const { element } = self;\n  const hiddenTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hidden.bs.${toLowerCase(self.name)}`);\n\n  toggleTooltipAction(self);\n  removeTooltip(self);\n  dispatchEvent(element, hiddenTooltipEvent);\n\n  Timer.clear(element, 'out');\n};\n\n/**\n * Toggles on/off the `Tooltip` event listeners that hide/update the tooltip.\n *\n * @param self the `Tooltip` instance\n * @param add when `true`, event listeners are added\n */\nconst toggleTooltipOpenHandlers = (self: Tooltip, add?: boolean) => {\n  const action = add ? addListener : removeListener;\n  const { element, container, offsetParent } = self;\n  const { offsetHeight, scrollHeight } = container as HTMLElement;\n  const parentModal = closest(element, `.${modalString}`);\n  const parentOffcanvas = closest(element, `.${offcanvasString}`);\n\n  /* istanbul ignore else */\n  const win = getWindow(element);\n  const overflow = offsetHeight !== scrollHeight;\n  const scrollTarget = container === offsetParent && overflow ? container : win;\n  action(scrollTarget, resizeEvent, self.update, passiveHandler);\n  action(scrollTarget, scrollEvent, self.update, passiveHandler);\n\n  // dismiss tooltips inside modal / offcanvas\n  if (parentModal) action(parentModal, `hide.bs.${modalString}`, self.handleHide);\n  if (parentOffcanvas) action(parentOffcanvas, `hide.bs.${offcanvasString}`, self.handleHide);\n};\n\n/**\n * Toggles the `title` and `data-original-title` attributes.\n *\n * @param self the `Tooltip` instance\n * @param content when `true`, event listeners are added\n */\nconst toggleTooltipTitle = (self: Tooltip, content?: string) => {\n  // [0 - add, 1 - remove] | [0 - remove, 1 - add]\n  const titleAtt = [dataOriginalTitle, titleAttr];\n  const { element } = self;\n\n  setAttribute(\n    element,\n    titleAtt[content ? 0 : 1],\n    content || getAttribute(element, titleAtt[0]) || /* istanbul ignore next */ '',\n  );\n  removeAttribute(element, titleAtt[content ? 1 : 0]);\n};\n\n// TOOLTIP DEFINITION\n// ==================\n/** Creates a new `Tooltip` instance. */\nexport default class Tooltip extends BaseComponent {\n  static selector = tooltipSelector;\n  static init = tooltipInitCallback;\n  static getInstance = getTooltipInstance;\n  static styleTip = styleTip;\n  declare options: TooltipOptions;\n  declare btn?: HTMLElement;\n  declare tooltip?: HTMLElement;\n  declare container: ParentNode;\n  declare arrow?: HTMLElement;\n  declare offsetParent?: HTMLElement;\n  declare enabled: boolean;\n  declare id: string;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<TooltipOptions>) {\n    super(target, config);\n\n    const { element } = this;\n    const isTooltip = this.name === tooltipComponent;\n    const tipString = isTooltip ? tooltipString : popoverString;\n    const tipComponent = isTooltip ? tooltipComponent : popoverComponent;\n\n    /* istanbul ignore next: this is to set Popover too */\n    getTooltipInstance = <T extends Tooltip>(elem: HTMLElement) => getInstance<T>(elem, tipComponent);\n\n    // additional properties\n    this.enabled = true;\n    /** Set unique ID for `aria-describedby`. */\n    this.id = `${tipString}-${getUID(element, tipString)}`;\n\n    // instance options\n    const { options } = this;\n\n    // invalidate\n    if (!((!options.title && isTooltip) || (!isTooltip && !options.content))) {\n      // reset default options\n      ObjectAssign(tooltipDefaults, { titleAttr: '' });\n\n      // set title attributes and add event listeners\n      /* istanbul ignore else */\n      if (hasAttribute(element, titleAttr) && isTooltip && typeof options.title === 'string') {\n        toggleTooltipTitle(this, options.title);\n      }\n\n      // set containers\n      this.container = getElementContainer(element);\n      this.offsetParent = ['sticky', 'fixed'].some(\n        position => getElementStyle(this.container as HTMLElement, 'position') === position,\n      )\n        ? (this.container as HTMLElement)\n        : getDocument(this.element).body;\n\n      // create tooltip here\n      createTip(this);\n\n      // attach events\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tooltipComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return tooltipDefaults;\n  }\n\n  // TOOLTIP PUBLIC METHODS\n  // ======================\n  /** Handles the focus event on iOS. */\n  handleFocus = () => focus(this.element);\n  /** Shows the tooltip. */\n  handleShow = () => this.show();\n  show() {\n    const { options, tooltip, element, container, offsetParent, id } = this;\n    const { animation } = options;\n    const outTimer = Timer.get(element, 'out');\n    const tipContainer = container === offsetParent ? container : offsetParent;\n\n    Timer.clear(element, 'out');\n\n    if (tooltip && !outTimer && !hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const showTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`show.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, showTooltipEvent);\n          if (!showTooltipEvent.defaultPrevented) {\n            // append to container\n            appendPopup(tooltip, tipContainer);\n\n            setAttribute(element, ariaDescribedBy, `#${id}`);\n\n            this.update();\n            toggleTooltipOpenHandlers(this, true);\n\n            /* istanbul ignore else */\n            if (!hasClass(tooltip, showClass)) addClass(tooltip, showClass);\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipShownAction(this));\n            else tooltipShownAction(this);\n          }\n        },\n        17,\n        'in',\n      );\n    }\n  }\n\n  /** Hides the tooltip. */\n  handleHide = () => this.hide();\n  hide() {\n    const { options, tooltip, element } = this;\n    const { animation, delay } = options;\n\n    Timer.clear(element, 'in');\n\n    /* istanbul ignore else */\n    if (tooltip && hasTip(this)) {\n      Timer.set(\n        element,\n        () => {\n          const hideTooltipEvent = createCustomEvent<TooltipEvent | PopoverEvent>(`hide.bs.${toLowerCase(this.name)}`);\n          dispatchEvent(element, hideTooltipEvent);\n\n          if (!hideTooltipEvent.defaultPrevented) {\n            this.update();\n            removeClass(tooltip, showClass);\n            toggleTooltipOpenHandlers(this);\n\n            /* istanbul ignore else */\n            if (animation) emulateTransitionEnd(tooltip, () => tooltipHiddenAction(this));\n            else tooltipHiddenAction(this);\n          }\n        },\n        delay + 17,\n        'out',\n      );\n    }\n  }\n\n  /** Updates the tooltip position. */\n  update = () => {\n    styleTip<Tooltip>(this);\n  };\n\n  /** Toggles the tooltip visibility. */\n  toggle = () => {\n    const { tooltip } = this;\n\n    if (tooltip && !hasTip(this)) this.show();\n    else this.hide();\n  };\n\n  /** Enables the tooltip. */\n  enable() {\n    const { enabled } = this;\n    /* istanbul ignore else */\n    if (!enabled) {\n      this._toggleEventListeners(true);\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Disables the tooltip. */\n  disable() {\n    const { tooltip, options, enabled } = this;\n    const { animation } = options;\n    /* istanbul ignore else */\n    if (enabled) {\n      if (tooltip && hasTip(this) && animation) {\n        this.hide();\n        emulateTransitionEnd(tooltip, () => this._toggleEventListeners());\n      } else {\n        this._toggleEventListeners();\n      }\n      this.enabled = !enabled;\n    }\n  }\n\n  /** Toggles the `disabled` property. */\n  toggleEnabled() {\n    if (!this.enabled) this.enable();\n    else this.disable();\n  }\n\n  /**\n   * Handles the `touchstart` event listener for `Tooltip`\n   *\n   * @this {Tooltip}\n   * @param {TouchEvent} e the `Event` object\n   */\n  handleTouch = ({ target }: TouchEvent) => {\n    const { tooltip, element } = this;\n\n    /* istanbul ignore else */\n    if (\n      (tooltip && tooltip.contains(target as HTMLElement)) ||\n      target === element ||\n      (target && element.contains(target as HTMLElement))\n    ) {\n      // smile for ESLint\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Toggles on/off the `Tooltip` event listeners.\n   *\n   * @param add when `true`, event listeners are added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    // btn is only for dismissible popover\n    const { element, options, btn } = this;\n    const { trigger } = options;\n    const isPopover = this.name !== tooltipComponent;\n    const dismissible = isPopover && (options as PopoverOptions).dismissible ? true : false;\n\n    /* istanbul ignore else */\n    if (!trigger.includes('manual')) {\n      this.enabled = !!add;\n\n      const triggerOptions = trigger.split(' ');\n\n      triggerOptions.forEach(tr => {\n        /* istanbul ignore else */\n        if (tr === mousehoverEvent) {\n          action(element, mousedownEvent, this.handleShow);\n          action(element, mouseenterEvent, this.handleShow);\n\n          /* istanbul ignore else */\n          if (!dismissible) {\n            action(element, mouseleaveEvent, this.handleHide);\n            action(getDocument(element), touchstartEvent, this.handleTouch, passiveHandler);\n          }\n        } else if (tr === mouseclickEvent) {\n          action(element, tr, !dismissible ? this.toggle : this.handleShow);\n        } else if (tr === focusEvent) {\n          action(element, focusinEvent, this.handleShow);\n          /* istanbul ignore else */\n          if (!dismissible) action(element, focusoutEvent, this.handleHide);\n          /* istanbul ignore else */\n          if (isApple) {\n            action(element, mouseclickEvent, this.handleFocus);\n          }\n        }\n        /* istanbul ignore else */\n        if (dismissible && btn) {\n          action(btn, mouseclickEvent, this.handleHide);\n        }\n      });\n    }\n  };\n\n  /** Removes the `Tooltip` from the target element. */\n  dispose() {\n    const { tooltip, options } = this;\n    const clone = { ...this, name: this.name };\n    const callback = () => setTimeout(() => disposeTooltipComplete(clone, () => super.dispose()), 17);\n\n    if (options.animation && hasTip(clone)) {\n      this.options.delay = 0; // reset delay\n      this.hide();\n      emulateTransitionEnd(tooltip as HTMLElement, callback);\n    } else {\n      callback();\n    }\n  }\n}\n","import { getDocument, isShadowRoot, isTableElement, getParentNode, getElementStyle } from '@thednp/shorty';\n\n/**\n * Returns an `HTMLElement` to be used as default value for *options.container*\n * for `Tooltip` / `Popover` components.\n *\n * @see https://github.com/floating-ui/floating-ui\n *\n * @param element the target\n * @returns the query result\n */\nconst getElementContainer = (element: HTMLElement): ParentNode => {\n  const majorBlockTags = ['HTML', 'BODY'];\n  const containers: ParentNode[] = [];\n  let { parentNode } = element as Node;\n\n  while (parentNode && !majorBlockTags.includes(parentNode.nodeName)) {\n    parentNode = getParentNode(parentNode) as ParentNode;\n    /* istanbul ignore else */\n    if (!(isShadowRoot(parentNode) || isTableElement(parentNode))) {\n      containers.push(parentNode);\n    }\n  }\n\n  return (\n    containers.find((c, i) => {\n      if (\n        getElementStyle(c as HTMLElement, 'position') !== 'relative' &&\n        containers.slice(i + 1).every(r => getElementStyle(r as HTMLElement, 'position') === 'static')\n      ) {\n        return c;\n      }\n      return null;\n    }) || /* istanbul ignore next: optional guard */ getDocument(element).body\n  );\n};\n\nexport default getElementContainer;\n","import { createElement, addClass, hasClass, setAttribute, querySelector, isRTL, isHTMLElement } from '@thednp/shorty';\n\nimport tooltipComponent from '../strings/tooltipComponent';\nimport tooltipString from '../strings/tooltipString';\nimport popoverString from '../strings/popoverString';\nimport fadeClass from '../strings/fadeClass';\nimport tipClassPositions from './tipClassPositions';\nimport setHtml from './setHtml';\nimport Tooltip from '../components/tooltip';\nimport Popover from '../components/popover';\n\n/**\n * Creates a new tooltip / popover.\n *\n * @param self the `Tooltip` / `Popover` instance\n */\nconst createTip = (self: Tooltip | Popover) => {\n  const isTooltip = self.name === tooltipComponent;\n\n  const { id, element, options } = self;\n  const { title, placement, template, animation, customClass, sanitizeFn, dismissible, content, btnClose } = options;\n  const tipString = isTooltip ? tooltipString : popoverString;\n  const tipPositions = { ...tipClassPositions };\n  let titleParts: Node[] = [];\n  let contentParts: Node[] = [];\n\n  if (isRTL(element)) {\n    tipPositions.left = 'end';\n    tipPositions.right = 'start';\n  }\n\n  // set initial popover class\n  const placementClass = `bs-${tipString}-${tipPositions[placement]}`;\n\n  // load template\n  let tooltipTemplate: Node | string;\n  if (isHTMLElement(template)) {\n    tooltipTemplate = template;\n  } else {\n    const htmlMarkup = createElement('div') as HTMLElement;\n    setHtml(htmlMarkup, template, sanitizeFn);\n    tooltipTemplate = htmlMarkup.firstChild as HTMLElement;\n  }\n\n  // set popover markup\n  self.tooltip = isHTMLElement(tooltipTemplate)\n    ? (tooltipTemplate.cloneNode(true) as HTMLElement)\n    : /* istanbul ignore next */ undefined;\n\n  const { tooltip } = self;\n  /* istanbul ignore else */\n  if (tooltip) {\n    // set id and role attributes\n    setAttribute(tooltip, 'id', id);\n    setAttribute(tooltip, 'role', tooltipString);\n\n    const bodyClass = isTooltip ? `${tooltipString}-inner` : `${popoverString}-body`;\n    const tooltipHeader = isTooltip ? null : querySelector(`.${popoverString}-header`, tooltip);\n    const tooltipBody = querySelector(`.${bodyClass}`, tooltip);\n\n    // set arrow and enable access for styleTip\n    self.arrow = querySelector(`.${tipString}-arrow`, tooltip) as HTMLElement;\n    const { arrow } = self;\n\n    if (isHTMLElement(title)) titleParts = [title.cloneNode(true)];\n    else {\n      const tempTitle = createElement('div') as HTMLElement;\n      setHtml(tempTitle, title, sanitizeFn);\n      titleParts = [...[...tempTitle.childNodes]];\n    }\n\n    if (isHTMLElement(content)) contentParts = [content.cloneNode(true)];\n    else {\n      const tempContent = createElement('div') as HTMLElement;\n      setHtml(tempContent, content, sanitizeFn);\n      contentParts = [...[...tempContent.childNodes]];\n    }\n\n    // set dismissible button\n    if (dismissible) {\n      if (title) {\n        if (isHTMLElement(btnClose)) titleParts = [...titleParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          titleParts = [...titleParts, tempBtn.firstChild as Node];\n        }\n      } else {\n        /* istanbul ignore else */\n        if (tooltipHeader) tooltipHeader.remove();\n        if (isHTMLElement(btnClose)) contentParts = [...contentParts, btnClose.cloneNode(true)];\n        else {\n          const tempBtn = createElement('div') as HTMLElement;\n          setHtml(tempBtn, btnClose, sanitizeFn);\n          contentParts = [...contentParts, tempBtn.firstChild as Node];\n        }\n      }\n    }\n\n    // fill the template with content from options / data attributes\n    // also sanitize title && content\n    /* istanbul ignore else */\n    if (!isTooltip) {\n      /* istanbul ignore else */\n      if (title && tooltipHeader) setHtml(tooltipHeader, titleParts, sanitizeFn);\n      /* istanbul ignore else */\n      if (content && tooltipBody) setHtml(tooltipBody, contentParts, sanitizeFn);\n      // set btn\n      self.btn = querySelector('.btn-close', tooltip) || undefined;\n    } else if (title && tooltipBody) setHtml(tooltipBody, title, sanitizeFn);\n\n    // Bootstrap 5.2.x\n    // addClass(tooltip, 'position-absolute');\n    addClass(tooltip, 'position-fixed');\n    addClass(arrow, 'position-absolute');\n\n    // set popover animation and placement\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, tipString)) addClass(tooltip, tipString);\n    /* istanbul ignore else */\n    if (animation && !hasClass(tooltip, fadeClass)) addClass(tooltip, fadeClass);\n    /* istanbul ignore else */\n    if (customClass && !hasClass(tooltip, customClass)) {\n      addClass(tooltip, customClass);\n    }\n    /* istanbul ignore else */\n    if (!hasClass(tooltip, placementClass)) addClass(tooltip, placementClass);\n  }\n};\n\nexport default createTip;\n","/* Native JavaScript for Bootstrap 5 | Popover\n---------------------------------------------- */\nimport { getInstance, ObjectAssign, focus } from '@thednp/shorty';\n\nimport dataBsToggle from '../strings/dataBsToggle';\nimport popoverString from '../strings/popoverString';\nimport popoverComponent from '../strings/popoverComponent';\n\nimport getTipTemplate from '../util/getTipTemplate';\nimport styleTip from '../util/styleTip';\nimport tooltipDefaults from '../util/tooltipDefaults';\nimport Tooltip from './tooltip';\n\nimport type { PopoverOptions /* , PopoverEvent */ } from '../interface/popover';\n\n// POPOVER PRIVATE GC\n// ==================\nconst popoverSelector = `[${dataBsToggle}=\"${popoverString}\"],[data-tip=\"${popoverString}\"]`;\n\nconst popoverDefaults: PopoverOptions = ObjectAssign({}, tooltipDefaults, {\n  template: getTipTemplate(popoverString),\n  content: '',\n  dismissible: false,\n  btnClose: '<button class=\"btn-close\" aria-label=\"Close\"></button>',\n});\n\n/**\n * Static method which returns an existing `Popover` instance associated\n * to a target `Element`.\n *\n */\nconst getPopoverInstance = (element: HTMLElement) => getInstance<Popover>(element, popoverComponent);\n\n/**\n * A `Popover` initialization callback.\n */\nconst popoverInitCallback = (element: HTMLElement) => new Popover(element);\n\n// POPOVER DEFINITION\n// ==================\n/** Returns a new `Popover` instance. */\nexport default class Popover extends Tooltip {\n  static selector = popoverSelector;\n  static init = popoverInitCallback;\n  static getInstance = getPopoverInstance;\n  static styleTip = styleTip;\n  declare options: PopoverOptions;\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<PopoverOptions>) {\n    super(target, config);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return popoverComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return popoverDefaults;\n  }\n\n  /* extend original `show()` */\n  show = () => {\n    super.show();\n    // btn only exists within dismissible popover\n    const { options, btn } = this;\n    /* istanbul ignore else */\n    if (options.dismissible && btn) setTimeout(() => focus(btn), 17);\n  };\n}\n","/** @type {string} */\nconst scrollspyString = 'scrollspy';\nexport default scrollspyString;\n","/** @type {string} */\nconst scrollspyComponent = 'ScrollSpy';\nexport default scrollspyComponent;\n","/* Native JavaScript for Bootstrap 5 | ScrollSpy\n------------------------------------------------ */\nimport {\n  getDocumentBody,\n  getDocumentElement,\n  getDocument,\n  getWindow,\n  removeClass,\n  hasClass,\n  addClass,\n  getElementsByTagName,\n  getAttribute,\n  querySelector,\n  isHTMLElement,\n  isWindow,\n  createCustomEvent,\n  getInstance,\n  scrollEvent,\n  passiveHandler,\n  dispatchEvent,\n  getBoundingClientRect,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport activeClass from '../strings/activeClass';\nimport scrollspyString from '../strings/scrollspyString';\nimport scrollspyComponent from '../strings/scrollspyComponent';\n\nimport BaseComponent from './base-component';\nimport { ScrollSpyOptions, ScrollSpyEvent } from '../interface/scrollspy';\n\n// SCROLLSPY PRIVATE GC\n// ====================\nconst scrollspySelector = '[data-bs-spy=\"scroll\"]';\n\nconst scrollspyDefaults: ScrollSpyOptions = {\n  offset: 10,\n  target: null,\n};\n\n/**\n * Static method which returns an existing `ScrollSpy` instance associated\n * to a target `Element`.\n */\nconst getScrollSpyInstance = (element: HTMLElement) => getInstance<ScrollSpy>(element, scrollspyComponent);\n\n/**\n * A `ScrollSpy` initialization callback.\n */\nconst scrollspyInitCallback = (element: HTMLElement) => new ScrollSpy(element);\n\n// SCROLLSPY CUSTOM EVENT\n// ======================\nconst activateScrollSpy = createCustomEvent<ScrollSpyEvent>(`activate.bs.${scrollspyString}`);\n\n// SCROLLSPY PRIVATE METHODS\n// =========================\n/**\n * Update the state of all items.\n *\n * @param self the `ScrollSpy` instance\n */\nconst updateSpyTargets = (self: ScrollSpy) => {\n  const { target, scrollTarget, options, itemsLength, scrollHeight, element } = self;\n  const { offset } = options;\n  const isWin = isWindow(scrollTarget as Node | Window);\n\n  const links = target && getElementsByTagName('A', target);\n  const scrollHEIGHT = scrollTarget ? getScrollHeight(scrollTarget) : /* istanbul ignore next */ scrollHeight;\n\n  self.scrollTop = isWin ? (scrollTarget as Window).scrollY : (scrollTarget as HTMLElement).scrollTop;\n\n  // only update items/offsets once or with each mutation\n  /* istanbul ignore else */\n  if (links && (scrollHEIGHT !== scrollHeight || itemsLength !== links.length)) {\n    let href;\n    let targetItem;\n    let rect;\n\n    // reset arrays & update\n    self.items = [];\n    self.offsets = [];\n    self.scrollHeight = scrollHEIGHT;\n    self.maxScroll = self.scrollHeight - getOffsetHeight(self);\n\n    [...links].forEach(link => {\n      href = getAttribute(link, 'href');\n      targetItem =\n        href && href.charAt(0) === '#' && href.slice(-1) !== '#' && querySelector(href, getDocument(element));\n\n      if (targetItem) {\n        self.items.push(link);\n        rect = getBoundingClientRect(targetItem);\n        self.offsets.push((isWin ? rect.top + self.scrollTop : targetItem.offsetTop) - offset);\n      }\n    });\n    self.itemsLength = self.items.length;\n  }\n};\n\n/**\n * Returns the `scrollHeight` property of the scrolling element.\n *\n * @param scrollTarget the `ScrollSpy` instance\n * @return `scrollTarget` height\n */\nconst getScrollHeight = (scrollTarget: Node | Window) => {\n  return isHTMLElement(scrollTarget as Node)\n    ? (scrollTarget as HTMLElement).scrollHeight\n    : getDocumentElement(scrollTarget as Node).scrollHeight;\n};\n\n/**\n * Returns the height property of the scrolling element.\n *\n * @param params the `ScrollSpy` instance\n */\nconst getOffsetHeight = ({ element, scrollTarget }: ScrollSpy) => {\n  return isWindow(scrollTarget as Node) ? (scrollTarget as Window).innerHeight : getBoundingClientRect(element).height;\n};\n\n/**\n * Clear all items of the target.\n *\n * @param target a single item\n */\nconst clear = (target: HTMLElement) => {\n  [...getElementsByTagName('A', target)].forEach(item => {\n    if (hasClass(item, activeClass)) removeClass(item, activeClass);\n  });\n};\n\n/**\n * Activates a new item.\n *\n * @param self the `ScrollSpy` instance\n * @param item a single item\n */\nconst activate = (self: ScrollSpy, item: HTMLElement) => {\n  const { target, element } = self;\n  if (isHTMLElement(target)) clear(target);\n  self.activeItem = item;\n  addClass(item, activeClass);\n\n  // activate all parents\n  const parents: HTMLElement[] = [];\n  let parentItem = item;\n  while (parentItem !== getDocumentBody(element)) {\n    parentItem = parentItem.parentElement as HTMLElement;\n    if (hasClass(parentItem, 'nav') || hasClass(parentItem, 'dropdown-menu')) parents.push(parentItem);\n  }\n\n  parents.forEach(menuItem => {\n    const parentLink = menuItem.previousElementSibling as HTMLElement | null;\n\n    /* istanbul ignore else */\n    if (parentLink && !hasClass(parentLink, activeClass)) {\n      addClass(parentLink, activeClass);\n    }\n  });\n\n  // dispatch\n  activateScrollSpy.relatedTarget = item;\n  dispatchEvent(element, activateScrollSpy);\n};\n\n// SCROLLSPY DEFINITION\n// ====================\n/** Returns a new `ScrollSpy` instance. */\nexport default class ScrollSpy extends BaseComponent {\n  static selector = scrollspySelector;\n  static init = scrollspyInitCallback;\n  static getInstance = getScrollSpyInstance;\n  declare options: ScrollSpyOptions;\n  declare target: HTMLElement | null;\n  declare scrollTarget: HTMLElement | Window;\n  declare scrollTop: number;\n  declare maxScroll: number;\n  declare scrollHeight: number;\n  declare activeItem: HTMLElement | null;\n  declare items: HTMLElement[];\n  declare itemsLength: number;\n  declare offsets: number[];\n\n  /**\n   * @param target the target element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ScrollSpyOptions>) {\n    super(target, config);\n\n    // initialization element & options\n    const { element, options } = this;\n\n    // additional properties\n    this.target = querySelector(options.target as HTMLElement | string, getDocument(element));\n\n    // invalidate\n    if (this.target) {\n      // set initial state\n      this.scrollTarget = element.clientHeight < element.scrollHeight ? element : getWindow(element);\n      this.scrollHeight = getScrollHeight(this.scrollTarget);\n\n      // add event handlers\n      this._toggleEventListeners(true);\n\n      this.refresh();\n    }\n  }\n\n  /* eslint-disable */\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return scrollspyComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return scrollspyDefaults;\n  }\n  /* eslint-enable */\n\n  // SCROLLSPY PUBLIC METHODS\n  // ========================\n  /** Updates all items. */\n  refresh = () => {\n    const { target } = this;\n\n    // check if target is visible and invalidate\n    /* istanbul ignore else */\n    if (isHTMLElement(target) && target.offsetHeight > 0) {\n      updateSpyTargets(this);\n\n      const { scrollTop, maxScroll, itemsLength, items, activeItem } = this;\n\n      if (scrollTop >= maxScroll) {\n        const newActiveItem = items[itemsLength - 1];\n\n        /* istanbul ignore else */\n        if (activeItem !== newActiveItem) {\n          activate(this, newActiveItem);\n        }\n        return;\n      }\n\n      const { offsets } = this;\n\n      if (activeItem && scrollTop < offsets[0] && offsets[0] > 0) {\n        this.activeItem = null;\n        if (target) clear(target);\n        return;\n      }\n\n      items.forEach((item, i) => {\n        if (\n          activeItem !== item &&\n          scrollTop >= offsets[i] &&\n          (typeof offsets[i + 1] === 'undefined' || scrollTop < offsets[i + 1])\n        ) {\n          activate(this, item);\n        }\n      });\n    }\n  };\n\n  /**\n   * Toggles on/off the component event listener.\n   *\n   * @param add when `true`, listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.scrollTarget as EventTarget, scrollEvent, this.refresh, passiveHandler);\n  };\n\n  /** Removes `ScrollSpy` from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabString = 'tab';\nexport default tabString;\n","/* Native JavaScript for Bootstrap 5 | Tab\n------------------------------------------ */\nimport {\n  emulateTransitionEnd,\n  dispatchEvent,\n  removeClass,\n  hasClass,\n  addClass,\n  querySelector,\n  getElementsByClassName,\n  closest,\n  setAttribute,\n  mouseclickEvent,\n  createCustomEvent,\n  Timer,\n  getInstance,\n  ariaSelected,\n  reflow,\n  isHTMLElement,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport collapsingClass from '../strings/collapsingClass';\nimport activeClass from '../strings/activeClass';\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dropdownClasses from '../strings/dropdownClasses';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport tabString from '../strings/tabString';\nimport tabComponent from '../strings/tabComponent';\n\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport type { /* TabOptions, */ TabEvent } from '../interface/tab';\n\n// TAB PRIVATE GC\n// ================\nconst tabSelector = `[${dataBsToggle}=\"${tabString}\"]`;\n\n/**\n * Static method which returns an existing `Tab` instance associated\n * to a target `Element`.\n */\nconst getTabInstance = (element: HTMLElement) => getInstance<Tab>(element, tabComponent);\n\n/** A `Tab` initialization callback. */\nconst tabInitCallback = (element: HTMLElement) => new Tab(element);\n\n// TAB CUSTOM EVENTS\n// =================\nconst showTabEvent = createCustomEvent<TabEvent>(`show.bs.${tabString}`);\nconst shownTabEvent = createCustomEvent<TabEvent>(`shown.bs.${tabString}`);\nconst hideTabEvent = createCustomEvent<TabEvent>(`hide.bs.${tabString}`);\nconst hiddenTabEvent = createCustomEvent<TabEvent>(`hidden.bs.${tabString}`);\n\ninterface TabPrivate {\n  tab: HTMLElement | null;\n  content: HTMLElement | null;\n  currentHeight: number;\n  nextHeight: number;\n}\n\n/**\n * Stores the current active tab and its content\n * for a given `.nav` element.\n */\nconst tabPrivate: Map<HTMLElement, TabPrivate> = new Map();\n\n// TAB PRIVATE METHODS\n// ===================\n/**\n * Executes after tab transition has finished.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabEnd = (self: Tab) => {\n  const { tabContent, nav } = self;\n\n  /* istanbul ignore else */\n  if (tabContent && hasClass(tabContent, collapsingClass)) {\n    tabContent.style.height = '';\n    removeClass(tabContent, collapsingClass);\n  }\n\n  /* istanbul ignore else */\n  if (nav) Timer.clear(nav);\n};\n\n/**\n * Executes before showing the tab content.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabShow = (self: Tab) => {\n  const { element, tabContent, content: nextContent, nav } = self;\n  const { tab } = (isHTMLElement(nav) && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null };\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    const { currentHeight, nextHeight } = tabPrivate.get(element) || /* istanbul ignore next */ {\n      currentHeight: 0,\n      nextHeight: 0,\n    };\n    if (currentHeight === nextHeight) {\n      triggerTabEnd(self);\n    } else {\n      // enables height animation\n      setTimeout(() => {\n        tabContent.style.height = `${nextHeight}px`;\n        reflow(tabContent);\n        emulateTransitionEnd(tabContent, () => triggerTabEnd(self));\n      }, 50);\n    }\n  } else if (nav) Timer.clear(nav);\n\n  shownTabEvent.relatedTarget = tab as HTMLElement | undefined;\n\n  dispatchEvent(element, shownTabEvent);\n};\n\n/**\n * Executes before hiding the tab.\n *\n * @param self the `Tab` instance\n */\nconst triggerTabHide = (self: Tab) => {\n  const { element, content: nextContent, tabContent, nav } = self;\n  const { tab, content } = (nav && tabPrivate.get(nav)) || /* istanbul ignore next */ { tab: null, content: null };\n  let currentHeight = 0;\n\n  /* istanbul ignore else */\n  if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n    [content, nextContent].forEach(c => {\n      if (isHTMLElement(c)) addClass(c, 'overflow-hidden');\n    });\n    currentHeight = isHTMLElement(content) ? content.scrollHeight : /* istanbul ignore next */ 0;\n  }\n\n  // update relatedTarget and dispatch event\n  showTabEvent.relatedTarget = tab as HTMLElement | undefined;\n  hiddenTabEvent.relatedTarget = element;\n  dispatchEvent(element, showTabEvent);\n\n  if (!showTabEvent.defaultPrevented) {\n    if (nextContent) addClass(nextContent, activeClass);\n    if (content) removeClass(content, activeClass);\n\n    /* istanbul ignore else */\n    if (tabContent && nextContent && hasClass(nextContent, fadeClass)) {\n      const nextHeight = nextContent.scrollHeight;\n      tabPrivate.set(element, { currentHeight, nextHeight, tab: null, content: null });\n\n      addClass(tabContent, collapsingClass);\n      tabContent.style.height = `${currentHeight}px`;\n      reflow(tabContent);\n      [content, nextContent].forEach(c => {\n        if (c) removeClass(c, 'overflow-hidden');\n      });\n    }\n\n    if (nextContent && nextContent && hasClass(nextContent, fadeClass)) {\n      setTimeout(() => {\n        addClass(nextContent, showClass);\n        emulateTransitionEnd(nextContent, () => {\n          triggerTabShow(self);\n        });\n      }, 1);\n    } else {\n      if (nextContent) addClass(nextContent, showClass);\n      triggerTabShow(self);\n    }\n\n    if (tab) dispatchEvent(tab, hiddenTabEvent);\n  }\n};\n\n/**\n * Returns the current active tab and its target content.\n *\n * @param self the `Tab` instance\n * @returns the query result\n */\nconst getActiveTab = (self: Tab): { tab: HTMLElement | null; content: HTMLElement | null } => {\n  const { nav } = self;\n  /* istanbul ignore next */\n  if (!isHTMLElement(nav as HTMLElement | undefined)) return { tab: null, content: null };\n\n  const activeTabs = getElementsByClassName(activeClass, nav as HTMLElement);\n  let tab: HTMLElement | null = null;\n  /* istanbul ignore else */\n  if (activeTabs.length === 1 && !dropdownClasses.some(c => hasClass(activeTabs[0].parentElement as HTMLElement, c))) {\n    [tab] = activeTabs;\n  } else if (activeTabs.length > 1) {\n    tab = activeTabs[activeTabs.length - 1];\n  }\n  const content = isHTMLElement(tab as HTMLElement) ? getTargetElement(tab as HTMLElement) : null;\n  return { tab, content };\n};\n\n/**\n * Returns a parent dropdown.\n *\n * @param element the `Tab` element\n * @returns the parent dropdown\n */\nconst getParentDropdown = (element?: HTMLElement): HTMLElement | null => {\n  /* istanbul ignore next */\n  if (!isHTMLElement(element)) return null;\n  const dropdown = closest(element, `.${dropdownClasses.join(',.')}`);\n  return dropdown ? querySelector(`.${dropdownClasses[0]}-toggle`, dropdown) : null;\n};\n\n// TAB EVENT HANDLER\n// =================\n/**\n * Handles the `click` event listener.\n *\n * @param e the `Event` object\n */\nconst tabClickHandler = (e: Event) => {\n  const self = getTabInstance(e.target as HTMLElement);\n\n  /* istanbul ignore else */\n  if (self) {\n    e.preventDefault();\n    self.show();\n  }\n};\n\n// TAB DEFINITION\n// ==============\n/** Creates a new `Tab` instance. */\nexport default class Tab extends BaseComponent {\n  static selector = tabSelector;\n  static init = tabInitCallback;\n  static getInstance = getTabInstance;\n  declare nav: HTMLElement | null;\n  declare content: HTMLElement | null;\n  declare tabContent: HTMLElement | null;\n  declare nextContent: HTMLElement | null;\n  declare dropdown: HTMLElement | null;\n\n  /** @param target the target element */\n  constructor(target: HTMLElement | string) {\n    super(target);\n\n    // initialization element\n    const { element } = this;\n    const content = getTargetElement(element);\n\n    // no point initializing a tab without a corresponding content\n    /* istanbul ignore else */\n    if (content) {\n      const nav = closest(element, '.nav');\n      const container = closest(content, '.tab-content');\n\n      this.nav = nav;\n      this.content = content;\n      this.tabContent = container;\n\n      // event targets\n      this.dropdown = getParentDropdown(element);\n\n      // show first Tab instance of none is shown\n      // suggested on #432\n      const { tab } = getActiveTab(this);\n      if (nav && !tab) {\n        const firstTab = querySelector(tabSelector, nav);\n        const firstTabContent = firstTab && getTargetElement(firstTab);\n\n        /* istanbul ignore else */\n        if (firstTabContent) {\n          addClass(firstTab, activeClass);\n          addClass(firstTabContent, showClass);\n          addClass(firstTabContent, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n        }\n      }\n\n      // add event listener\n      this._toggleEventListeners(true);\n    }\n  }\n\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return tabComponent;\n  }\n\n  // TAB PUBLIC METHODS\n  // ==================\n  /** Shows the tab to the user. */\n  show() {\n    const { element, content: nextContent, nav, dropdown } = this;\n\n    /* istanbul ignore else */\n    if (!(nav && Timer.get(nav)) && !hasClass(element, activeClass)) {\n      const { tab, content } = getActiveTab(this);\n\n      /* istanbul ignore else */\n      if (nav) tabPrivate.set(nav, { tab, content, currentHeight: 0, nextHeight: 0 });\n\n      // update relatedTarget and dispatch\n      hideTabEvent.relatedTarget = element;\n\n      /* istanbul ignore else */\n      if (isHTMLElement(tab)) {\n        dispatchEvent(tab as EventTarget, hideTabEvent);\n        /* istanbul ignore else */\n        if (!hideTabEvent.defaultPrevented) {\n          addClass(element, activeClass);\n          setAttribute(element, ariaSelected, 'true');\n\n          const activeDropdown = isHTMLElement(tab) && getParentDropdown(tab);\n          if (activeDropdown && hasClass(activeDropdown, activeClass)) {\n            removeClass(activeDropdown, activeClass);\n          }\n\n          /* istanbul ignore else */\n          if (nav) {\n            const toggleTab = () => {\n              if (tab) {\n                removeClass(tab, activeClass);\n                setAttribute(tab, ariaSelected, 'false');\n              }\n              if (dropdown && !hasClass(dropdown, activeClass)) addClass(dropdown, activeClass);\n            };\n\n            if (content && (hasClass(content, fadeClass) || (nextContent && hasClass(nextContent, fadeClass)))) {\n              Timer.set(nav, toggleTab, 1);\n            } else toggleTab();\n          }\n\n          if (content) {\n            removeClass(content, showClass);\n            if (hasClass(content, fadeClass)) {\n              emulateTransitionEnd(content, () => triggerTabHide(this));\n            } else {\n              triggerTabHide(this);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, event listener is added\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    action(this.element, mouseclickEvent, tabClickHandler);\n  };\n\n  /** Removes the `Tab` component from the target element. */\n  dispose() {\n    this._toggleEventListeners();\n    super.dispose();\n  }\n}\n","/** @type {string} */\nconst tabComponent = 'Tab';\nexport default tabComponent;\n","/** @type {string} */\nconst toastString = 'toast';\nexport default toastString;\n","/** @type {string} */\nconst toastComponent = 'Toast';\nexport default toastComponent;\n","/* Native JavaScript for Bootstrap 5 | Toast\n-------------------------------------------- */\nimport {\n  mouseclickEvent,\n  closest,\n  removeClass,\n  hasClass,\n  addClass,\n  focusoutEvent,\n  focusinEvent,\n  mouseleaveEvent,\n  mouseenterEvent,\n  createCustomEvent,\n  getDocument,\n  Timer,\n  getInstance,\n  reflow,\n  emulateTransitionEnd,\n  dispatchEvent,\n  querySelectorAll,\n  querySelector,\n} from '@thednp/shorty';\n\nimport { addListener, removeListener } from '@thednp/event-listener';\n\nimport fadeClass from '../strings/fadeClass';\nimport showClass from '../strings/showClass';\nimport dataBsDismiss from '../strings/dataBsDismiss';\nimport dataBsToggle from '../strings/dataBsToggle';\nimport toastString from '../strings/toastString';\nimport toastComponent from '../strings/toastComponent';\nimport getTargetElement from '../util/getTargetElement';\nimport BaseComponent from './base-component';\nimport { ToastOptions, ToastEvent } from '../interface/toast';\n\n// TOAST PRIVATE GC\n// ================\nconst toastSelector = `.${toastString}`;\nconst toastDismissSelector = `[${dataBsDismiss}=\"${toastString}\"]`;\nconst toastToggleSelector = `[${dataBsToggle}=\"${toastString}\"]`;\nconst showingClass = 'showing';\n/** @deprecated */\nconst hideClass = 'hide';\n\nconst toastDefaults = {\n  animation: true,\n  autohide: true,\n  delay: 5000,\n};\n\n/**\n * Static method which returns an existing `Toast` instance associated\n * to a target `Element`.\n */\nconst getToastInstance = (element: HTMLElement) => getInstance<Toast>(element, toastComponent);\n\n/**\n * A `Toast` initialization callback.\n */\nconst toastInitCallback = (element: HTMLElement) => new Toast(element);\n\n// TOAST CUSTOM EVENTS\n// ===================\nconst showToastEvent = createCustomEvent<ToastEvent>(`show.bs.${toastString}`);\nconst shownToastEvent = createCustomEvent<ToastEvent>(`shown.bs.${toastString}`);\nconst hideToastEvent = createCustomEvent<ToastEvent>(`hide.bs.${toastString}`);\nconst hiddenToastEvent = createCustomEvent<ToastEvent>(`hidden.bs.${toastString}`);\n\n// TOAST PRIVATE METHODS\n// =====================\n/**\n * Executes after the toast is shown to the user.\n *\n * @param self the `Toast` instance\n */\nconst showToastComplete = (self: Toast) => {\n  const { element, options } = self;\n  removeClass(element, showingClass);\n  Timer.clear(element, showingClass);\n\n  dispatchEvent(element, shownToastEvent);\n  /* istanbul ignore else */\n  if (options.autohide) {\n    Timer.set(element, () => self.hide(), options.delay, toastString);\n  }\n};\n\n/**\n * Executes after the toast is hidden to the user.\n *\n * @param self the `Toast` instance\n */\nconst hideToastComplete = (self: Toast) => {\n  const { element } = self;\n  removeClass(element, showingClass);\n  removeClass(element, showClass);\n  addClass(element, hideClass); // B/C\n  Timer.clear(element, toastString);\n  dispatchEvent(element, hiddenToastEvent);\n};\n\n/**\n * Executes before hiding the toast.\n *\n * @param self the `Toast` instance\n */\nconst hideToast = (self: Toast) => {\n  const { element, options } = self;\n  addClass(element, showingClass);\n\n  if (options.animation) {\n    reflow(element);\n    emulateTransitionEnd(element, () => hideToastComplete(self));\n  } else {\n    hideToastComplete(self);\n  }\n};\n\n/**\n * Executes before showing the toast.\n *\n * @param self the `Toast` instance\n */\nconst showToast = (self: Toast) => {\n  const { element, options } = self;\n  Timer.set(\n    element,\n    () => {\n      removeClass(element, hideClass); // B/C\n      reflow(element);\n      addClass(element, showClass);\n      addClass(element, showingClass);\n\n      if (options.animation) {\n        emulateTransitionEnd(element, () => showToastComplete(self));\n      } else {\n        showToastComplete(self);\n      }\n    },\n    17,\n    showingClass,\n  );\n};\n\n// TOAST EVENT HANDLERS\n// ====================\n/**\n * Executes after the instance has been disposed.\n *\n * @param {Toast} self the `Toast` instance\n */\nconst completeDisposeToast = (self: Toast) => {\n  Timer.clear(self.element, toastString);\n  self._toggleEventListeners();\n};\n\n/**\n * Handles the `click` event listener for toast.\n *\n * @param e the `Event` object\n */\nconst toastClickHandler = (e: Event) => {\n  const { target } = e;\n\n  const trigger = target && closest(target as HTMLElement, toastToggleSelector);\n  const element = trigger && getTargetElement(trigger);\n  const self = element && getToastInstance(element);\n\n  /* istanbul ignore else */\n  if (self) {\n    /* istanbul ignore else */\n    if (trigger && trigger.tagName === 'A') e.preventDefault();\n    self.relatedTarget = trigger;\n    self.show();\n  }\n};\n\n/**\n * Executes when user interacts with the toast without closing it,\n * usually by hovering or focusing it.\n *\n * @param e the `Toast` instance\n */\nconst interactiveToastHandler = (e: MouseEvent) => {\n  const element = e.target as HTMLElement;\n  const self = getToastInstance(element);\n  const { type, relatedTarget } = e;\n\n  /* istanbul ignore else: a solid filter is required */\n  if (self && element !== relatedTarget && !element.contains(relatedTarget as Node)) {\n    if ([mouseenterEvent, focusinEvent].includes(type)) {\n      Timer.clear(element, toastString);\n    } else {\n      Timer.set(element, () => self.hide(), self.options.delay, toastString);\n    }\n  }\n};\n\n// TOAST DEFINITION\n// ================\n/** Creates a new `Toast` instance. */\nexport default class Toast extends BaseComponent {\n  static selector = toastSelector;\n  static init = toastInitCallback;\n  static getInstance = getToastInstance;\n  declare options: ToastOptions;\n  declare dismiss: HTMLElement | null;\n  declare triggers: HTMLElement[];\n  declare relatedTarget: HTMLElement | null;\n\n  /**\n   * @param target the target `.toast` element\n   * @param config the instance options\n   */\n  constructor(target: HTMLElement | string, config?: Partial<ToastOptions>) {\n    super(target, config);\n    const { element, options } = this;\n\n    // set fadeClass, the options.animation will override the markup\n    if (options.animation && !hasClass(element, fadeClass)) addClass(element, fadeClass);\n    else if (!options.animation && hasClass(element, fadeClass)) removeClass(element, fadeClass);\n\n    // dismiss button\n    this.dismiss = querySelector(toastDismissSelector, element);\n\n    // toast can have multiple triggering elements\n    this.triggers = [...querySelectorAll(toastToggleSelector, getDocument(element))].filter(\n      btn => getTargetElement(btn) === element,\n    );\n\n    // add event listener\n    this._toggleEventListeners(true);\n  }\n  /**\n   * Returns component name string.\n   */\n  get name() {\n    return toastComponent;\n  }\n  /**\n   * Returns component default options.\n   */\n  get defaults() {\n    return toastDefaults;\n  }\n  /**\n   * Returns *true* when toast is visible.\n   */\n  get isShown() {\n    return hasClass(this.element, showClass);\n  }\n\n  // TOAST PUBLIC METHODS\n  // ====================\n  /** Shows the toast. */\n  show = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && !isShown) {\n      dispatchEvent(element, showToastEvent);\n      if (!showToastEvent.defaultPrevented) {\n        showToast(this);\n      }\n    }\n  };\n\n  /** Hides the toast. */\n  hide = () => {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (element && isShown) {\n      dispatchEvent(element, hideToastEvent);\n      if (!hideToastEvent.defaultPrevented) {\n        hideToast(this);\n      }\n    }\n  };\n\n  /**\n   * Toggles on/off the `click` event listener.\n   *\n   * @param add when `true`, it will add the listener\n   */\n  _toggleEventListeners = (add?: boolean) => {\n    const action = add ? addListener : removeListener;\n    const { element, triggers, dismiss, options, hide } = this;\n\n    /* istanbul ignore else */\n    if (dismiss) {\n      action(dismiss, mouseclickEvent, hide);\n    }\n\n    /* istanbul ignore else */\n    if (options.autohide) {\n      [focusinEvent, focusoutEvent, mouseenterEvent, mouseleaveEvent].forEach(e =>\n        action(element, e, interactiveToastHandler),\n      );\n    }\n    /* istanbul ignore else */\n    if (triggers.length) {\n      triggers.forEach(btn => action(btn, mouseclickEvent, toastClickHandler));\n    }\n  };\n\n  /** Removes the `Toast` component from the target element. */\n  dispose() {\n    const { element, isShown } = this;\n\n    /* istanbul ignore else */\n    if (isShown) {\n      removeClass(element, showClass);\n    }\n\n    completeDisposeToast(this);\n\n    super.dispose();\n  }\n}\n","import { Data, getElementsByTagName, matches } from '@thednp/shorty';\n\nimport { addListener } from '@thednp/event-listener';\n\nimport Alert from '../components/alert';\nimport Button from '../components/button';\nimport Carousel from '../components/carousel';\nimport Collapse from '../components/collapse';\nimport Dropdown from '../components/dropdown';\nimport Modal from '../components/modal';\nimport Offcanvas from '../components/offcanvas';\nimport Popover from '../components/popover';\nimport ScrollSpy from '../components/scrollspy';\nimport Tab from '../components/tab';\nimport Toast from '../components/toast';\nimport Tooltip from '../components/tooltip';\n\nconst componentsList = new Map<\n  string,\n  | typeof Alert\n  | typeof Button\n  | typeof Carousel\n  | typeof Collapse\n  | typeof Dropdown\n  | typeof Modal\n  | typeof Offcanvas\n  | typeof Popover\n  | typeof ScrollSpy\n  | typeof Tab\n  | typeof Toast\n  | typeof Tooltip\n>();\n\n[Alert, Button, Carousel, Collapse, Dropdown, Modal, Offcanvas, Popover, ScrollSpy, Tab, Toast, Tooltip].forEach(c =>\n  componentsList.set(c.prototype.name, c),\n);\n\n/**\n * Initialize all matched `Element`s for one component.\n *\n * @param callback\n * @param collection\n */\nconst initComponentDataAPI = <T>(\n  callback: (el: HTMLElement, ops?: Record<string, unknown>) => T,\n  collection: HTMLCollectionOf<HTMLElement> | HTMLElement[],\n) => {\n  [...collection].forEach(x => callback(x));\n};\n\n/**\n * Remove one component from a target container element or all in the page.\n *\n * @param component the component name\n * @param context parent `Node`\n */\nconst removeComponentDataAPI = <T>(component: string, context: ParentNode) => {\n  const compData = Data.getAllFor(component) as Map<HTMLElement, T>;\n\n  if (compData) {\n    [...compData].forEach(([element, instance]) => {\n      if (context.contains(element)) (instance as T & { dispose: () => void }).dispose();\n    });\n  }\n};\n\n/**\n * Initialize all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const initCallback = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n  const elemCollection = [...getElementsByTagName('*', lookUp)];\n\n  componentsList.forEach(cs => {\n    const { init, selector } = cs;\n    initComponentDataAPI(\n      init,\n      elemCollection.filter(item => matches(item, selector)),\n    );\n  });\n};\n\n/**\n * Remove all BSN components for a target container.\n *\n * @param context parent `Node`\n */\nexport const removeDataAPI = (context?: ParentNode) => {\n  const lookUp = context && context.nodeName ? context : document;\n\n  componentsList.forEach(comp => {\n    removeComponentDataAPI(comp.prototype.name, lookUp);\n  });\n};\n\n// Bulk initialize all components\nif (document.body) initCallback();\nelse {\n  addListener(document, 'DOMContentLoaded', () => initCallback(), { once: true });\n}\n"],"names":["Object","defineProperty","module","exports","value","default","object","property","prototype","hasOwnProperty","call","$1b88cb4cd4b28de3$var$_getPrototypeOf","obj","parcelRequire","__esModule","$dIxxU","$e08672c9889dd930$exports","target","receiver","$e08672c9889dd930$var$get","$e08672c9889dd930$var$_superPropBase","target1","property1","receiver1","Reflect","get","base","desc","getOwnPropertyDescriptor","$6332dc3ea9a0ae64$var$_Object","fe","ge","Ee","ye","we","Ae","$","_","tt","st","it","lt","mt","ft","Ct","zt","Vt","Re","Qe","je","qe","$e","C","U","A","navigator","userAgentData","S","userAgent","z","brands","some","t","test","brand","x","vn","includes","$6332dc3ea9a0ae64$var$Re","document","head","N","style","Xt","e","n","o","s","r","currentTarget","apply","removeEventListener","Jt","addEventListener","Gt","Kt","Yt","getAttribute","kn","hasAttribute","Tn","setAttribute","Cn","removeAttribute","Ln","_classList","classList","add","$parcel$interopDefault","$8nrFW","In","remove","zn","contains","v","i","nodeType","u","E","Map","L","data","set","has","getAllFor","delete","size","Hn","k","W","constructor","name","R","d","ownerDocument","window","M","assign","concat","Zt","createElement","tagName","$dDDEV","Q","dispatchEvent","g","getComputedStyle","replace","toLowerCase","getPropertyValue","ne","parseFloat","Number","isNaN","Un","Event","ee","a","l","setTimeout","Qn","focus","V","w","entries","oe","Gn","keys","Xn","CustomEvent","cancelable","bubbles","Yn","passive","Zn","offsetHeight","$n","forEach","param","_param","setProperty","I","f","_n","length","se","clearTimeout","h","ref","getBoundingClientRect","width","height","top","right","c","bottom","left","p","offsetWidth","m","Math","round","y","eo","body","T","documentElement","ce","so","nodeName","assignedSlot","parentNode","host","B","H","b","ae","id","ro","defaultView","uo","clientHeight","yo","dir","Ao","le","closest","getRootNode","So","querySelector","de","getElementsByTagName","Mo","querySelectorAll","To","getElementsByClassName","Do","matches","type","param1","_param1","once","fadeClass","showClass","dataBsDismiss","alertString","alertComponent","$6332dc3ea9a0ae64$var$nt","BaseComponent","config","__publicField","this","element","isString","Error","prevInstance","Data","_toggleEventListeners","options","defaults","ObjectKeys","dataset","j","normalizeOptions","key","prop","_this","alertSelector","alertDismissSelector","closeAlertEvent","createCustomEvent","closedAlertEvent","alertTransitionEnd","self","dispose","$6332dc3ea9a0ae64$export$caec2af78bcc877f","Alert","nt","_$e","$ds8z5","hasClass","defaultPrevented","removeClass","emulateTransitionEnd","action","addListener","removeListener","dismiss","close","mouseclickEvent","$fVNic","getInstance","activeClass","dataBsToggle","buttonComponent","buttonSelector","buttonString","$6332dc3ea9a0ae64$export$353f5b6fc5456de1","Button","preventDefault","isActive","addClass","ariaPressed","toggle","n2","String","dataBsTarget","carouselString","carouselComponent","dataBsParent","getTargetElement","targetAttr","doc","getDocument","map","att","attValue","filter","carouselSelector","carouselItem","dataBsSlideTo","dataBsSlide","pausedClass","carouselDefaults","pause","keyboard","touch","interval","getCarouselInstance","startX","currentX","endX","carouselSlideEvent","carouselSlidEvent","carouselTransitionEndHandler","index","direction","slides","isAnimating","activeItem","getActiveIndex","orientation","directionClass","Timer","cycle","hidden","isPaused","carouselPauseHandler","carouselResumeHandler","carouselIndicatorHandler","newIndex","to","carouselControlsHandler","next","prev","carouselKeyHandler","code","$1t1Wn","isElementInScrollRange","RTL","isRTL","keyArrowRight","keyArrowLeft","carouselDragHandler","isTouch","indicator","controls","stopImmediatePropagation","stopPropagation","carouselPointerDownHandler","indicators","every","el","pageX","toggleCarouselTouchHandlers","carouselPointerMoveHandler","carouselPointerUpHandler","_a","find","i2","getSelection","toString","abs","activateCarouselIndicator","passiveHandler","isHTMLElement","indexOf","$6332dc3ea9a0ae64$export$144901db2ea8e967","Carousel","_$n","mouseenterEvent","mouseleaveEvent","touchstartEvent","arrow","keydownEvent","o1","i3","activeIndex","transitionItem","ar","r1","idx","eventProperties","relatedTarget","from","ObjectAssign","getElementTransitionDuration","reflow","_this1","clone","collapsingClass","collapseString","collapseComponent","collapseSelector","collapseToggleSelector","collapseDefaults","parent","getCollapseInstance","showCollapseEvent","shownCollapseEvent","hideCollapseEvent","hiddenCollapseEvent","collapseContent","triggers","noop","setElementStyle","scrollHeight","btn","ariaExpanded","collapseClickHandler","trigger","$6332dc3ea9a0ae64$export$78768a9af065a7b","Collapse","ref7","o2","i4","activeCollapse","activeCollapseInstance","expandCollapse","hide","show","dropdownMenuClasses","dropdownComponent","dropdownMenuClass","isEmptyAnchor","parentAnchor","slice","dropdownClasses","dropdownString","dropupString","dropstartString","dropendString","dropdownSelector","getDropdownInstance","dropdownMenuEndClass","verticalClass","horizontalClass","menuFocusTags","dropdownDefaults","offset","display","showDropdownEvent","shownDropdownEvent","hideDropdownEvent","hiddenDropdownEvent","updatedDropdownEvent","styleDropdown","menu","parentElement","getElementStyle","menuEnd","positionClass","dropdownMargin","dropdown","dropup","dropstart","dropend","dropdownPosition","menuStart","D","getDocumentElement","q","clientWidth","Y","Bt","leftFullExceed","targetLeft","menuWidth","rightFullExceed","targetWidth","bottomExceed","targetTop","menuHeight","bottomFullExceed","topExceed","leftExceed","rightExceed","posAjust","margins","margin","join","toggleDropdownDismiss","open","dropdownDismissHandler","focusEvent","dropdownPreventScroll","dropdownKeyHandler","scrollEvent","resizeEvent","ev","getWindow","dropdownLayoutHandler","getCurrentOpenDropdown","currentParent","children","isForm","mousedownEvent","dropdownClickHandler","keyArrowDown","keyArrowUp","activeElement","menuItems","firstElementChild","getMenuItems","keyEscape","$6332dc3ea9a0ae64$export$931cbfb6bfb85fc","Dropdown","currentElement","currentInstance","modalString","modalComponent","offcanvasComponent","stickyTopClass","positionStickyClass","getFixedItems","measureScrollbar","innerWidth","setScrollbar","overflow","bd","getDocumentBody","bodyPad","parseInt","sbWidth","fixedItems","paddingRight","fixed","itemPadValue","itemMValue","marginRight","offcanvasString","popupContainer","className","appendPopup","customContainer","containerIsBody","isNode","lookup","BODY","append","removePopup","hasPopup","backdropString","modalBackdropClass","offcanvasBackdropClass","modalActiveSelector","offcanvasActiveSelector","overlay","getCurrentOpen","toggleOverlayType","isModal","targetClass","appendOverlay","hasFade","showOverlay","hideOverlay","removeOverlay","resetScrollbar","isVisible","offsetParent","modalSelector","modalToggleSelector","modalDismissSelector","modalStaticClass","modalDefaults","backdrop","getModalInstance","showModalEvent","shownModalEvent","hideModalEvent","hiddenModalEvent","setModalScrollbar","scrollbarWidth","modalOverflow","padStyle","toggleModalDismiss","update","modalDismissHandler","modalKeyHandler","afterModalHide","focusElement","afterModalShow","beforeModalShow","ariaHidden","ariaModal","beforeModalHide","modalClickHandler","_b","isStatic","modalDialog","selectedText","targetInsideDialog","staticTransitionEnd","duration","$6332dc3ea9a0ae64$export$2b77a92f1a5ad772","Modal","o3","overlayDelay","currentOpen","that","callback","offcanvasSelector","offcanvasToggleSelector","offcanvasDismissSelector","offcanvasTogglingClass","offcanvasDefaults","scroll","getOffcanvasInstance","showOffcanvasEvent","shownOffcanvasEvent","hideOffcanvasEvent","hiddenOffcanvasEvent","toggleOffCanvasDismiss","offcanvasKeyDismissHandler","offcanvasDismissHandler","beforeOffcanvasShow","setOffCanvasScrollbar","visibility","showOffcanvasComplete","offcanvasTriggerHandler","offCanvasDismiss","selection","hideOffcanvasComplete","visibleTrigger","$6332dc3ea9a0ae64$export$591ca0244c9dfcd4","Offcanvas","o4","blur","beforeOffcanvasHide","delay","popoverString","popoverComponent","tooltipString","getTipTemplate","tipType","isTooltip","bodyClass","header","tipClassPositions","styleTip","tooltip","container","tipPositions","isPopover","placement","fixedParent","parentCWidth","parentOWidth","htmlcw","htmlow","leftBoundry","rightBoundry","Rt","pt","ref12","elemRectLeft","elemRectTop","ut","topPosition","bottomPosition","leftPosition","rightPosition","arrowTop","arrowLeft","arrowRight","arrowWidth","arrowHeight","arrowAdjust","tipHeight","elemHeight","htmlch","tipWidth","elemWidth","horizontals","verticals","tipClasses","elemRectRight","updatedTooltipEvent","tooltipDefaults","template","title","customClass","sanitizeFn","animation","content","dismissible","btnClose","dataOriginalTitle","tooltipComponent","setHtml","dirty","trim","isFunction","tempDocument","DOMParser","parseFromString","childNodes","isNodeList","Array","isArray","tooltipSelector","titleAttr","getTooltipInstance","hasTip","toggleTooltipAction","handleTouch","tooltipShownAction","shownTooltipEvent","tooltipHiddenAction","hiddenTooltipEvent","ariaDescribedBy","removeTooltip","toggleTooltipOpenHandlers","parentModal","parentOffcanvas","win","scrollTarget","handleHide","toggleTooltipTitle","titleAtt","$6332dc3ea9a0ae64$export$28c660c63b792dea","Tooltip","enabled","split","tr","handleShow","focusinEvent","focusoutEvent","isApple","handleFocus","o5","tipString","tipComponent","elem","getUID","majorBlockTags","containers","getParentNode","isShadowRoot","isTableElement","push","getElementContainer","position","titleParts","contentParts","tooltipTemplate","placementClass","htmlMarkup","firstChild","cloneNode","tooltipHeader","tooltipBody","tempTitle","tempContent","tempBtn","createTip","outTimer","tipContainer","showTooltipEvent","hideTooltipEvent","disable","enable","disposeTooltipComplete","popoverSelector","popoverDefaults","$6332dc3ea9a0ae64$export$5b6b19405a83ff9d","Popover","Dt","scrollspyComponent","scrollspyDefaults","activateScrollSpy","getScrollHeight","getOffsetHeight","isWindow","innerHeight","clear","item","activate","parents","parentItem","menuItem","parentLink","previousElementSibling","$6332dc3ea9a0ae64$export$a6472a5298a374be","ScrollSpy","href","targetItem","rect","itemsLength","isWin","links","scrollHEIGHT","scrollTop","scrollY","items","offsets","maxScroll","link","charAt","offsetTop","updateSpyTargets","ref15","newActiveItem","$l5bVx","refresh","ref17","o6","i7","tabString","tabSelector","getTabInstance","showTabEvent","shownTabEvent","hideTabEvent","hiddenTabEvent","tabPrivate","triggerTabEnd","tabContent","nav","triggerTabShow","tab","nextContent","currentHeight","nextHeight","triggerTabHide","getActiveTab","activeTabs","getParentDropdown","tabClickHandler","$6332dc3ea9a0ae64$export$3e41faf802a29e71","Tab","firstTab","firstTabContent","ariaSelected","activeDropdown","toggleTab","toastString","toastComponent","toastSelector","toastDismissSelector","toastToggleSelector","showingClass","hideClass","toastDefaults","autohide","getToastInstance","showToastEvent","shownToastEvent","hideToastEvent","hiddenToastEvent","showToastComplete","hideToastComplete","toastClickHandler","interactiveToastHandler","$6332dc3ea9a0ae64$export$8d8dc7d5f743331b","Toast","isShown","showToast","hideToast","ref21","o7","i8","componentsList","initCallback","context","lookUp","elemCollection","cs","init","selector","collection","initComponentDataAPI","$44ae6d9db4eaca0f$var$form","_elements","elements","userName","phone","email","question","userData","comment","console","log","data1","BASE_URL","ENDPOINT","post","then","alert","catch","error","finally","reset"],"version":3,"file":"index.7918eaad.js.map"}